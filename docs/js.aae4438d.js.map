{"version":3,"sources":["../node_modules/@vue/shared/dist/shared.esm-bundler.js","../node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js","../node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js","../node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js","../src/index.js","../src/tokenizer/types.js","../src/util/scopeflags.js","../src/util/whitespace.js","../src/util/location.js","../src/parser/base.js","../src/parser/comments.js","../src/parser/error-message.js","../src/parser/error.js","../src/plugins/estree.js","../src/tokenizer/context.js","../../babel-helper-validator-identifier/src/identifier.js","../../babel-helper-validator-identifier/src/keyword.js","../src/util/identifier.js","../src/plugins/flow.js","../src/plugins/jsx/xhtml.js","../src/plugins/jsx/index.js","../src/util/scope.js","../src/plugins/typescript/scope.js","../src/util/production-parameter.js","../src/plugins/typescript/index.js","../src/plugins/placeholders.js","../src/plugins/v8intrinsic.js","../src/plugin-utils.js","../src/options.js","../src/tokenizer/state.js","../src/tokenizer/index.js","../src/parser/util.js","../src/parser/node.js","../src/parser/lval.js","../src/parser/expression.js","../src/parser/statement.js","../src/util/class-scope.js","../src/parser/index.js","../node_modules/estree-walker/src/estree-walker.js","../node_modules/@vue/compiler-core/dist/compiler-core.esm-bundler.js","../node_modules/@vue/compiler-dom/dist/compiler-dom.esm-bundler.js","../node_modules/vue/dist/vue.esm-bundler.js","js/countries.js","../node_modules/component-emitter/index.js","../node_modules/fast-safe-stringify/index.js","../node_modules/superagent/node_modules/qs/lib/utils.js","../node_modules/superagent/node_modules/qs/lib/formats.js","../node_modules/superagent/node_modules/qs/lib/stringify.js","../node_modules/superagent/node_modules/qs/lib/parse.js","../node_modules/superagent/node_modules/qs/lib/index.js","../src/is-object.js","../src/request-base.js","../src/utils.js","../src/response-base.js","../src/agent-base.js","../src/client.js","js/api.js","js/index.js"],"names":["makeMap","str","expectsLowerCase","map","Object","create","list","split","i","length","val","toLowerCase","PatchFlagNames","GLOBALS_WHITE_LISTED","isGloballyWhitelisted","range","generateCodeFrame","source","start","end","lines","count","res","j","line","push","repeat","Math","max","String","lineLength","pad","min","join","specialBooleanAttrs","isSpecialBooleanAttr","isBooleanAttr","unsafeAttrCharRE","attrValidationCache","isSSRSafeAttrName","name","hasOwnProperty","isUnsafe","test","console","error","propsToAttrMap","acceptCharset","className","htmlFor","httpEquiv","isNoUnitNumericStyleProp","isKnownAttr","normalizeStyle","value","isArray","item","normalized","isString","parseStringStyle","key","isObject","listDelimiterRE","propertyDelimiterRE","cssText","ret","forEach","tmp","trim","stringifyStyle","styles","normalizedKey","startsWith","hyphenate","normalizeClass","HTML_TAGS","SVG_TAGS","VOID_TAGS","isHTMLTag","isSVGTag","isVoidTag","escapeRE","escapeHtml","string","match","exec","html","escaped","index","lastIndex","charCodeAt","substring","commentStripRE","escapeHtmlComment","src","replace","looseCompareArrays","a","b","equal","looseEqual","aValidType","isDate","bValidType","getTime","aKeysCount","keys","aHasKey","bHasKey","looseIndexOf","arr","findIndex","toDisplayString","JSON","stringify","replacer","_key","isMap","size","entries","reduce","isSet","values","isPlainObject","babelParserDefaultPlugins","EMPTY_OBJ","EMPTY_ARR","NOOP","NO","onRE","isOn","isModelListener","extend","assign","remove","el","indexOf","splice","prototype","hasOwn","call","Array","toTypeString","Date","isFunction","isSymbol","isPromise","then","catch","objectToString","toString","toRawType","slice","isIntegerKey","parseInt","isReservedProp","cacheStringFunction","fn","cache","hit","camelizeRE","camelize","_","c","toUpperCase","hyphenateRE","capitalize","charAt","toHandlerKey","hasChanged","oldValue","invokeArrayFns","fns","arg","def","obj","defineProperty","configurable","enumerable","toNumber","n","parseFloat","isNaN","_globalThis","getGlobalThis","globalThis","self","window","global","targetMap","WeakMap","effectStack","activeEffect","ITERATE_KEY","Symbol","MAP_KEY_ITERATE_KEY","isEffect","_isEffect","effect","options","raw","createReactiveEffect","lazy","stop","active","cleanup","onStop","uid","scheduler","undefined","includes","enableTracking","pop","resetTracking","id","allowRecurse","deps","delete","shouldTrack","trackStack","pauseTracking","last","track","target","type","depsMap","get","set","Map","dep","Set","has","add","trigger","newValue","oldTarget","effects","effectsToAdd","builtInSymbols","getOwnPropertyNames","filter","createGetter","shallowGet","readonlyGet","shallowReadonlyGet","arrayInstrumentations","isReadonly","shallow","receiver","readonlyMap","reactiveMap","targetIsArray","Reflect","isRef","shouldUnwrap","readonly","reactive","method","args","toRaw","l","apply","createSetter","shallowSet","hadKey","Number","result","deleteProperty","ownKeys","mutableHandlers","readonlyHandlers","shallowReactiveHandlers","shallowReadonlyHandlers","toReactive","toReadonly","toShallow","getProto","v","getPrototypeOf","get$1","isShallow","rawTarget","rawKey","wrap","has$1","set$1","deleteEntry","clear","hadItems","createForEach","callback","thisArg","observed","createIterableMethod","targetIsMap","isPair","iterator","isKeyOnly","innerIterator","next","done","createReadonlyMethod","mutableInstrumentations","shallowInstrumentations","readonlyInstrumentations","iteratorMethods","createInstrumentationGetter","instrumentations","mutableCollectionHandlers","shallowCollectionHandlers","readonlyCollectionHandlers","checkIdentityKeys","warn","targetTypeMap","rawType","getTargetType","isExtensible","createReactiveObject","shallowReactive","shallowReadonly","baseHandlers","collectionHandlers","proxyMap","existingProxy","targetType","proxy","Proxy","isReactive","isProxy","markRaw","convert","r","Boolean","__v_isRef","ref","createRef","shallowRef","RefImpl","constructor","_rawValue","_shallow","_value","newVal","rawValue","triggerRef","unref","shallowUnwrapHandlers","proxyRefs","objectWithRefs","CustomRefImpl","factory","_get","_set","customRef","toRefs","object","toRef","ObjectRefImpl","_object","ComputedRefImpl","getter","_setter","_dirty","computed","getterOrOptions","setter","stack","pushWarningContext","vnode","popWarningContext","msg","instance","component","appWarnHandler","appContext","config","warnHandler","trace","getComponentTrace","callWithErrorHandling","formatComponentName","warnArgs","formatTrace","currentVNode","normalizedStack","recurseCount","parentInstance","parent","logs","entry","formatTraceEntry","postfix","isRoot","open","close","props","formatProps","formatProp","ErrorTypeStrings","err","handleError","callWithAsyncErrorHandling","throwInDev","contextVNode","cur","exposedInstance","errorInfo","errorCapturedHooks","ec","appErrorHandler","errorHandler","logError","isFlushing","isFlushPending","queue","flushIndex","pendingPreFlushCbs","activePreFlushCbs","preFlushIndex","pendingPostFlushCbs","activePostFlushCbs","postFlushIndex","resolvedPromise","Promise","resolve","currentFlushPromise","currentPreFlushParentJob","RECURSION_LIMIT","nextTick","p","bind","queueJob","job","queueFlush","flushJobs","invalidateJob","queueCb","cb","activeQueue","pendingQueue","queuePreFlushCb","queuePostFlushCb","flushPreFlushCbs","seen","parentJob","flushPostFlushCbs","deduped","sort","getId","Infinity","checkRecursiveUpdates","Error","isHmrUpdating","hmrDirtyComponents","registerHMR","__hmrId","record","createRecord","unregisterHMR","rerender","newRender","from","render","renderCache","update","reload","newComp","comp","isClassComponent","__vccOpts","location","tryWrap","e","devtools","setDevtoolsHook","hook","devtoolsInitApp","app","version","emit","Fragment","Text","Comment","Static","devtoolsUnmountApp","devtoolsComponentAdded","createDevtoolsComponentHook","devtoolsComponentUpdated","devtoolsComponentRemoved","devtoolsComponentEmit","event","params","rawArgs","modelArg","modifiersKey","number","__VUE_PROD_DEVTOOLS__","handlerName","handler","onceHandler","emitted","normalizeEmitsOptions","asMixin","deopt","__emits","emits","hasExtends","__VUE_OPTIONS_API__","extendEmits","mixins","extends","isEmitListener","currentRenderingInstance","setCurrentRenderingInstance","accessedAttrs","markAttrsAccessed","renderComponentRoot","Component","withProxy","propsOptions","slots","attrs","data","setupState","ctx","fallthroughAttrs","shapeFlag","proxyToUse","normalizeVNode","getFunctionalFallthrough","root","inheritAttrs","some","filterModelListeners","cloneVNode","dirs","concat","transition","createVNode","getChildRoot","rawChildren","children","dynamicChildren","childRoot","filterSingleRoot","dynamicIndex","updatedRoot","patchFlag","filtered","child","isVNode","isElementRoot","shouldUpdateComponent","prevVNode","nextVNode","optimized","prevProps","prevChildren","nextProps","nextChildren","emitsOptions","$stable","hasPropsChanged","dynamicProps","nextKeys","updateHOCHostEl","subTree","isSuspense","__isSuspense","SuspenseImpl","process","n1","n2","container","anchor","parentComponent","parentSuspense","isSVG","rendererInternals","mountSuspense","patchSuspense","hydrate","hydrateSuspense","createSuspenseBoundary","Suspense","patch","o","createElement","hiddenContainer","suspense","pendingBranch","ssContent","ssFallback","setActiveBranch","um","unmount","newBranch","newFallback","activeBranch","isInFallback","isHydrating","isSameVNodeType","pendingId","onPending","timeout","setTimeout","fallback","hasWarned","m","move","parentNode","isUnmounted","resume","delayEnter","mode","afterLeave","hasUnresolvedAncestor","onResolve","fallbackVNode","onFallback","mountFallback","registerDep","setupRenderEffect","hydratedEl","asyncDep","asyncSetupResult","suspenseId","asyncResolved","handleSetupResult","placeholder","doRemove","node","hydrateNode","document","normalizeSuspenseChildren","content","normalizeSuspenseSlot","default","s","singleChild","queueEffectWithSuspense","branch","isRenderingCompiledSlot","setCompiledSlotRendering","renderSlot","slot","rendered","openBlock","createBlock","withCtx","renderFnWithContext","owner","closeBlock","_c","currentScopeId","scopeIdStack","pushScopeId","popScopeId","withScopeId","arguments","initProps","rawProps","isStateful","isSSR","InternalObjectKey","setFullProps","updateProps","rawPrevProps","rawCurrentProps","kebabKey","resolvePropValue","propsToUpdate","camelizedKey","needCastKeys","camelKey","opt","hasDefault","defaultValue","Function","setCurrentInstance","normalizePropsOptions","__props","extendProps","validatePropName","prop","booleanIndex","getTypeIndex","stringIndex","getType","ctor","isSameType","expectedTypes","len","validateProps","rawValues","validateProp","isAbsent","required","validator","isValid","types","valid","expectedType","assertType","getInvalidTypeMessage","isSimpleType","t","message","receivedType","expectedValue","styleValue","receivedValue","isExplicable","isBoolean","explicitTypes","elem","injectHook","currentInstance","prepend","hooks","wrappedHook","__weh","unshift","createHook","lifecycle","isInSSRComponentSetup","onBeforeMount","onMounted","onBeforeUpdate","onUpdated","onBeforeUnmount","onUnmounted","onRenderTriggered","onRenderTracked","onErrorCaptured","watchEffect","doWatch","INITIAL_WATCHER_VALUE","watch","immediate","deep","flush","onTrack","onTrigger","forceTrigger","traverse","onInvalidate","baseGetter","runner","queuePostRenderEffect","isMounted","recordInstanceBoundEffect","instanceWatch","publicThis","useTransitionState","state","isLeaving","isUnmounting","leavingVNodes","TransitionHookValidator","BaseTransitionImpl","appear","persisted","onBeforeEnter","onEnter","onAfterEnter","onEnterCancelled","onBeforeLeave","onLeave","onAfterLeave","onLeaveCancelled","onBeforeAppear","onAppear","onAfterAppear","onAppearCancelled","setup","getCurrentInstance","prevTransitionKey","getTransitionRawChildren","emptyPlaceholder","innerChild","getKeepAliveChild","enterHooks","resolveTransitionHooks","setTransitionHooks","oldChild","oldInnerChild","transitionKeyChanged","getTransitionKey","leavingHooks","delayLeave","earlyRemove","delayedLeave","getLeavingNodesForType","_leaveCb","BaseTransition","leavingVNodesCache","callHook","beforeEnter","leavingVNode","enter","afterHook","cancelHook","called","_enterCb","cancelled","leave","clone","isKeepAlive","keepComment","keyedFragmentCount","__isKeepAlive","KeepAliveImpl","inheritRef","include","RegExp","exclude","current","sharedContext","renderer","_unmount","storageContainer","resetShapeFlag","pruneCache","getName","pruneCacheEntry","cached","activate","isDeactivated","vnodeHook","onVnodeMounted","invokeVNodeHook","deactivate","da","onVnodeUnmounted","matches","pendingCacheKey","cacheSubtree","getInnerChild","rawVNode","cachedVNode","KeepAlive","displayName","pattern","onActivated","registerKeepAliveHook","onDeactivated","__wdc","injectToKeepAliveRoot","keepAliveRoot","injected","isInternalKey","normalizeSlotValue","normalizeSlot","rawSlot","normalizeObjectSlots","rawSlots","_ctx","normalizeVNodeSlots","initSlots","updateSlots","needDeletionCheck","deletionComparisonTarget","isBuiltInDirective","validateDirectiveName","withDirectives","directives","internalInstance","bindings","dir","modifiers","mounted","updated","invokeDirectiveHook","oldBindings","binding","createAppContext","isNativeTag","performance","globalProperties","optionMergeStrategies","isCustomElement","components","provides","createAppAPI","rootComponent","rootProps","context","installedPlugins","_uid","_component","_props","_container","_context","use","plugin","install","mixin","directive","mount","rootContainer","isHydrate","__vue_app__","provide","hasMismatch","isSVGContainer","namespaceURI","tagName","isComment","nodeType","createHydrationFunctions","mt","mountComponent","patchProp","nextSibling","insert","createComment","isFragmentStart","onMismatch","handleMismatch","domType","nextNode","needToAdoptContent","staticCount","outerHTML","hydrateFragment","hydrateElement","hydrateComponent","loadAsync","__asyncLoader","locateClosingAsyncAnchor","hydrateChildren","setRef","onClick","vnodeHooks","onVnodeBeforeMount","innerHTML","textContent","firstChild","parentVNode","isFragment","supported","perf","startMeasure","isSupported","mark","endMeasure","startTag","endTag","measure","clearMarks","initFeatureFlags","needWarn","prodEffectOptions","createDevEffectOptions","rtc","rtg","rawRef","oldRawRef","oldRef","refs","doSet","createRenderer","baseCreateRenderer","createHydrationRenderer","createHydrationFns","hostInsert","hostRemove","hostPatchProp","forcePatchProp","hostForcePatchProp","hostCreateElement","createText","hostCreateText","hostCreateComment","setText","hostSetText","setElementText","hostSetElementText","hostParentNode","hostNextSibling","setScopeId","hostSetScopeId","cloneNode","hostCloneNode","insertStaticContent","hostInsertStaticContent","getNextHostNode","processText","processCommentNode","mountStaticNode","processFragment","processElement","processComponent","internals","mountElement","patchElement","scopeId","is","mountChildren","unmountChildren","needCallTransitionHooks","treeOwnerId","__scopeId","cloneIfMounted","oldProps","newProps","onVnodeBeforeUpdate","patchProps","class","style","prev","areChildrenSVG","patchBlockChildren","patchChildren","onVnodeUpdated","oldChildren","newChildren","fallbackContainer","oldVNode","newVNode","fragmentStartAnchor","fragmentEndAnchor","traverseStaticChildren","updateComponent","initialVNode","createComponentInstance","setupComponent","updateComponentPreRender","bu","u","originNext","nextTree","prevTree","bm","c1","prevShapeFlag","c2","patchKeyedChildren","patchUnkeyedChildren","oldLength","newLength","commonLength","nextChild","parentAnchor","l2","e1","e2","nextPos","s1","s2","keyToNewIndexMap","patched","toBePatched","moved","maxNewIndexSoFar","newIndexToOldIndexMap","prevChild","newIndex","increasingNewIndexSequence","getSequence","nextIndex","moveType","needTransition","performLeave","shouldInvokeDirs","onVnodeBeforeUnmount","unmountComponent","isTeleportDisabled","removeFragment","performRemove","bum","_vnode","mc","pc","pbc","createApp","ch1","ch2","arrI","isTeleport","__isTeleport","disabled","resolveTarget","select","targetSelector","to","TeleportImpl","querySelector","mainAnchor","targetAnchor","wasDisabled","currentContainer","currentAnchor","moveTeleport","nextTarget","hydrateTeleport","isReorder","targetNode","_lpa","Teleport","COMPONENTS","DIRECTIVES","resolveComponent","resolveAsset","NULL_DYNAMIC_COMPONENT","resolveDynamicComponent","resolveDirective","warnMissing","selfName","registry","blockStack","currentBlock","disableTracking","vnodeArgsTransformer","setBlockTracking","__v_isVNode","transformVNodeArgs","transformer","createVNodeWithArgsTransform","_createVNode","normalizeKey","normalizeRef","isBlockNode","cloned","normalizeChildren","klass","extraProps","mergeRef","mergedProps","mergeProps","createTextVNode","text","flag","createStaticVNode","numberOfNodes","createCommentVNode","asBlock","slotFlag","toMerge","existing","incoming","parentProvides","inject","treatDefaultAsFactory","createDuplicateChecker","isInBeforeCreate","applyOptions","deferredData","deferredWatch","deferredProvide","extendsOptions","dataOptions","computedOptions","methods","watchOptions","provideOptions","injectOptions","beforeMount","beforeUpdate","activated","deactivated","beforeDestroy","beforeUnmount","destroyed","unmounted","renderTracked","renderTriggered","errorCaptured","globalMixins","callSyncHook","applyMixins","methodHandler","dataFn","resolveData","createWatcher","callHookFromMixins","base","callHookFromExtends","selfHook","baseHook","chainedMixins","createPathGetter","path","segments","resolveMergedOptions","__merged","mergeOptions","strats","publicPropertiesMap","$","$el","$data","$props","$attrs","$slots","$refs","$parent","$root","$emit","$options","$forceUpdate","$nextTick","$watch","PublicInstanceProxyHandlers","accessCache","normalizedProps","publicGetter","cssModule","__cssModules","RuntimeCompiledPublicInstanceProxyHandlers","unscopables","createRenderContext","exposePropsOnRenderContext","exposeSetupStateOnRenderContext","emptyAppContext","uid$1","setupContext","bc","isBuiltInTag","validateComponentName","appIsNativeTag","compile","setupResult","setupStatefulComponent","createSetupContext","resolvedResult","finishComponentSetup","devtoolsRawSetupState","registerRuntimeCompiler","_compile","template","delimiters","_rc","attrHandlers","classifyRE","classify","__file","inferFromRegistry","defineComponent","defineAsyncComponent","loader","loadingComponent","errorComponent","delay","suspensible","onError","userOnError","pendingRequest","resolvedComp","retries","retry","load","thisRequest","reject","__esModule","toStringTag","createInnerComp","loaded","delayed","h","propsOrChildren","ssrContextKey","useSSRContext","initCustomFormatter","renderList","renderItem","toHandlers","createSlots","dynamicSlots","ssrUtils","svgNS","doc","tempContainer","tempSVGContainer","nodeOps","insertBefore","removeChild","tag","createElementNS","createTextNode","nodeValue","selector","setAttribute","temp","first","patchClass","transitionClasses","_vtc","patchStyle","setStyle","removeAttribute","importantRE","setProperty","prefixed","autoPrefix","prefixes","prefixCache","rawName","xlinkNS","patchAttr","removeAttributeNS","setAttributeNS","patchDOMProp","_getNow","now","createEvent","timeStamp","cachedNow","reset","getNow","addEventListener","removeEventListener","patchEvent","prevValue","nextValue","invokers","_vei","existingInvoker","parseName","createInvoker","optionsModifierRE","initialValue","invoker","attached","patchStopImmediatePropagation","originalStop","stopImmediatePropagation","_stopped","nativeOnRE","shouldSetAsProp","_trueValue","_falseValue","useCssModule","modules","mod","useCssVars","scoped","prefix","setVars","setVarsOnVNode","vars","TRANSITION","ANIMATION","Transition","resolveTransitionProps","DOMTransitionPropsValidators","css","duration","enterFromClass","enterActiveClass","enterToClass","appearFromClass","appearActiveClass","appearToClass","leaveFromClass","leaveActiveClass","leaveToClass","TransitionPropsValidators","baseProps","durations","normalizeDuration","enterDuration","leaveDuration","finishEnter","isAppear","removeTransitionClass","finishLeave","makeEnterHook","nextFrame","addTransitionClass","whenTransitionEnds","NumberOf","validateDuration","cls","classList","requestAnimationFrame","propCount","getTransitionInfo","endEvent","ended","onEnd","getComputedStyle","getStyleProperties","transitionDelays","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationDurations","animationTimeout","hasTransform","delays","d","toMs","positionMap","newPositionMap","TransitionGroupImpl","moveClass","hasCSSTransform","callPendingCbs","recordPosition","movedChildren","applyTranslation","forceReflow","transform","webkitTransform","transitionDuration","_moveCb","propertyName","cssTransitionProps","getBoundingClientRect","TransitionGroup","oldPos","newPos","dx","left","dy","top","body","offsetHeight","display","appendChild","getModelAssigner","onCompositionStart","composing","onCompositionEnd","initEvent","dispatchEvent","vModelText","created","_assign","castToNumber","domValue","activeElement","vModelCheckbox","setChecked","modelValue","_modelValue","elementValue","getValue","checked","found","getCheckboxValue","vModelRadio","vModelSelect","selectedVal","selected","multiple","setSelected","_binding","isMultiple","option","optionValue","selectedIndex","vModelDynamic","callModelHook","modelToUse","systemModifiers","modifierGuards","stopPropagation","prevent","preventDefault","currentTarget","ctrl","ctrlKey","shift","shiftKey","alt","altKey","meta","metaKey","button","middle","right","exact","withModifiers","guard","keyNames","esc","space","up","down","withKeys","eventKey","k","vShow","_vod","setDisplay","rendererOptions","enabledHydration","ensureRenderer","ensureHydrationRenderer","containerOrSelector","normalizeContainer","createSSRApp","injectNativeTagCheck","writable","beforeExpr","startsExpr","isLoop","isAssign","TokenType","label","conf","keyword","rightAssociative","binop","updateContext","keywords","createKeyword","token","createBinop","num","bigint","decimal","regexp","eof","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","ellipsis","backQuote","dollarBraceL","at","hash","interpreterDirective","eq","incDec","bang","tilde","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","exponent","_break","_case","_catch","_continue","_debugger","_default","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","SCOPE_OTHER","SCOPE_PROGRAM","SCOPE_FUNCTION","SCOPE_ARROW","SCOPE_SIMPLE_CATCH","SCOPE_SUPER","SCOPE_DIRECT_SUPER","SCOPE_CLASS","SCOPE_TS_MODULE","SCOPE_VAR","BIND_KIND_VALUE","BIND_KIND_TYPE","BIND_SCOPE_VAR","BIND_SCOPE_LEXICAL","BIND_SCOPE_FUNCTION","BIND_FLAGS_NONE","BIND_FLAGS_CLASS","BIND_FLAGS_TS_ENUM","BIND_FLAGS_TS_CONST_ENUM","BIND_FLAGS_TS_EXPORT_ONLY","BIND_CLASS","BIND_LEXICAL","BIND_VAR","BIND_FUNCTION","BIND_TS_INTERFACE","BIND_TS_TYPE","BIND_TS_ENUM","BIND_TS_AMBIENT","BIND_NONE","BIND_OUTSIDE","BIND_TS_CONST_ENUM","BIND_TS_NAMESPACE","CLASS_ELEMENT_FLAG_STATIC","CLASS_ELEMENT_KIND_GETTER","CLASS_ELEMENT_KIND_SETTER","CLASS_ELEMENT_KIND_ACCESSOR","CLASS_ELEMENT_STATIC_GETTER","CLASS_ELEMENT_STATIC_SETTER","CLASS_ELEMENT_INSTANCE_GETTER","CLASS_ELEMENT_INSTANCE_SETTER","CLASS_ELEMENT_OTHER","lineBreak","lineBreakG","isNewLine","code","skipWhiteSpace","isWhitespace","Position","col","column","SourceLocation","filename","identifierName","getLineInfo","input","offset","lineStart","BaseParser","inModule","scope","classScope","prodParam","plugins","sawUnambiguousESM","ambiguousScriptDifferentAst","hasPlugin","CommentsParser","comment","loc","trailingComments","leadingComments","elements","takeAllComments","lastElement","commentPreviousNode","newTrailingComments","leadingComment","lastChild","commentStack","lastInStack","adjustCommentsAfterTrailingComma","properties","innerComments","firstTrailingCommentIndex","ErrorMessages","freeze","AccessorIsGenerator","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitExpressionFormalParameter","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","DuplicateProto","DuplicateRegExpFlags","DuplicateStaticBlock","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","ImportCallArgumentTrailingComma","ImportCallArity","ImportCallNotNewExpression","ImportCallSpreadArgument","ImportMetaOutsideModule","ImportOutsideModule","InvalidBigIntLiteral","InvalidCodePoint","InvalidDecimal","InvalidDigit","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","InvalidIdentifier","InvalidLhs","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","ParamDupe","PatternHasAccessor","PatternHasMethod","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","StaticPrototype","StrictDelete","StrictEvalArguments","StrictEvalArgumentsBinding","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","ParserError","pos","startLoc","lastTokStart","lastTokStartLoc","endLoc","lastTokEnd","lastTokEndLoc","errorTemplate","raiseWithData","getLocationForPosition","_raise","errorContext","SyntaxError","errorRecovery","isLookahead","errors","isSimpleProperty","kind","superClass","flags","regex","estreeParseLiteral","bigInt","BigInt","parseLiteral","directiveLiteral","stmt","startNodeAt","expression","extra","finishNodeAt","isAsync","checkDeclaration","expr","bindingType","checkClashes","contextDescription","disallowLetBinding","checkLVal","isRecord","protoRef","refExpressionErrors","parenthesized","allowDirectives","topLevel","directiveStatements","directiveToStmt","classBody","isGenerator","isConstructor","allowsDirectSuper","parseMethod","typeParameters","tt","estreeParseRegExpLiteral","estreeParseBigIntLiteral","estreeParseDecimalLiteral","startPos","allowExpression","isMethod","allowDirectSuper","inClassScope","funcNode","startNode","finishNode","isPattern","isAccessor","shorthand","toAssignable","isLast","raise","Errors","optional","callee","exprList","isParenthesizedExpr","exported","specifiers","noCalls","optionalChainMember","chain","startNodeAtNode","TokContext","isExpr","preserveSpace","override","braceStatement","braceExpression","recordExpression","templateQuasi","parenStatement","parenExpression","readTmplToken","functionExpression","functionStatement","out","curContext","exprAllowed","prevType","allowed","hasYield","isIterator","braceIsBlock","statementParens","hasPrecedingLineBreak","b_stat","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","fromCharCode","isIdentifierChar","reservedWords","strict","strictBind","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","isStrictReservedWord","isStrictBindOnlyReservedWord","isStrictBindReservedWord","isKeyword","keywordRelationalOperator","isIteratorStart","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","OptionalBindingPattern","SpreadVariance","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","isEsModuleType","bodyElement","declaration","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","partition","list1","list2","FLOW_PRAGMA_REGEX","flowPragma","getPluginOption","tok","oldInType","inType","expect","flowParseType","moduloLoc","moduloPos","checksLoc","expectContextual","eat","parseExpression","predicate","flowParsePredicate","flowParseInterfaceish","parseIdentifier","typeNode","typeContainer","isRelational","flowParseTypeParameterDeclaration","flowParseFunctionTypeParams","rest","returnType","flowParseTypeAndPredicateInitialiser","typeAnnotation","resetEndLocation","semicolon","insideModule","flowParseDeclareClass","flowParseDeclareFunction","flowParseDeclareVariable","eatContextual","flowParseDeclareModuleExports","flowParseDeclareModule","isContextual","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","unexpected","flowParseTypeAnnotatableIdentifier","declareName","parseExprAtom","bodyNode","parseImport","flowParseDeclare","exit","hasModuleExport","isLet","suggestion","parseExport","exportKind","flowParseTypeAnnotation","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","implements","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","liberal","checkReservedType","flowParseTypeInitialiser","declare","supertype","impltype","requireDefault","nodeStart","variance","flowParseVariance","ident","bound","jsxTagStart","defaultRequired","typeParameter","flowParseTypeParameter","expectRelational","oldNoAnonFunctionType","noAnonFunctionType","flowParseTypeOrImplicitInstantiation","isStatic","static","lookahead","flowParseObjectPropertyKey","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","valueNode","endDelim","callProperties","indexers","internalSlots","inexact","protoStart","inexactStart","flowParseObjectTypeInternalSlot","flowParseObjectTypeIndexer","flowParseObjectTypeCallProperty","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","isInexactToken","argument","proto","flowCheckGetterSetterParams","property","paramCount","node2","qualification","flowParsePrimaryType","lh","checkNotUnderscore","flowParseGenericType","isGroupedType","flowParseInterfaceType","flowIdentToTypeAnnotation","flowParseTupleType","reinterpretTypeAsFunctionTypeParam","flowParseTypeofType","canInsertSemicolon","elementType","flowParsePrefixType","flowParsePostfixType","param","flowParseAnonFunctionWithoutParens","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","allowExpressionBody","forwardNoArrowParamsConversionAt","flowParseInterface","shouldParseEnums","flowParseEnumDeclaration","isValidDirective","refNeedsArrowPos","tryParse","failState","originalNoArrowAt","noArrowAt","consequent","failed","tryParseConditionalConsequent","invalid","getArrowLikeExpressions","alternate","parseMaybeAssign","noArrowParamsConversionAt","parseMaybeAssignAllowIn","disallowInvalid","arrows","finishArrowValidation","every","isAssignable","toAssignableList","trailingComma","parse","typeCastNode","decl","declarationNode","parseExportSpecifiers","parseExportFrom","hasNamespace","isStatement","optionalId","member","parseClassMemberFromModifier","finishOp","isBinding","element","operator","typeCastToParameter","trailingCommaPos","superTypeParameters","implemented","isPrivateNameAllowed","specifier","local","firstIdentLoc","firstIdent","specifierTypeKind","isLookaheadContextual","as_ident","imported","__clone","nodeIsTypeImport","specifierIsTypeImport","checkReservedWord","allowModifiers","afterLeftParse","jsx","tc","j_oTag","j_expr","abort","arrowExpression","resetStartLocationFromNode","maybeUnwrapTypeCastExpression","aborted","async","thrown","allowDuplicates","isArrowFunction","canBeArrow","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","finishCallExpression","shouldParseTypes","flowParseTypeParameterInstantiationCallOrNew","targs","parseFunctionParams","parseArrow","parseArrowExpression","hasFlowComment","nextToken","file","program","fileNode","skipFlowComment","hasFlowCommentCompletion","shiftToFirstNonWhiteSpace","ch3","enumName","memberName","suppliedType","explicitType","endOfInit","literal","parseBooleanLiteral","init","flowEnumMemberInit","flowEnumErrorInvalidMemberInitializer","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","memberNode","flowEnumMemberRaw","flowEnumErrorInvalidMemberName","flowEnumErrorDuplicateMemberName","flowEnumCheckExplicitTypeMismatch","flowEnumErrorBooleanMemberNotInitialized","flowEnumErrorNumberMemberNotInitialized","initializedMembers","flowEnumErrorStringMemberInconsistentlyInitailized","flowEnumErrorInvalidExplicitType","nameLoc","flowEnumParseExplicitType","flowEnumMembers","flowEnumStringMembers","empty","boolsLen","numsLen","strsLen","defaultedLen","flowEnumErrorInconsistentMemberValues","flowEnumBody","nextTokenStart","afterNext","entities","quot","amp","apos","lt","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","HEX_NUMBER","DECIMAL_NUMBER","JsxErrors","AttributeIsEmpty","MissingClosingTagFragment","MissingClosingTagElement","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","getQualifiedJSXName","namespace","j_cTag","jsxName","jsxText","jsxTagEnd","chunkStart","ch","finishToken","jsxReadEntity","jsxReadNewLine","normalizeCRLF","curLine","quote","entity","substr","fromCodePoint","XHTMLEntities","jsxParseIdentifier","jsxParseNamespacedName","newNode","jsxParseExpressionContainer","jsxParseEmptyExpression","jsxParseAttributeValue","jsxParseElementName","jsxParseOpeningElementAfterName","attributes","jsxParseAttribute","selfClosing","openingElement","jsxParseOpeningElementAt","closingElement","contents","jsxParseClosingElementAt","jsxParseElementAt","jsxParseSpreadChild","openingFragment","closingFragment","jsxParseElement","inPropertyName","jsxReadToken","jsxReadWord","jsxReadString","Scope","var","lexical","functions","ScopeHandler","scopeStack","undefinedExports","undefinedPrivateNames","createScope","currentScope","checkRedeclarationInScope","maybeExportDefined","isRedeclaredInScope","treatFunctionsAsVarInScope","currentVarScope","currentThisScope","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","PARAM","PARAM_YIELD","PARAM_AWAIT","PARAM_RETURN","PARAM_IN","ProductionParameterHandler","stacks","currentFlags","functionFlags","nonNull","x","assert","TSErrors","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstructorHasTypeParameters","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasStatic","IndexSignatureHasDeclare","InvalidTupleMemberLabel","MixedLabeledAndUnlabeledElements","OptionalTypeBeforeRequired","PatternIsOptional","PrivateElementHasAbstract","PrivateElementHasAccessibility","TypeAnnotationAfterAssign","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","keywordTypeFromName","allowedModifiers","modifier","tsTryParse","tsNextTokenCanFollowModifier","modified","tsParseModifier","parseElement","tsIsListTerminator","tsParseDelimitedListWorker","expectSuccess","bracket","skipFirstToken","tsParseDelimitedList","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","typeName","lhs","parameterName","tsParseTypeAnnotation","exprName","tsParseImportType","parseIdentifierName","constraint","tsEatThenParseType","tsParseTypeParameters","tsParseBracketedList","tsParseTypeParameter","tsParseTypeReference","returnToken","signature","returnTokenRequired","tsTryParseTypeParameters","parameters","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","parseBindingList","tsFillSignature","tsParseTypeMemberSemicolon","tsLookAhead","tsIsUnambiguouslyIndexSignature","tsTryParseTypeAnnotation","nodeAny","tsParseSignatureMember","createIdentifier","tsParsePropertyOrMethodSignature","idx","tsTryParseIndexSignature","parsePropertyName","tsParseObjectTypeMembers","tsParseList","tsParseTypeMember","tsIsIdentifier","tsExpectThenParseType","tsParseMappedTypeParameter","nameType","tsParseType","tsTryParseType","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","isLabeled","labeled","labeledNode","optionalTypeNode","restNode","parseTemplate","thisKeyword","tsParseThisTypeNode","tsParseThisTypePredicate","lookaheadCharCode","tsParseLiteralTypeNode","parseMaybeUnary","tsParseThisTypeOrThisTypePredicate","tsParseTypeQuery","tsIsStartOfMappedType","tsParseMappedType","tsParseTypeLiteral","tsParseTupleType","tsParseParenthesizedType","tsParseTemplateLiteralType","tsParseNonArrayType","objectType","indexType","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","find","kw","tsParseTypeOperator","tsParseInferType","tsParseArrayTypeOrHigher","parseConstituentType","tsParseUnionOrIntersectionType","tsParseIntersectionTypeOrHigher","tsIsUnambiguouslyStartOfFunctionType","braceStackCounter","tsSkipParameterStart","tsInType","asserts","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","containsEsc","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","tsIsStartOfFunctionType","tsParseFunctionOrConstructorType","tsParseUnionTypeOrHigher","tsTryNextParseConstantContext","tsNextThenParseType","descriptor","originalStart","delimitedList","tsParseExpressionWithTypeArguments","tsParseHeritageClause","oldContext","tsDoThenParseType","initializer","isConst","tsParseEnumMember","parseBlockOrModuleBlockBody","nested","inner","tsParseModuleOrNamespaceDeclaration","tsParseModuleBlock","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","nany","isLineTerminator","starttype","tsInDeclareContext","parseFunctionStatement","parseClass","tsParseEnumDeclaration","parseVarStatement","tsParseAmbientExternalModuleDeclaration","tsParseDeclaration","tsTryParseDeclare","tsCheckLineTerminatorAndMatch","abstract","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","tokenType","oldMaybeInArrowParameters","maybeInArrowParameters","oldYieldPos","yieldPos","oldAwaitPos","awaitPos","tsTryParseAndCatch","tsTryParseTypeOrTypePredicateAnnotation","tsInNoContext","tsIsDeclarationStart","decorators","accessibility","parseAccessModifier","parseMaybeDefault","parseAssignableListItemTypes","elt","pp","parameter","bodilessType","isDeclareContext","items","isInParens","tsCheckForInvalidTypeCasts","nonNullExpression","atPossibleAsyncArrow","asyncArrowFn","tsTryParseGenericAsyncArrowFunction","parseTaggedTemplateExpression","leftStartPos","leftStartLoc","minPrec","reScan_lt_gt","parseExprOp","checkKeywords","ahead","tsParseImportEqualsDeclaration","importNode","isAbstractClass","tsParseModifiers","callParseClassMember","methodOrProp","tsParseExpressionStatement","isDeclare","tsTryParseExportDeclaration","resetStartLocation","definite","parseClassPropertyAnnotation","typeCast","ct","tsParseTypeAssertion","readToken_lt_gt","baseCount","firstParam","hasContextParam","oldIsDeclareContext","expectedNode","assertNoSpace","finishPlaceholder","isFinished","parsePlaceholder","parseStatement","takeDecorators","oldStrict","parseClassId","parseClassSuper","parseClassBody","expectPlugin","isUnparsedContextual","nextTokenStartSince","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","v8IntrinsicStart","identifier","parseV8Intrinsic","PIPELINE_PROPOSALS","RECORD_AND_TUPLE_SYNTAX_TYPES","validatePlugins","decoratorsBeforeExport","moduleAttributesVerionPluginOption","mixinPlugins","estree","flow","typescript","v8intrinsic","placeholders","mixinPluginNames","defaultOptions","sourceType","sourceFilename","startLine","allowAwaitOutsideFunction","allowReturnOutsideFunction","allowImportExportEverywhere","allowSuperOutsideMethod","allowUndeclaredExports","strictMode","ranges","tokens","createParenthesizedExpressions","getOptions","opts","State","potentialArrowAt","inParameters","maybeInAsyncArrowHead","inPipeline","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","decoratorStack","comments","octalPositions","exportedIdentifiers","tokensLength","curPosition","skipArrays","VALID_REGEX_FLAGS","forbiddenNumericSeparatorSiblings","decBinOct","hex","allowedNumericSeparatorSiblings","oct","bin","dec","Token","Tokenizer","ParserErrors","checkKeywordEscapes","pushToken","old","curr","lastIndexOf","skipSpace","getTokenFromCode","codePointAt","block","addComment","pushComment","startSkip","loop","skipBlockComment","skipLineComment","readToken_interpreter","readNumber","readRegexp","width","next2","readToken_dot","readToken_question","readRadixNumber","readString","readToken_slash","readToken_mult_modulo","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_eq_excl","readToken_numberSign","readWord","inClass","mods","char","charCode","radix","forceLen","allowNumSeparator","forbiddenSiblings","allowedSiblings","total","isBigInt","readInt","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","underscorePos","throwOnInvalid","codePos","readHexChar","readEscapedChar","containsInvalid","inTemplate","readCodePoint","octalStr","octal","escStart","identifierCheck","readWord1","keywordTypes","UtilParser","op","nameStart","nameEnd","messageOrType","missingPlugin","names","oldState","abortSignal","andThrow","shorthandAssign","doubleProto","ExpressionErrors","Node","parser","NodeUtils","processComment","locationNode","unwrapParenthesizedExpression","LValParser","toAssignableObjectExpressionProp","raiseRestNotLast","checkToRestConversion","raiseTrailingCommaAfterRest","toReferencedList","toReferencedListDeep","parseBindingAtom","parseObjectLike","closeCharCode","allowEmpty","elts","parseRestBinding","checkCommaAfterRest","parseDecorator","parseAssignableListItem","strictModeChanged","ExpressionParser","used","paramFlags","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","expressions","ownExpressionErrors","parseYield","parseMaybeConditional","checkExpressionErrors","parseExprOps","shouldExitDescending","parseConditional","prec","hasIn","checkPipelineAtInfixOperator","logical","coalesce","hasAwait","parseExprOpRightExpr","nextOp","withTopicPermittingContext","parseSmartPipelineBody","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","isAwaitAllowed","parseAwait","isDelete","parseUpdate","parseExprSubscripts","parseSubscripts","maybeAsyncArrow","oldMaybeInAsyncArrowHead","parseSubscript","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parseMaybePrivateName","usePrivateName","parseNoCallExpr","shouldParseAsyncArrow","parseAsyncArrowFromCallExpression","checkYieldAwaitInDefaultParams","quasi","possibleAsyncArrow","dynamicImport","allowPlaceholder","nodeForExtra","innerParenStart","oldInFSharpPipelineDirectBody","addExtra","parseExprListItem","parseSuper","parseImportMetaProperty","parseFunction","parseAsyncArrowUnaryFunction","parseDo","parseParenAndDistinguishExpression","parseArrayLike","parseFunctionOrFunctionSent","parseDecorators","parseNewOrNewTarget","primaryTopicReferenceIsAllowedInCurrentTopicContext","registerTopicReference","nextCh","lookaheadCh","expectOnePlugin","oldLabels","parseBlock","allowSuper","isPrivate","parseMetaProperty","innerStartPos","spreadStart","optionalCommaStart","innerStartLoc","spreadNodeStartPos","spreadNodeStartLoc","parseParenItem","innerEndPos","innerEndLoc","arrowNode","shouldParseArrow","parenStart","metaProp","inNonArrowFunction","parseNew","parseNewArguments","parseExprList","isTagged","cooked","tail","curElt","parseTemplateElement","quasis","parseTemplateSubstitution","propHash","parsePropertyDefinition","checkProto","isLiteralPropertyName","parseSpread","maybeAsyncOrAccessorProp","keyName","parseObjPropValue","getGetterSetterExpectedParamCount","getObjectOrClassMethodParams","checkGetterSetterParams","parseObjectMethod","parseObjectProperty","oldInPropertyName","generator","initFunction","parseFunctionBodyAndFinish","canBePattern","isTuple","setArrowFunctionParameters","parseFunctionBody","isExpression","oldInParameters","checkParams","hasStrictModeDirective","nonSimple","isSimpleParamList","errorPos","nameHash","inFunction","delegate","childExpression","checkSmartPipelineBodyEarlyErrors","parseSmartPipelineBodyInStyle","isSimpleReference","topicReferenceWasUsedInCurrentTopicContext","outerContextTopicState","outerContextSoloAwaitState","prodParamToSet","prodParamToClear","loopLabel","switchLabel","FUNC_NO_FLAGS","FUNC_STATEMENT","FUNC_HANGING_STATEMENT","FUNC_NULLABLE_ID","loneSurrogate","StatementParser","interpreter","parseInterpreterDirective","parseBlockBody","parseStatementContent","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseEmptyStatement","nextTokenCharCode","assertModuleNodeAllowed","isAsyncFunction","maybeName","parseLabeledStatement","parseExpressionStatement","allowExport","currentContextDecorators","decorator","canHaveLeadingDecorator","parseMaybeDecoratorArguments","isBreak","verifyBreakContinue","lab","withTopicForbiddingContext","parseHeaderExpression","awaitAt","parseFor","parseVar","declarations","parseForIn","description","declarationPosition","hasReturn","discriminant","cases","sawDefault","isCase","simple","clause","parseCatchClauseParam","finalizer","statementStart","createNewLexicalScope","afterBlockParse","parsedNonDirective","stmtToDirective","setStrict","isForIn","await","isFor","isTypescript","parseVarId","parseMaybeAssignDisallowIn","statement","isHangingStatement","requireId","parseFunctionId","registerFunctionStatementId","treatFunctionsAsVar","constructorAllowsSuper","hadConstructor","hadStaticBlock","parseClassMember","isClassMethod","pushClassMethod","isClassProperty","parseClassProperty","parseClassStaticBlock","parseClassMemberWithIsStatic","publicMethod","privateMethod","publicProp","privateProp","publicMember","parseClassElementName","pushClassPrivateMethod","isNonstaticConstructor","isSimple","maybeQuestionTokenStart","parsePostMemberNameModifiers","pushClassPrivateProperty","pushClassProperty","parseClassPrivateProperty","declarePrivateName","maybeParseExportDefaultSpecifier","parseAfterDefault","hasStar","eatExportStar","maybeParseExportNamespaceSpecifier","parseAfterNamespace","isFromRequired","hasSpecifiers","hasDeclaration","maybeParseExportNamedSpecifiers","maybeParseExportDeclaration","checkExport","parseExportDefaultExpression","isExportDefaultSpecifier","parseModuleExportName","shouldParseExportDeclaration","parseExportDeclaration","hasFrom","nextAfterFrom","checkNames","isDefault","isFrom","checkDuplicateExports","exportedName","checkLocalExport","nodes","surrogate","parseNext","maybeParseDefaultImportSpecifier","assertions","maybeParseImportAssertions","maybeParseModuleAttributes","attrNames","assertionKeyNode","parseAssertEntries","shouldParseDefaultImport","parseImportSpecifierLocal","parseImportSpecifier","ClassScope","privateNames","loneAccessors","ClassScopeHandler","oldClassScope","redefined","accessor","Parser","getScopeHandler","pluginsMap","parseTopLevel","pluginMap","getParser","ast","moduleError","getExpression","getParserClass","parserClassCache","pluginsFromOptions","pluginList","WalkerBase","__init","__init2","__init3","__init4","should_skip","should_remove","replacement","skip","SyncWalkerClass","walker","visit","_should_skip","_should_remove","_replacement","skipped","removed","AsyncWalkerClass","walk","asyncWalk","defaultOnError","createCompilerError","messages","additionalMessage","errorMessages","FRAGMENT","TELEPORT","SUSPENSE","KEEP_ALIVE","BASE_TRANSITION","OPEN_BLOCK","CREATE_BLOCK","CREATE_VNODE","CREATE_COMMENT","CREATE_TEXT","CREATE_STATIC","RESOLVE_COMPONENT","RESOLVE_DYNAMIC_COMPONENT","RESOLVE_DIRECTIVE","WITH_DIRECTIVES","RENDER_LIST","RENDER_SLOT","CREATE_SLOTS","TO_DISPLAY_STRING","MERGE_PROPS","TO_HANDLERS","CAMELIZE","CAPITALIZE","TO_HANDLER_KEY","SET_BLOCK_TRACKING","PUSH_SCOPE_ID","POP_SCOPE_ID","WITH_SCOPE_ID","WITH_CTX","helperNameMap","registerRuntimeHelpers","helpers","getOwnPropertySymbols","locStub","createRoot","hoists","imports","temps","codegenNode","createVNodeCall","isBlock","helper","createArrayExpression","createObjectExpression","createObjectProperty","createSimpleExpression","isConstant","createInterpolation","createCompoundExpression","createCallExpression","createFunctionExpression","returns","newline","isSlot","createConditionalExpression","createCacheExpression","createBlockStatement","createTemplateLiteral","createIfStatement","createAssignmentExpression","createSequenceExpression","createReturnStatement","isStaticExp","isBuiltInType","expected","isCoreComponent","nonIdentifierRE","isSimpleIdentifier","memberExpRE","isMemberExpression","getInnerRange","newLoc","advancePositionWithClone","numberOfCharacters","advancePositionWithMutation","linesCount","lastNewLinePos","condition","findDir","exp","findProp","dynamicOnly","isBindKey","hasDynamicKeyVBind","isText","isVSlot","isTemplateNode","tagType","isSlotOutlet","injectProp","propsWithInjection","alreadyExists","propKeyName","toValidAssetId","hasScopeRef","ids","branches","decodeRE","decodeMap","defaultParserOptions","getNamespace","getTextMode","isPreTag","decodeEntities","rawText","p1","baseParse","createParserContext","getCursor","parseChildren","getSelection","rawOptions","originalSource","inPre","inVPre","ancestors","ns","isEnd","parseInterpolation","emitError","parseComment","parseBogusComment","parseCDATA","advanceBy","parseTag","parseText","pushNode","removedWhitespace","prevIndex","nestedIndex","contentStart","closeIndex","wasInPre","wasInVPre","isPreBoundary","isVPreBoundary","isSelfClosing","startsWithEndTagOpen","isSpecialTemplateDirective","advanceSpaces","cursor","currentSource","parseAttributes","hasVIs","isBuiltInComponent","attributeNames","attr","parseAttribute","nameSet","parseAttributeValue","dirName","startOffset","getNewPosition","endsWith","isQuoted","valueLoc","endIndex","parseTextData","unexpectedChars","innerStart","innerEnd","rawContentLength","rawContent","preTrimContent","endTokens","xs","searchString","hoistStatic","isSingleElementRoot","resultCache","doNotHoistNode","hasHoistedNode","hasRuntimeConstant","staticType","getStaticType","hoist","getPatchFlag","hasNonHoistableProps","getNodeProps","transformHoist","childType","isRuntimeConstant","createTransformContext","prefixIdentifiers","cacheHandlers","nodeTransforms","directiveTransforms","expressionPlugins","ssr","ssrCssVars","bindingMetadata","identifiers","scopes","vFor","vSlot","vPre","vOnce","currentNode","childIndex","helperString","replaceNode","removeNode","removalIndex","onNodeRemoved","addIdentifiers","removeIdentifiers","hoisted","traverseNode","createRootCodegen","traverseChildren","nodeRemoved","exitFns","onExit","createStructuralDirectiveTransform","PURE_ANNOTATION","createCodegenContext","sourceMap","optimizeImports","runtimeGlobalName","runtimeModuleName","indentLevel","pure","indent","deindent","withoutNewLine","generate","onContextCreated","hasHelpers","useWithBlock","genFunctionPreamble","optimizeSources","genAssets","genNode","toJSON","VueBinding","aliasHelper","genHoists","assets","resolver","isText$1","genNodeListAsArray","multilines","genNodeList","genText","genExpression","genInterpolation","genCompoundExpression","genComment","genVNodeCall","genCallExpression","genObjectExpression","genArrayExpression","genFunctionExpression","genConditionalExpression","genCacheExpression","genExpressionAsPropertyKey","genNullableArgs","needNewline","needsParens","isNested","prohibitedKeywordRE","stripStringRE","validateBrowserExpression","asParams","asRawStatements","keywordMatch","isLiteralWhitelisted","transformExpression","processExpression","rawExp","bailConstant","knownIds","isDuplicate","needPrefix","shouldPrefix","isPropertyShorthand","isStaticPropertyKey","scopeIds","leadingText","isStaticProperty","transformIf","processIf","ifNode","siblings","sibling","createCodegenNodeForBranch","getParentCondition","processCodegen","createIfBranch","userKey","keyIndex","createChildrenCodegenNode","keyProperty","needFragmentWrapper","vnodeCall","isSameKey","branchExp","transformFor","processFor","forNode","renderExp","keyProp","isStableFragment","fragmentFlag","childBlock","isTemplate","slotOutlet","createForLoopParams","parseResult","parseForExpression","valueAlias","keyAlias","objectIndexAlias","forAliasRE","forIteratorRE","stripParensRE","inMatch","LHS","RHS","createAliasExpression","valueContent","trimmedOffset","iteratorMatch","keyContent","keyOffset","indexContent","defaultFallback","trackSlotScopes","trackVForSlotScopes","buildClientSlotFn","buildSlots","buildSlotFn","slotsProperties","buildDefaultSlotProperty","hasDynamicSlots","onComponentSlot","hasTemplateSlots","hasNamedDefaultSlot","implicitDefaultChildren","seenSlotNames","slotElement","slotDir","slotChildren","slotLoc","slotName","slotProps","dirLoc","staticSlotName","slotFunction","vIf","vElse","buildDynamicSlot","conditional","hasForwardedSlots","directiveImportMap","transformElement","isComponent","vnodeTag","resolveComponentType","isDynamicComponent","vnodeProps","vnodeChildren","vnodePatchFlag","vnodeDynamicProps","dynamicPropNames","vnodeDirectives","shouldUseBlock","propsBuildResult","buildProps","buildDirectiveArgs","shouldBuildAsSlots","hasDynamicTextChild","stringifyDynamicPropNames","isProp","builtIn","elementLoc","mergeArgs","runtimeDirectives","hasRef","hasClassBinding","hasStyleBinding","hasHydrationEventBinding","hasDynamicKeys","hasVnodeHook","analyzePatchFlag","isEventHandler","isBind","dedupeProperties","directiveTransform","needRuntime","propsExpression","knownProps","mergeAsArray","dirArgs","runtime","trueExpression","propsNamesString","transformSlotOutlet","processSlotOutlet","slotArgs","propsWithoutName","fnExpRE","transformOn","augmentor","eventName","isCacheable","isMemberExp","isInlineStatement","hasMultipleStatements","transformBind","transformText","hasText","callArgs","WeakSet","transformOnce","transformModel","createTransformProps","expString","propName","getBaseTransformPreset","on","model","baseCompile","isModuleMode","noopDirectiveTransform","V_MODEL_RADIO","V_MODEL_CHECKBOX","V_MODEL_TEXT","V_MODEL_SELECT","V_MODEL_DYNAMIC","V_ON_WITH_MODIFIERS","V_ON_WITH_KEYS","V_SHOW","TRANSITION_GROUP","decoder","decodeHtmlBrowser","isRawTextContainer","parserOptions","transformStyle","parseInlineCSS","createDOMCompilerError","DOMErrorMessages","transformVHtml","transformVText","baseResult","directiveToUse","isInvalidType","isEventOptionModifier","isNonKeyModifier","maybeKeyModifier","isKeyboardEvent","resolveModifiers","keyModifiers","nonKeyModifiers","eventOptionModifiers","transformClick","isStaticClick","handlerExp","modifierPostfix","transformShow","warnTransitionChildren","hasMultipleChildren","ignoreSideEffectTags","DOMNodeTransforms","DOMDirectiveTransforms","cloak","show","initDev","__VUE__","__VUE_DEVTOOLS_GLOBAL_HOOK__","info","compileCache","compileToFunction","runtimeDom","countries","iso3","lat","lon","hexTable","array","compactQueue","compacted","arrayToObject","plainObjects","merge","allowPrototypes","mergeTarget","targetItem","acc","decode","charset","strWithoutPlus","unescape","decodeURIComponent","encode","defaultEncoder","escape","$0","compact","isRegExp","isBuffer","combine","maybeMap","mapped","module","exports","percentTwenties","util","require","Format","RFC1738","RFC3986","formatters","utils","formats","arrayPrefixGenerators","brackets","indices","pushToArray","valueOrArray","toISO","toISOString","defaultFormat","defaults","addQueryPrefix","allowDots","charsetSentinel","delimiter","encoder","encodeValuesOnly","format","formatter","serializeDate","date","skipNulls","strictNullHandling","isNonNullishPrimitive","generateArrayPrefix","objKeys","keyPrefix","normalizeStringifyOptions","TypeError","arrayFormat","joined","arrayLimit","depth","ignoreQueryPrefix","interpretNumericEntities","parameterLimit","parseArrays","numberStr","parseArrayValue","isoSentinel","parseValues","cleanStr","limit","parts","skipIndex","bracketEqualsPos","encodedVal","parseObject","valuesParsed","leaf","cleanRoot","parseKeys","givenKey","segment","normalizeParseOptions","tempObj","newObj","RequestBase","clearTimeout","_timer","_responseTimeoutTimer","_uploadTimeoutTimer","_parser","responseType","_responseType","serialize","_serializer","_timeout","_responseTimeout","_uploadTimeout","deadline","response","upload","_maxRetries","_retries","_retryCallback","ERROR_CODES","STATUS_CODES","_shouldRetry","err_","status","crossDomain","_retry","req","request","_aborted","timedout","timedoutError","_end","_fullfilledPromise","_endCalled","url","ok","_okCallback","_isResponseOK","field","_header","getHeader","header","unset","_data","_getFormData","append","xhr","_auth","user","pass","base64Encoder","username","password","withCredentials","_withCredentials","redirects","_maxRedirects","maxResponseSize","_maxResponseSize","headers","send","isObject_","_formData","_isHost","sortQuery","_sort","_finalizeQueryString","query","_query","queryArray","_appendQueryString","_timeoutError","reason","errno","_setTimeouts","parseLinks","cleanHeader","changesOrigin","host","authorization","cookie","ResponseBase","_setHeaderProperties","links","link","_setStatusProperties","statusCode","statusType","redirect","clientError","serverError","toError","accepted","noContent","badRequest","unauthorized","notAcceptable","forbidden","notFound","unprocessableEntity","Agent","_defaults","_setDefaults","Emitter","safeStringify","qs","noop","Request","getXHR","XMLHttpRequest","protocol","ActiveXObject","pairs","pushEncodedKeyValuePair","subkey","encodeURI","encodeURIComponent","parseString","pair","parseHeader","fields","isJSON","mime","Response","responseText","statusText","getAllResponseHeaders","getResponseHeader","_parseBody","new_err","original","rawResponse","del","serializeObject","json","xml","urlencoded","form","accept","auth","btoa","attach","FormData","_callback","crossDomainError","agent","ca","buffer","write","pipe","_setUploadTimeout","onreadystatechange","readyState","handleProgress","direction","percent","hasListeners","contentType","setRequestHeader","head","post","put","getAffectedCountries","URL","affectedCountries","superagent","disaster","country","affected","beforeCreate"],"mappings":"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C5BC,kBAAmB,wBACnBC,WAAY,+BACZC,kBAAmB,uCACnBC,cAAe,iBACfC,yBACE,gEACFC,yBAA0B,4BAC1BC,+BAAgC,2CAChCC,8BAA+B,kCAC/BC,8BAA+B,4BAC/BC,sBACE,wEACFC,6BAA8B,mCAC9BC,mBAAoB,iCACpBC,oBACE,8EACFC,0BAA2B,uCAC3BC,qBAAsB,kCACtBC,iBAAkB,2BAClBC,sBACE,8DACFC,qBAAsB,4CACtBC,0BACE,qFACFC,iCACE,+CACFC,4BACE,8DACFC,kCACE,yDACFC,iCACE,gEACFC,sBAAuB,6BACvBC,yBAA0B,2BAC1BC,kBAAmB,8BACnBC,iBAAkB,kCAClBC,iBAAkB,mCAClBC,iCACE,6FACFC,kBACE,wFACFC,sBACE,0DACFC,2BACE,4DACFC,UAAW,sBACXC,mBAAoB,gDACpBC,iBAAkB,uCAClBC,oBACE,mGACFC,+BACE,iEACFC,+BACE,oEACFC,oBACE,8DACFC,uBACE,sEACFC,kCACE,+FACFC,oBACE,wGACFC,yBAA0B,6BAC1BC,0CACE,mIACFC,4CACE,qIACFC,6CACE,sIACFC,cAAe,mDACfC,kBAAmB,+CACnBC,eACE,0HACFC,gBAAiB,uDACjBC,aAAc,yCACdC,oBAAqB,mCACrBC,2BAA4B,8BAC5BC,eACE,qFACFC,oBAAqB,wDACrBC,mBAAoB,uDACpBC,WAAY,wBACZC,gBACE,kJACFC,kBAAmB,4CACnBC,kBAAmB,iDACnBC,yCACE,kIACFC,2CACE,oIACFC,4CACE,qIACFC,8BAA+B,kCAC/BC,iCACE,0FACFC,yBAA0B,oCAC1BC,uBACE,yDACFC,kBAAmB,0BACnBC,2BACE,6DACFC,6BACE,kEACFC,oBAAqB,2CACrBC,2BACE,yDACFC,uBACE,0JACFC,uBAAwB,gCACxBC,gBAAiB,sDACjBC,gBAAiB,wBACjBC,mCACE,mFACFC,gBAAiB,kDACjBC,2BACE,qDACFC,yBACE,8EACFC,kBAAmB,qDACnBC,wBAAyB,+CACzBC,8BACE,mDACFC,6BACE,kEACFC,iBACE,qHACFC,oBAAqB,uBACrBC,mBAAoB,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AAG,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,IAAI,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,IAAI,GAAG,IAAI,EAAE,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,EAAE,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,IAAI,GAAG,IAAI,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,KAAK,EAAE,KAAK,GAAG,EAAE,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE,EAAE,IAAI,KAAK,IAAI,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,KAAK,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,KAAK,GAAG,GAAG,EAAE,GAAG,EAAE,IAAI,GAAG,KAAK,IAAI,GAAG,GAAG,EAAE,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,KAAK,MAAM,GAAG,KAAK,GAAG,IAAI,EAAE,KAAK,GAAG,KAAK,KAAK,IAAI,KAAK,MAEpyCC,GAAwB,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,GAAG,IAAI,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,EA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sD,IAAI,CAC5B,IACA,MACA,OACA,UACA,QACA,UACA,QACA,YACA,QACA,OACA,SACA,SACA,SACA,OACA,SACA,SAKIisD,GAAan6D,OAAO+oD,OAAO,CAC/BqR,0BACE,iFACFC,2BACE,wKACFC,mBAAoB,oCACpBC,oBACE,0DACFC,6BACE,sEACFC,8BAA+B,+CAC/BC,gCACE,sGACFC,wBACE,oGACFC,6BACE,+KACFC,wBACE,mGACFC,uCACE,uGACFC,wCACE,gFACFC,uCACE,qEACFC,wCACE,iHACFC,sBACE,2HACFC,+BACE,0EACFC,0CACE,8GACFC,oCACE,wKACFC,mBACE,6EACFC,uBACE,0EACFC,gBAAiB,+CACjBC,oCACE,yFACFC,wBACE,0GACFC,oBACE,kEACFC,kBAAmB,yDACnBC,uBACE,iFACFC,eAAgB,yCAChBC,sBACE,mHACFC,kBACE,sEACFC,kCACE,sEACFC,uBAAwB,8BACxBC,6BACE,wDACFC,mCACE,wDACFC,qBACE,kEACFC,6BACE,kDACFC,kCACE,mEACFC,gDACE,mHACFC,6BACE,yDACFC,oCACE,mEACFC,wBAAyB,8BAI3B,SAASC,GAAeC,GAEpBA,MAAqB,gCAArBA,EAAYjvD,MACU,6BAArBivD,EAAYjvD,QACTivD,EAAYC,aACsB,cAAjCD,EAAYC,YAAYlvD,MACU,yBAAjCivD,EAAYC,YAAYlvD,MAIlC,SAASmvD,GAAkB51C,GAClBA,MAAoB,SAApBA,EAAK61C,YAA6C,WAApB71C,EAAK61C,WAG5C,SAASC,GAAqBluC,GAE1B,OAACA,EAAMnhB,OAAS0nD,EAAGlzD,QAAU2sB,EAAMnhB,KAAKiwC,UAA4B,SAAhB9uB,EAAM7rB,MAI9D,IAAMg6D,GAAoB,CACxBC,MAAO,qBACPC,IAAK,qBACLxvD,KAAM,cACNyvD,UAAW,oBAIb,SAASC,GACPp9D,EACAqC,GAIK,IAFCg7D,IAAAA,EAAQ,GACRC,EAAQ,GACLp9D,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,KAC9BmC,EAAKrC,EAAKE,GAAIA,EAAGF,GAAQq9D,EAAQC,GAAOn8D,KAAKn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","file":"js.aae4438d.js","sourceRoot":"..\\src","sourcesContent":["/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\r\nfunction makeMap(str, expectsLowerCase) {\r\n    const map = Object.create(null);\r\n    const list = str.split(',');\r\n    for (let i = 0; i < list.length; i++) {\r\n        map[list[i]] = true;\r\n    }\r\n    return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val];\r\n}\n\n// Patch flags are optimization hints generated by the compiler.\r\n// when a block with dynamicChildren is encountered during diff, the algorithm\r\n// enters \"optimized mode\". In this mode, we know that the vdom is produced by\r\n// a render function generated by the compiler, so the algorithm only needs to\r\n// handle updates explicitly marked by these patch flags.\r\n// dev only flag -> name mapping\r\nconst PatchFlagNames = {\r\n    [1 /* TEXT */]: `TEXT`,\r\n    [2 /* CLASS */]: `CLASS`,\r\n    [4 /* STYLE */]: `STYLE`,\r\n    [8 /* PROPS */]: `PROPS`,\r\n    [16 /* FULL_PROPS */]: `FULL_PROPS`,\r\n    [32 /* HYDRATE_EVENTS */]: `HYDRATE_EVENTS`,\r\n    [64 /* STABLE_FRAGMENT */]: `STABLE_FRAGMENT`,\r\n    [128 /* KEYED_FRAGMENT */]: `KEYED_FRAGMENT`,\r\n    [256 /* UNKEYED_FRAGMENT */]: `UNKEYED_FRAGMENT`,\r\n    [1024 /* DYNAMIC_SLOTS */]: `DYNAMIC_SLOTS`,\r\n    [512 /* NEED_PATCH */]: `NEED_PATCH`,\r\n    [-1 /* HOISTED */]: `HOISTED`,\r\n    [-2 /* BAIL */]: `BAIL`\r\n};\n\nconst GLOBALS_WHITE_LISTED = 'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' +\r\n    'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' +\r\n    'Object,Boolean,String,RegExp,Map,Set,JSON,Intl';\r\nconst isGloballyWhitelisted = /*#__PURE__*/ makeMap(GLOBALS_WHITE_LISTED);\n\nconst range = 2;\r\nfunction generateCodeFrame(source, start = 0, end = source.length) {\r\n    const lines = source.split(/\\r?\\n/);\r\n    let count = 0;\r\n    const res = [];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        count += lines[i].length + 1;\r\n        if (count >= start) {\r\n            for (let j = i - range; j <= i + range || end > count; j++) {\r\n                if (j < 0 || j >= lines.length)\r\n                    continue;\r\n                const line = j + 1;\r\n                res.push(`${line}${' '.repeat(Math.max(3 - String(line).length, 0))}|  ${lines[j]}`);\r\n                const lineLength = lines[j].length;\r\n                if (j === i) {\r\n                    // push underline\r\n                    const pad = start - (count - lineLength) + 1;\r\n                    const length = Math.max(1, end > count ? lineLength - pad : end - start);\r\n                    res.push(`   |  ` + ' '.repeat(pad) + '^'.repeat(length));\r\n                }\r\n                else if (j > i) {\r\n                    if (end > count) {\r\n                        const length = Math.max(Math.min(end - count, lineLength), 1);\r\n                        res.push(`   |  ` + '^'.repeat(length));\r\n                    }\r\n                    count += lineLength + 1;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    return res.join('\\n');\r\n}\n\n/**\r\n * On the client we only need to offer special cases for boolean attributes that\r\n * have different names from their corresponding dom properties:\r\n * - itemscope -> N/A\r\n * - allowfullscreen -> allowFullscreen\r\n * - formnovalidate -> formNoValidate\r\n * - ismap -> isMap\r\n * - nomodule -> noModule\r\n * - novalidate -> noValidate\r\n * - readonly -> readOnly\r\n */\r\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\r\nconst isSpecialBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs);\r\n/**\r\n * The full list is needed during SSR to produce the correct initial markup.\r\n */\r\nconst isBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs +\r\n    `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,` +\r\n    `loop,open,required,reversed,scoped,seamless,` +\r\n    `checked,muted,multiple,selected`);\r\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/;\r\nconst attrValidationCache = {};\r\nfunction isSSRSafeAttrName(name) {\r\n    if (attrValidationCache.hasOwnProperty(name)) {\r\n        return attrValidationCache[name];\r\n    }\r\n    const isUnsafe = unsafeAttrCharRE.test(name);\r\n    if (isUnsafe) {\r\n        console.error(`unsafe attribute name: ${name}`);\r\n    }\r\n    return (attrValidationCache[name] = !isUnsafe);\r\n}\r\nconst propsToAttrMap = {\r\n    acceptCharset: 'accept-charset',\r\n    className: 'class',\r\n    htmlFor: 'for',\r\n    httpEquiv: 'http-equiv'\r\n};\r\n/**\r\n * CSS properties that accept plain numbers\r\n */\r\nconst isNoUnitNumericStyleProp = /*#__PURE__*/ makeMap(`animation-iteration-count,border-image-outset,border-image-slice,` +\r\n    `border-image-width,box-flex,box-flex-group,box-ordinal-group,column-count,` +\r\n    `columns,flex,flex-grow,flex-positive,flex-shrink,flex-negative,flex-order,` +\r\n    `grid-row,grid-row-end,grid-row-span,grid-row-start,grid-column,` +\r\n    `grid-column-end,grid-column-span,grid-column-start,font-weight,line-clamp,` +\r\n    `line-height,opacity,order,orphans,tab-size,widows,z-index,zoom,` +\r\n    // SVG\r\n    `fill-opacity,flood-opacity,stop-opacity,stroke-dasharray,stroke-dashoffset,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width`);\r\n/**\r\n * Known attributes, this is used for stringification of runtime static nodes\r\n * so that we don't stringify bindings that cannot be set from HTML.\r\n * Don't also forget to allow `data-*` and `aria-*`!\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\r\n */\r\nconst isKnownAttr = /*#__PURE__*/ makeMap(`accept,accept-charset,accesskey,action,align,allow,alt,async,` +\r\n    `autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,` +\r\n    `border,buffered,capture,challenge,charset,checked,cite,class,code,` +\r\n    `codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,` +\r\n    `coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,` +\r\n    `disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,` +\r\n    `formaction,formenctype,formmethod,formnovalidate,formtarget,headers,` +\r\n    `height,hidden,high,href,hreflang,http-equiv,icon,id,importance,integrity,` +\r\n    `ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,` +\r\n    `manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,` +\r\n    `open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,` +\r\n    `referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,` +\r\n    `selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,` +\r\n    `start,step,style,summary,tabindex,target,title,translate,type,usemap,` +\r\n    `value,width,wrap`);\n\nfunction normalizeStyle(value) {\r\n    if (isArray(value)) {\r\n        const res = {};\r\n        for (let i = 0; i < value.length; i++) {\r\n            const item = value[i];\r\n            const normalized = normalizeStyle(isString(item) ? parseStringStyle(item) : item);\r\n            if (normalized) {\r\n                for (const key in normalized) {\r\n                    res[key] = normalized[key];\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    else if (isObject(value)) {\r\n        return value;\r\n    }\r\n}\r\nconst listDelimiterRE = /;(?![^(]*\\))/g;\r\nconst propertyDelimiterRE = /:(.+)/;\r\nfunction parseStringStyle(cssText) {\r\n    const ret = {};\r\n    cssText.split(listDelimiterRE).forEach(item => {\r\n        if (item) {\r\n            const tmp = item.split(propertyDelimiterRE);\r\n            tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());\r\n        }\r\n    });\r\n    return ret;\r\n}\r\nfunction stringifyStyle(styles) {\r\n    let ret = '';\r\n    if (!styles) {\r\n        return ret;\r\n    }\r\n    for (const key in styles) {\r\n        const value = styles[key];\r\n        const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key);\r\n        if (isString(value) ||\r\n            (typeof value === 'number' && isNoUnitNumericStyleProp(normalizedKey))) {\r\n            // only render valid values\r\n            ret += `${normalizedKey}:${value};`;\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nfunction normalizeClass(value) {\r\n    let res = '';\r\n    if (isString(value)) {\r\n        res = value;\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            res += normalizeClass(value[i]) + ' ';\r\n        }\r\n    }\r\n    else if (isObject(value)) {\r\n        for (const name in value) {\r\n            if (value[name]) {\r\n                res += name + ' ';\r\n            }\r\n        }\r\n    }\r\n    return res.trim();\r\n}\n\n// These tag configs are shared between compiler-dom and runtime-dom, so they\r\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element\r\nconst HTML_TAGS = 'html,body,base,head,link,meta,style,title,address,article,aside,footer,' +\r\n    'header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,' +\r\n    'figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,' +\r\n    'data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,' +\r\n    'time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,' +\r\n    'canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,' +\r\n    'th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,' +\r\n    'option,output,progress,select,textarea,details,dialog,menu,' +\r\n    'summary,template,blockquote,iframe,tfoot';\r\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Element\r\nconst SVG_TAGS = 'svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,' +\r\n    'defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,' +\r\n    'feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,' +\r\n    'feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,' +\r\n    'feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,' +\r\n    'fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,' +\r\n    'foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,' +\r\n    'mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,' +\r\n    'polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,' +\r\n    'text,textPath,title,tspan,unknown,use,view';\r\nconst VOID_TAGS = 'area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr';\r\nconst isHTMLTag = /*#__PURE__*/ makeMap(HTML_TAGS);\r\nconst isSVGTag = /*#__PURE__*/ makeMap(SVG_TAGS);\r\nconst isVoidTag = /*#__PURE__*/ makeMap(VOID_TAGS);\n\nconst escapeRE = /[\"'&<>]/;\r\nfunction escapeHtml(string) {\r\n    const str = '' + string;\r\n    const match = escapeRE.exec(str);\r\n    if (!match) {\r\n        return str;\r\n    }\r\n    let html = '';\r\n    let escaped;\r\n    let index;\r\n    let lastIndex = 0;\r\n    for (index = match.index; index < str.length; index++) {\r\n        switch (str.charCodeAt(index)) {\r\n            case 34: // \"\r\n                escaped = '&quot;';\r\n                break;\r\n            case 38: // &\r\n                escaped = '&amp;';\r\n                break;\r\n            case 39: // '\r\n                escaped = '&#39;';\r\n                break;\r\n            case 60: // <\r\n                escaped = '&lt;';\r\n                break;\r\n            case 62: // >\r\n                escaped = '&gt;';\r\n                break;\r\n            default:\r\n                continue;\r\n        }\r\n        if (lastIndex !== index) {\r\n            html += str.substring(lastIndex, index);\r\n        }\r\n        lastIndex = index + 1;\r\n        html += escaped;\r\n    }\r\n    return lastIndex !== index ? html + str.substring(lastIndex, index) : html;\r\n}\r\n// https://www.w3.org/TR/html52/syntax.html#comments\r\nconst commentStripRE = /^-?>|<!--|-->|--!>|<!-$/g;\r\nfunction escapeHtmlComment(src) {\r\n    return src.replace(commentStripRE, '');\r\n}\n\nfunction looseCompareArrays(a, b) {\r\n    if (a.length !== b.length)\r\n        return false;\r\n    let equal = true;\r\n    for (let i = 0; equal && i < a.length; i++) {\r\n        equal = looseEqual(a[i], b[i]);\r\n    }\r\n    return equal;\r\n}\r\nfunction looseEqual(a, b) {\r\n    if (a === b)\r\n        return true;\r\n    let aValidType = isDate(a);\r\n    let bValidType = isDate(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? a.getTime() === b.getTime() : false;\r\n    }\r\n    aValidType = isArray(a);\r\n    bValidType = isArray(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? looseCompareArrays(a, b) : false;\r\n    }\r\n    aValidType = isObject(a);\r\n    bValidType = isObject(b);\r\n    if (aValidType || bValidType) {\r\n        /* istanbul ignore if: this if will probably never be called */\r\n        if (!aValidType || !bValidType) {\r\n            return false;\r\n        }\r\n        const aKeysCount = Object.keys(a).length;\r\n        const bKeysCount = Object.keys(b).length;\r\n        if (aKeysCount !== bKeysCount) {\r\n            return false;\r\n        }\r\n        for (const key in a) {\r\n            const aHasKey = a.hasOwnProperty(key);\r\n            const bHasKey = b.hasOwnProperty(key);\r\n            if ((aHasKey && !bHasKey) ||\r\n                (!aHasKey && bHasKey) ||\r\n                !looseEqual(a[key], b[key])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return String(a) === String(b);\r\n}\r\nfunction looseIndexOf(arr, val) {\r\n    return arr.findIndex(item => looseEqual(item, val));\r\n}\n\n/**\r\n * For converting {{ interpolation }} values to displayed strings.\r\n * @private\r\n */\r\nconst toDisplayString = (val) => {\r\n    return val == null\r\n        ? ''\r\n        : isObject(val)\r\n            ? JSON.stringify(val, replacer, 2)\r\n            : String(val);\r\n};\r\nconst replacer = (_key, val) => {\r\n    if (isMap(val)) {\r\n        return {\r\n            [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val]) => {\r\n                entries[`${key} =>`] = val;\r\n                return entries;\r\n            }, {})\r\n        };\r\n    }\r\n    else if (isSet(val)) {\r\n        return {\r\n            [`Set(${val.size})`]: [...val.values()]\r\n        };\r\n    }\r\n    else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\r\n        return String(val);\r\n    }\r\n    return val;\r\n};\n\n/**\r\n * List of @babel/parser plugins that are used for template expression\r\n * transforms and SFC script transforms. By default we enable proposals slated\r\n * for ES2020. This will need to be updated as the spec moves forward.\r\n * Full list at https://babeljs.io/docs/en/next/babel-parser#plugins\r\n */\r\nconst babelParserDefaultPlugins = [\r\n    'bigInt',\r\n    'optionalChaining',\r\n    'nullishCoalescingOperator'\r\n];\r\nconst EMPTY_OBJ = (process.env.NODE_ENV !== 'production')\r\n    ? Object.freeze({})\r\n    : {};\r\nconst EMPTY_ARR = (process.env.NODE_ENV !== 'production') ? Object.freeze([]) : [];\r\nconst NOOP = () => { };\r\n/**\r\n * Always return false.\r\n */\r\nconst NO = () => false;\r\nconst onRE = /^on[^a-z]/;\r\nconst isOn = (key) => onRE.test(key);\r\nconst isModelListener = (key) => key.startsWith('onUpdate:');\r\nconst extend = Object.assign;\r\nconst remove = (arr, el) => {\r\n    const i = arr.indexOf(el);\r\n    if (i > -1) {\r\n        arr.splice(i, 1);\r\n    }\r\n};\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\r\nconst isArray = Array.isArray;\r\nconst isMap = (val) => toTypeString(val) === '[object Map]';\r\nconst isSet = (val) => toTypeString(val) === '[object Set]';\r\nconst isDate = (val) => val instanceof Date;\r\nconst isFunction = (val) => typeof val === 'function';\r\nconst isString = (val) => typeof val === 'string';\r\nconst isSymbol = (val) => typeof val === 'symbol';\r\nconst isObject = (val) => val !== null && typeof val === 'object';\r\nconst isPromise = (val) => {\r\n    return isObject(val) && isFunction(val.then) && isFunction(val.catch);\r\n};\r\nconst objectToString = Object.prototype.toString;\r\nconst toTypeString = (value) => objectToString.call(value);\r\nconst toRawType = (value) => {\r\n    // extract \"RawType\" from strings like \"[object RawType]\"\r\n    return toTypeString(value).slice(8, -1);\r\n};\r\nconst isPlainObject = (val) => toTypeString(val) === '[object Object]';\r\nconst isIntegerKey = (key) => isString(key) &&\r\n    key !== 'NaN' &&\r\n    key[0] !== '-' &&\r\n    '' + parseInt(key, 10) === key;\r\nconst isReservedProp = /*#__PURE__*/ makeMap(\r\n// the leading comma is intentional so empty string \"\" is also included\r\n',key,ref,' +\r\n    'onVnodeBeforeMount,onVnodeMounted,' +\r\n    'onVnodeBeforeUpdate,onVnodeUpdated,' +\r\n    'onVnodeBeforeUnmount,onVnodeUnmounted');\r\nconst cacheStringFunction = (fn) => {\r\n    const cache = Object.create(null);\r\n    return ((str) => {\r\n        const hit = cache[str];\r\n        return hit || (cache[str] = fn(str));\r\n    });\r\n};\r\nconst camelizeRE = /-(\\w)/g;\r\n/**\r\n * @private\r\n */\r\nconst camelize = cacheStringFunction((str) => {\r\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\r\n});\r\nconst hyphenateRE = /\\B([A-Z])/g;\r\n/**\r\n * @private\r\n */\r\nconst hyphenate = cacheStringFunction((str) => str.replace(hyphenateRE, '-$1').toLowerCase());\r\n/**\r\n * @private\r\n */\r\nconst capitalize = cacheStringFunction((str) => str.charAt(0).toUpperCase() + str.slice(1));\r\n/**\r\n * @private\r\n */\r\nconst toHandlerKey = cacheStringFunction((str) => (str ? `on${capitalize(str)}` : ``));\r\n// compare whether a value has changed, accounting for NaN.\r\nconst hasChanged = (value, oldValue) => value !== oldValue && (value === value || oldValue === oldValue);\r\nconst invokeArrayFns = (fns, arg) => {\r\n    for (let i = 0; i < fns.length; i++) {\r\n        fns[i](arg);\r\n    }\r\n};\r\nconst def = (obj, key, value) => {\r\n    Object.defineProperty(obj, key, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        value\r\n    });\r\n};\r\nconst toNumber = (val) => {\r\n    const n = parseFloat(val);\r\n    return isNaN(n) ? val : n;\r\n};\r\nlet _globalThis;\r\nconst getGlobalThis = () => {\r\n    return (_globalThis ||\r\n        (_globalThis =\r\n            typeof globalThis !== 'undefined'\r\n                ? globalThis\r\n                : typeof self !== 'undefined'\r\n                    ? self\r\n                    : typeof window !== 'undefined'\r\n                        ? window\r\n                        : typeof global !== 'undefined'\r\n                            ? global\r\n                            : {}));\r\n};\n\nexport { EMPTY_ARR, EMPTY_OBJ, NO, NOOP, PatchFlagNames, babelParserDefaultPlugins, camelize, capitalize, def, escapeHtml, escapeHtmlComment, extend, generateCodeFrame, getGlobalThis, hasChanged, hasOwn, hyphenate, invokeArrayFns, isArray, isBooleanAttr, isDate, isFunction, isGloballyWhitelisted, isHTMLTag, isIntegerKey, isKnownAttr, isMap, isModelListener, isNoUnitNumericStyleProp, isObject, isOn, isPlainObject, isPromise, isReservedProp, isSSRSafeAttrName, isSVGTag, isSet, isSpecialBooleanAttr, isString, isSymbol, isVoidTag, looseEqual, looseIndexOf, makeMap, normalizeClass, normalizeStyle, objectToString, parseStringStyle, propsToAttrMap, remove, stringifyStyle, toDisplayString, toHandlerKey, toNumber, toRawType, toTypeString };\n","import { EMPTY_OBJ, isArray, isMap, isIntegerKey, isSymbol, extend, hasOwn, isObject, hasChanged, capitalize, toRawType, def, isFunction, NOOP } from '@vue/shared';\n\nconst targetMap = new WeakMap();\r\nconst effectStack = [];\r\nlet activeEffect;\r\nconst ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'iterate' : '');\r\nconst MAP_KEY_ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'Map key iterate' : '');\r\nfunction isEffect(fn) {\r\n    return fn && fn._isEffect === true;\r\n}\r\nfunction effect(fn, options = EMPTY_OBJ) {\r\n    if (isEffect(fn)) {\r\n        fn = fn.raw;\r\n    }\r\n    const effect = createReactiveEffect(fn, options);\r\n    if (!options.lazy) {\r\n        effect();\r\n    }\r\n    return effect;\r\n}\r\nfunction stop(effect) {\r\n    if (effect.active) {\r\n        cleanup(effect);\r\n        if (effect.options.onStop) {\r\n            effect.options.onStop();\r\n        }\r\n        effect.active = false;\r\n    }\r\n}\r\nlet uid = 0;\r\nfunction createReactiveEffect(fn, options) {\r\n    const effect = function reactiveEffect() {\r\n        if (!effect.active) {\r\n            return options.scheduler ? undefined : fn();\r\n        }\r\n        if (!effectStack.includes(effect)) {\r\n            cleanup(effect);\r\n            try {\r\n                enableTracking();\r\n                effectStack.push(effect);\r\n                activeEffect = effect;\r\n                return fn();\r\n            }\r\n            finally {\r\n                effectStack.pop();\r\n                resetTracking();\r\n                activeEffect = effectStack[effectStack.length - 1];\r\n            }\r\n        }\r\n    };\r\n    effect.id = uid++;\r\n    effect.allowRecurse = !!options.allowRecurse;\r\n    effect._isEffect = true;\r\n    effect.active = true;\r\n    effect.raw = fn;\r\n    effect.deps = [];\r\n    effect.options = options;\r\n    return effect;\r\n}\r\nfunction cleanup(effect) {\r\n    const { deps } = effect;\r\n    if (deps.length) {\r\n        for (let i = 0; i < deps.length; i++) {\r\n            deps[i].delete(effect);\r\n        }\r\n        deps.length = 0;\r\n    }\r\n}\r\nlet shouldTrack = true;\r\nconst trackStack = [];\r\nfunction pauseTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = false;\r\n}\r\nfunction enableTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = true;\r\n}\r\nfunction resetTracking() {\r\n    const last = trackStack.pop();\r\n    shouldTrack = last === undefined ? true : last;\r\n}\r\nfunction track(target, type, key) {\r\n    if (!shouldTrack || activeEffect === undefined) {\r\n        return;\r\n    }\r\n    let depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        targetMap.set(target, (depsMap = new Map()));\r\n    }\r\n    let dep = depsMap.get(key);\r\n    if (!dep) {\r\n        depsMap.set(key, (dep = new Set()));\r\n    }\r\n    if (!dep.has(activeEffect)) {\r\n        dep.add(activeEffect);\r\n        activeEffect.deps.push(dep);\r\n        if ((process.env.NODE_ENV !== 'production') && activeEffect.options.onTrack) {\r\n            activeEffect.options.onTrack({\r\n                effect: activeEffect,\r\n                target,\r\n                type,\r\n                key\r\n            });\r\n        }\r\n    }\r\n}\r\nfunction trigger(target, type, key, newValue, oldValue, oldTarget) {\r\n    const depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        // never been tracked\r\n        return;\r\n    }\r\n    const effects = new Set();\r\n    const add = (effectsToAdd) => {\r\n        if (effectsToAdd) {\r\n            effectsToAdd.forEach(effect => {\r\n                if (effect !== activeEffect || effect.allowRecurse) {\r\n                    effects.add(effect);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    if (type === \"clear\" /* CLEAR */) {\r\n        // collection being cleared\r\n        // trigger all effects for target\r\n        depsMap.forEach(add);\r\n    }\r\n    else if (key === 'length' && isArray(target)) {\r\n        depsMap.forEach((dep, key) => {\r\n            if (key === 'length' || key >= newValue) {\r\n                add(dep);\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        // schedule runs for SET | ADD | DELETE\r\n        if (key !== void 0) {\r\n            add(depsMap.get(key));\r\n        }\r\n        // also run for iteration key on ADD | DELETE | Map.SET\r\n        switch (type) {\r\n            case \"add\" /* ADD */:\r\n                if (!isArray(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                    if (isMap(target)) {\r\n                        add(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n                    }\r\n                }\r\n                else if (isIntegerKey(key)) {\r\n                    // new index added to array -> length changes\r\n                    add(depsMap.get('length'));\r\n                }\r\n                break;\r\n            case \"delete\" /* DELETE */:\r\n                if (!isArray(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                    if (isMap(target)) {\r\n                        add(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n                    }\r\n                }\r\n                break;\r\n            case \"set\" /* SET */:\r\n                if (isMap(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    const run = (effect) => {\r\n        if ((process.env.NODE_ENV !== 'production') && effect.options.onTrigger) {\r\n            effect.options.onTrigger({\r\n                effect,\r\n                target,\r\n                key,\r\n                type,\r\n                newValue,\r\n                oldValue,\r\n                oldTarget\r\n            });\r\n        }\r\n        if (effect.options.scheduler) {\r\n            effect.options.scheduler(effect);\r\n        }\r\n        else {\r\n            effect();\r\n        }\r\n    };\r\n    effects.forEach(run);\r\n}\n\nconst builtInSymbols = new Set(Object.getOwnPropertyNames(Symbol)\r\n    .map(key => Symbol[key])\r\n    .filter(isSymbol));\r\nconst get = /*#__PURE__*/ createGetter();\r\nconst shallowGet = /*#__PURE__*/ createGetter(false, true);\r\nconst readonlyGet = /*#__PURE__*/ createGetter(true);\r\nconst shallowReadonlyGet = /*#__PURE__*/ createGetter(true, true);\r\nconst arrayInstrumentations = {};\r\n['includes', 'indexOf', 'lastIndexOf'].forEach(key => {\r\n    const method = Array.prototype[key];\r\n    arrayInstrumentations[key] = function (...args) {\r\n        const arr = toRaw(this);\r\n        for (let i = 0, l = this.length; i < l; i++) {\r\n            track(arr, \"get\" /* GET */, i + '');\r\n        }\r\n        // we run the method using the original args first (which may be reactive)\r\n        const res = method.apply(arr, args);\r\n        if (res === -1 || res === false) {\r\n            // if that didn't work, run it again using raw values.\r\n            return method.apply(arr, args.map(toRaw));\r\n        }\r\n        else {\r\n            return res;\r\n        }\r\n    };\r\n});\r\n['push', 'pop', 'shift', 'unshift', 'splice'].forEach(key => {\r\n    const method = Array.prototype[key];\r\n    arrayInstrumentations[key] = function (...args) {\r\n        pauseTracking();\r\n        const res = method.apply(this, args);\r\n        resetTracking();\r\n        return res;\r\n    };\r\n});\r\nfunction createGetter(isReadonly = false, shallow = false) {\r\n    return function get(target, key, receiver) {\r\n        if (key === \"__v_isReactive\" /* IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_raw\" /* RAW */ &&\r\n            receiver === (isReadonly ? readonlyMap : reactiveMap).get(target)) {\r\n            return target;\r\n        }\r\n        const targetIsArray = isArray(target);\r\n        if (targetIsArray && hasOwn(arrayInstrumentations, key)) {\r\n            return Reflect.get(arrayInstrumentations, key, receiver);\r\n        }\r\n        const res = Reflect.get(target, key, receiver);\r\n        if (isSymbol(key)\r\n            ? builtInSymbols.has(key)\r\n            : key === `__proto__` || key === `__v_isRef`) {\r\n            return res;\r\n        }\r\n        if (!isReadonly) {\r\n            track(target, \"get\" /* GET */, key);\r\n        }\r\n        if (shallow) {\r\n            return res;\r\n        }\r\n        if (isRef(res)) {\r\n            // ref unwrapping - does not apply for Array + integer key.\r\n            const shouldUnwrap = !targetIsArray || !isIntegerKey(key);\r\n            return shouldUnwrap ? res.value : res;\r\n        }\r\n        if (isObject(res)) {\r\n            // Convert returned value into a proxy as well. we do the isObject check\r\n            // here to avoid invalid value warning. Also need to lazy access readonly\r\n            // and reactive here to avoid circular dependency.\r\n            return isReadonly ? readonly(res) : reactive(res);\r\n        }\r\n        return res;\r\n    };\r\n}\r\nconst set = /*#__PURE__*/ createSetter();\r\nconst shallowSet = /*#__PURE__*/ createSetter(true);\r\nfunction createSetter(shallow = false) {\r\n    return function set(target, key, value, receiver) {\r\n        const oldValue = target[key];\r\n        if (!shallow) {\r\n            value = toRaw(value);\r\n            if (!isArray(target) && isRef(oldValue) && !isRef(value)) {\r\n                oldValue.value = value;\r\n                return true;\r\n            }\r\n        }\r\n        const hadKey = isArray(target) && isIntegerKey(key)\r\n            ? Number(key) < target.length\r\n            : hasOwn(target, key);\r\n        const result = Reflect.set(target, key, value, receiver);\r\n        // don't trigger if target is something up in the prototype chain of original\r\n        if (target === toRaw(receiver)) {\r\n            if (!hadKey) {\r\n                trigger(target, \"add\" /* ADD */, key, value);\r\n            }\r\n            else if (hasChanged(value, oldValue)) {\r\n                trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n}\r\nfunction deleteProperty(target, key) {\r\n    const hadKey = hasOwn(target, key);\r\n    const oldValue = target[key];\r\n    const result = Reflect.deleteProperty(target, key);\r\n    if (result && hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction has(target, key) {\r\n    const result = Reflect.has(target, key);\r\n    if (!isSymbol(key) || !builtInSymbols.has(key)) {\r\n        track(target, \"has\" /* HAS */, key);\r\n    }\r\n    return result;\r\n}\r\nfunction ownKeys(target) {\r\n    track(target, \"iterate\" /* ITERATE */, isArray(target) ? 'length' : ITERATE_KEY);\r\n    return Reflect.ownKeys(target);\r\n}\r\nconst mutableHandlers = {\r\n    get,\r\n    set,\r\n    deleteProperty,\r\n    has,\r\n    ownKeys\r\n};\r\nconst readonlyHandlers = {\r\n    get: readonlyGet,\r\n    set(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`Set operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    },\r\n    deleteProperty(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`Delete operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    }\r\n};\r\nconst shallowReactiveHandlers = extend({}, mutableHandlers, {\r\n    get: shallowGet,\r\n    set: shallowSet\r\n});\r\n// Props handlers are special in the sense that it should not unwrap top-level\r\n// refs (in order to allow refs to be explicitly passed down), but should\r\n// retain the reactivity of the normal readonly object.\r\nconst shallowReadonlyHandlers = extend({}, readonlyHandlers, {\r\n    get: shallowReadonlyGet\r\n});\n\nconst toReactive = (value) => isObject(value) ? reactive(value) : value;\r\nconst toReadonly = (value) => isObject(value) ? readonly(value) : value;\r\nconst toShallow = (value) => value;\r\nconst getProto = (v) => Reflect.getPrototypeOf(v);\r\nfunction get$1(target, key, isReadonly = false, isShallow = false) {\r\n    // #1772: readonly(reactive(Map)) should return readonly + reactive version\r\n    // of the value\r\n    target = target[\"__v_raw\" /* RAW */];\r\n    const rawTarget = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (key !== rawKey) {\r\n        !isReadonly && track(rawTarget, \"get\" /* GET */, key);\r\n    }\r\n    !isReadonly && track(rawTarget, \"get\" /* GET */, rawKey);\r\n    const { has } = getProto(rawTarget);\r\n    const wrap = isReadonly ? toReadonly : isShallow ? toShallow : toReactive;\r\n    if (has.call(rawTarget, key)) {\r\n        return wrap(target.get(key));\r\n    }\r\n    else if (has.call(rawTarget, rawKey)) {\r\n        return wrap(target.get(rawKey));\r\n    }\r\n}\r\nfunction has$1(key, isReadonly = false) {\r\n    const target = this[\"__v_raw\" /* RAW */];\r\n    const rawTarget = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (key !== rawKey) {\r\n        !isReadonly && track(rawTarget, \"has\" /* HAS */, key);\r\n    }\r\n    !isReadonly && track(rawTarget, \"has\" /* HAS */, rawKey);\r\n    return key === rawKey\r\n        ? target.has(key)\r\n        : target.has(key) || target.has(rawKey);\r\n}\r\nfunction size(target, isReadonly = false) {\r\n    target = target[\"__v_raw\" /* RAW */];\r\n    !isReadonly && track(toRaw(target), \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n    return Reflect.get(target, 'size', target);\r\n}\r\nfunction add(value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const proto = getProto(target);\r\n    const hadKey = proto.has.call(target, value);\r\n    const result = target.add(value);\r\n    if (!hadKey) {\r\n        trigger(target, \"add\" /* ADD */, value, value);\r\n    }\r\n    return result;\r\n}\r\nfunction set$1(key, value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const { has, get } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get.call(target, key);\r\n    const result = target.set(key, value);\r\n    if (!hadKey) {\r\n        trigger(target, \"add\" /* ADD */, key, value);\r\n    }\r\n    else if (hasChanged(value, oldValue)) {\r\n        trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction deleteEntry(key) {\r\n    const target = toRaw(this);\r\n    const { has, get } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get ? get.call(target, key) : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = target.delete(key);\r\n    if (hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction clear() {\r\n    const target = toRaw(this);\r\n    const hadItems = target.size !== 0;\r\n    const oldTarget = (process.env.NODE_ENV !== 'production')\r\n        ? isMap(target)\r\n            ? new Map(target)\r\n            : new Set(target)\r\n        : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = target.clear();\r\n    if (hadItems) {\r\n        trigger(target, \"clear\" /* CLEAR */, undefined, undefined, oldTarget);\r\n    }\r\n    return result;\r\n}\r\nfunction createForEach(isReadonly, isShallow) {\r\n    return function forEach(callback, thisArg) {\r\n        const observed = this;\r\n        const target = observed[\"__v_raw\" /* RAW */];\r\n        const rawTarget = toRaw(target);\r\n        const wrap = isReadonly ? toReadonly : isShallow ? toShallow : toReactive;\r\n        !isReadonly && track(rawTarget, \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n        return target.forEach((value, key) => {\r\n            // important: make sure the callback is\r\n            // 1. invoked with the reactive map as `this` and 3rd arg\r\n            // 2. the value received should be a corresponding reactive/readonly.\r\n            return callback.call(thisArg, wrap(value), wrap(key), observed);\r\n        });\r\n    };\r\n}\r\nfunction createIterableMethod(method, isReadonly, isShallow) {\r\n    return function (...args) {\r\n        const target = this[\"__v_raw\" /* RAW */];\r\n        const rawTarget = toRaw(target);\r\n        const targetIsMap = isMap(rawTarget);\r\n        const isPair = method === 'entries' || (method === Symbol.iterator && targetIsMap);\r\n        const isKeyOnly = method === 'keys' && targetIsMap;\r\n        const innerIterator = target[method](...args);\r\n        const wrap = isReadonly ? toReadonly : isShallow ? toShallow : toReactive;\r\n        !isReadonly &&\r\n            track(rawTarget, \"iterate\" /* ITERATE */, isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY);\r\n        // return a wrapped iterator which returns observed versions of the\r\n        // values emitted from the real iterator\r\n        return {\r\n            // iterator protocol\r\n            next() {\r\n                const { value, done } = innerIterator.next();\r\n                return done\r\n                    ? { value, done }\r\n                    : {\r\n                        value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\r\n                        done\r\n                    };\r\n            },\r\n            // iterable protocol\r\n            [Symbol.iterator]() {\r\n                return this;\r\n            }\r\n        };\r\n    };\r\n}\r\nfunction createReadonlyMethod(type) {\r\n    return function (...args) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            const key = args[0] ? `on key \"${args[0]}\" ` : ``;\r\n            console.warn(`${capitalize(type)} operation ${key}failed: target is readonly.`, toRaw(this));\r\n        }\r\n        return type === \"delete\" /* DELETE */ ? false : this;\r\n    };\r\n}\r\nconst mutableInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key);\r\n    },\r\n    get size() {\r\n        return size(this);\r\n    },\r\n    has: has$1,\r\n    add,\r\n    set: set$1,\r\n    delete: deleteEntry,\r\n    clear,\r\n    forEach: createForEach(false, false)\r\n};\r\nconst shallowInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key, false, true);\r\n    },\r\n    get size() {\r\n        return size(this);\r\n    },\r\n    has: has$1,\r\n    add,\r\n    set: set$1,\r\n    delete: deleteEntry,\r\n    clear,\r\n    forEach: createForEach(false, true)\r\n};\r\nconst readonlyInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key, true);\r\n    },\r\n    get size() {\r\n        return size(this, true);\r\n    },\r\n    has(key) {\r\n        return has$1.call(this, key, true);\r\n    },\r\n    add: createReadonlyMethod(\"add\" /* ADD */),\r\n    set: createReadonlyMethod(\"set\" /* SET */),\r\n    delete: createReadonlyMethod(\"delete\" /* DELETE */),\r\n    clear: createReadonlyMethod(\"clear\" /* CLEAR */),\r\n    forEach: createForEach(true, false)\r\n};\r\nconst iteratorMethods = ['keys', 'values', 'entries', Symbol.iterator];\r\niteratorMethods.forEach(method => {\r\n    mutableInstrumentations[method] = createIterableMethod(method, false, false);\r\n    readonlyInstrumentations[method] = createIterableMethod(method, true, false);\r\n    shallowInstrumentations[method] = createIterableMethod(method, false, true);\r\n});\r\nfunction createInstrumentationGetter(isReadonly, shallow) {\r\n    const instrumentations = shallow\r\n        ? shallowInstrumentations\r\n        : isReadonly\r\n            ? readonlyInstrumentations\r\n            : mutableInstrumentations;\r\n    return (target, key, receiver) => {\r\n        if (key === \"__v_isReactive\" /* IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_raw\" /* RAW */) {\r\n            return target;\r\n        }\r\n        return Reflect.get(hasOwn(instrumentations, key) && key in target\r\n            ? instrumentations\r\n            : target, key, receiver);\r\n    };\r\n}\r\nconst mutableCollectionHandlers = {\r\n    get: createInstrumentationGetter(false, false)\r\n};\r\nconst shallowCollectionHandlers = {\r\n    get: createInstrumentationGetter(false, true)\r\n};\r\nconst readonlyCollectionHandlers = {\r\n    get: createInstrumentationGetter(true, false)\r\n};\r\nfunction checkIdentityKeys(target, has, key) {\r\n    const rawKey = toRaw(key);\r\n    if (rawKey !== key && has.call(target, rawKey)) {\r\n        const type = toRawType(target);\r\n        console.warn(`Reactive ${type} contains both the raw and reactive ` +\r\n            `versions of the same object${type === `Map` ? ` as keys` : ``}, ` +\r\n            `which can lead to inconsistencies. ` +\r\n            `Avoid differentiating between the raw and reactive versions ` +\r\n            `of an object and only use the reactive version if possible.`);\r\n    }\r\n}\n\nconst reactiveMap = new WeakMap();\r\nconst readonlyMap = new WeakMap();\r\nfunction targetTypeMap(rawType) {\r\n    switch (rawType) {\r\n        case 'Object':\r\n        case 'Array':\r\n            return 1 /* COMMON */;\r\n        case 'Map':\r\n        case 'Set':\r\n        case 'WeakMap':\r\n        case 'WeakSet':\r\n            return 2 /* COLLECTION */;\r\n        default:\r\n            return 0 /* INVALID */;\r\n    }\r\n}\r\nfunction getTargetType(value) {\r\n    return value[\"__v_skip\" /* SKIP */] || !Object.isExtensible(value)\r\n        ? 0 /* INVALID */\r\n        : targetTypeMap(toRawType(value));\r\n}\r\nfunction reactive(target) {\r\n    // if trying to observe a readonly proxy, return the readonly version.\r\n    if (target && target[\"__v_isReadonly\" /* IS_READONLY */]) {\r\n        return target;\r\n    }\r\n    return createReactiveObject(target, false, mutableHandlers, mutableCollectionHandlers);\r\n}\r\n// Return a reactive-copy of the original object, where only the root level\r\n// properties are reactive, and does NOT unwrap refs nor recursively convert\r\n// returned properties.\r\nfunction shallowReactive(target) {\r\n    return createReactiveObject(target, false, shallowReactiveHandlers, shallowCollectionHandlers);\r\n}\r\nfunction readonly(target) {\r\n    return createReactiveObject(target, true, readonlyHandlers, readonlyCollectionHandlers);\r\n}\r\n// Return a reactive-copy of the original object, where only the root level\r\n// properties are readonly, and does NOT unwrap refs nor recursively convert\r\n// returned properties.\r\n// This is used for creating the props proxy object for stateful components.\r\nfunction shallowReadonly(target) {\r\n    return createReactiveObject(target, true, shallowReadonlyHandlers, readonlyCollectionHandlers);\r\n}\r\nfunction createReactiveObject(target, isReadonly, baseHandlers, collectionHandlers) {\r\n    if (!isObject(target)) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`value cannot be made reactive: ${String(target)}`);\r\n        }\r\n        return target;\r\n    }\r\n    // target is already a Proxy, return it.\r\n    // exception: calling readonly() on a reactive object\r\n    if (target[\"__v_raw\" /* RAW */] &&\r\n        !(isReadonly && target[\"__v_isReactive\" /* IS_REACTIVE */])) {\r\n        return target;\r\n    }\r\n    // target already has corresponding Proxy\r\n    const proxyMap = isReadonly ? readonlyMap : reactiveMap;\r\n    const existingProxy = proxyMap.get(target);\r\n    if (existingProxy) {\r\n        return existingProxy;\r\n    }\r\n    // only a whitelist of value types can be observed.\r\n    const targetType = getTargetType(target);\r\n    if (targetType === 0 /* INVALID */) {\r\n        return target;\r\n    }\r\n    const proxy = new Proxy(target, targetType === 2 /* COLLECTION */ ? collectionHandlers : baseHandlers);\r\n    proxyMap.set(target, proxy);\r\n    return proxy;\r\n}\r\nfunction isReactive(value) {\r\n    if (isReadonly(value)) {\r\n        return isReactive(value[\"__v_raw\" /* RAW */]);\r\n    }\r\n    return !!(value && value[\"__v_isReactive\" /* IS_REACTIVE */]);\r\n}\r\nfunction isReadonly(value) {\r\n    return !!(value && value[\"__v_isReadonly\" /* IS_READONLY */]);\r\n}\r\nfunction isProxy(value) {\r\n    return isReactive(value) || isReadonly(value);\r\n}\r\nfunction toRaw(observed) {\r\n    return ((observed && toRaw(observed[\"__v_raw\" /* RAW */])) || observed);\r\n}\r\nfunction markRaw(value) {\r\n    def(value, \"__v_skip\" /* SKIP */, true);\r\n    return value;\r\n}\n\nconst convert = (val) => isObject(val) ? reactive(val) : val;\r\nfunction isRef(r) {\r\n    return Boolean(r && r.__v_isRef === true);\r\n}\r\nfunction ref(value) {\r\n    return createRef(value);\r\n}\r\nfunction shallowRef(value) {\r\n    return createRef(value, true);\r\n}\r\nclass RefImpl {\r\n    constructor(_rawValue, _shallow = false) {\r\n        this._rawValue = _rawValue;\r\n        this._shallow = _shallow;\r\n        this.__v_isRef = true;\r\n        this._value = _shallow ? _rawValue : convert(_rawValue);\r\n    }\r\n    get value() {\r\n        track(toRaw(this), \"get\" /* GET */, 'value');\r\n        return this._value;\r\n    }\r\n    set value(newVal) {\r\n        if (hasChanged(toRaw(newVal), this._rawValue)) {\r\n            this._rawValue = newVal;\r\n            this._value = this._shallow ? newVal : convert(newVal);\r\n            trigger(toRaw(this), \"set\" /* SET */, 'value', newVal);\r\n        }\r\n    }\r\n}\r\nfunction createRef(rawValue, shallow = false) {\r\n    if (isRef(rawValue)) {\r\n        return rawValue;\r\n    }\r\n    return new RefImpl(rawValue, shallow);\r\n}\r\nfunction triggerRef(ref) {\r\n    trigger(toRaw(ref), \"set\" /* SET */, 'value', (process.env.NODE_ENV !== 'production') ? ref.value : void 0);\r\n}\r\nfunction unref(ref) {\r\n    return isRef(ref) ? ref.value : ref;\r\n}\r\nconst shallowUnwrapHandlers = {\r\n    get: (target, key, receiver) => unref(Reflect.get(target, key, receiver)),\r\n    set: (target, key, value, receiver) => {\r\n        const oldValue = target[key];\r\n        if (isRef(oldValue) && !isRef(value)) {\r\n            oldValue.value = value;\r\n            return true;\r\n        }\r\n        else {\r\n            return Reflect.set(target, key, value, receiver);\r\n        }\r\n    }\r\n};\r\nfunction proxyRefs(objectWithRefs) {\r\n    return isReactive(objectWithRefs)\r\n        ? objectWithRefs\r\n        : new Proxy(objectWithRefs, shallowUnwrapHandlers);\r\n}\r\nclass CustomRefImpl {\r\n    constructor(factory) {\r\n        this.__v_isRef = true;\r\n        const { get, set } = factory(() => track(this, \"get\" /* GET */, 'value'), () => trigger(this, \"set\" /* SET */, 'value'));\r\n        this._get = get;\r\n        this._set = set;\r\n    }\r\n    get value() {\r\n        return this._get();\r\n    }\r\n    set value(newVal) {\r\n        this._set(newVal);\r\n    }\r\n}\r\nfunction customRef(factory) {\r\n    return new CustomRefImpl(factory);\r\n}\r\nfunction toRefs(object) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isProxy(object)) {\r\n        console.warn(`toRefs() expects a reactive object but received a plain one.`);\r\n    }\r\n    const ret = isArray(object) ? new Array(object.length) : {};\r\n    for (const key in object) {\r\n        ret[key] = toRef(object, key);\r\n    }\r\n    return ret;\r\n}\r\nclass ObjectRefImpl {\r\n    constructor(_object, _key) {\r\n        this._object = _object;\r\n        this._key = _key;\r\n        this.__v_isRef = true;\r\n    }\r\n    get value() {\r\n        return this._object[this._key];\r\n    }\r\n    set value(newVal) {\r\n        this._object[this._key] = newVal;\r\n    }\r\n}\r\nfunction toRef(object, key) {\r\n    return isRef(object[key])\r\n        ? object[key]\r\n        : new ObjectRefImpl(object, key);\r\n}\n\nclass ComputedRefImpl {\r\n    constructor(getter, _setter, isReadonly) {\r\n        this._setter = _setter;\r\n        this._dirty = true;\r\n        this.__v_isRef = true;\r\n        this.effect = effect(getter, {\r\n            lazy: true,\r\n            scheduler: () => {\r\n                if (!this._dirty) {\r\n                    this._dirty = true;\r\n                    trigger(toRaw(this), \"set\" /* SET */, 'value');\r\n                }\r\n            }\r\n        });\r\n        this[\"__v_isReadonly\" /* IS_READONLY */] = isReadonly;\r\n    }\r\n    get value() {\r\n        if (this._dirty) {\r\n            this._value = this.effect();\r\n            this._dirty = false;\r\n        }\r\n        track(toRaw(this), \"get\" /* GET */, 'value');\r\n        return this._value;\r\n    }\r\n    set value(newValue) {\r\n        this._setter(newValue);\r\n    }\r\n}\r\nfunction computed(getterOrOptions) {\r\n    let getter;\r\n    let setter;\r\n    if (isFunction(getterOrOptions)) {\r\n        getter = getterOrOptions;\r\n        setter = (process.env.NODE_ENV !== 'production')\r\n            ? () => {\r\n                console.warn('Write operation failed: computed value is readonly');\r\n            }\r\n            : NOOP;\r\n    }\r\n    else {\r\n        getter = getterOrOptions.get;\r\n        setter = getterOrOptions.set;\r\n    }\r\n    return new ComputedRefImpl(getter, setter, isFunction(getterOrOptions) || !getterOrOptions.set);\r\n}\n\nexport { ITERATE_KEY, computed, customRef, effect, enableTracking, isProxy, isReactive, isReadonly, isRef, markRaw, pauseTracking, proxyRefs, reactive, readonly, ref, resetTracking, shallowReactive, shallowReadonly, shallowRef, stop, toRaw, toRef, toRefs, track, trigger, triggerRef, unref };\n","import { pauseTracking, resetTracking, isRef, toRaw, shallowReactive, trigger, isReactive, effect, stop, isProxy, reactive, shallowReadonly, track, proxyRefs, computed as computed$1, ref, isReadonly } from '@vue/reactivity';\nexport { customRef, isProxy, isReactive, isReadonly, isRef, markRaw, proxyRefs, reactive, readonly, ref, shallowReactive, shallowReadonly, shallowRef, toRaw, toRef, toRefs, triggerRef, unref } from '@vue/reactivity';\nimport { isString, isFunction, isPromise, isArray, extend, EMPTY_OBJ, toHandlerKey, toNumber, hyphenate, camelize, isOn, hasOwn, isModelListener, def, isReservedProp, EMPTY_ARR, isObject, capitalize, toRawType, makeMap, remove, NOOP, hasChanged, isSet, isMap, invokeArrayFns, NO, getGlobalThis, normalizeClass, normalizeStyle, isGloballyWhitelisted } from '@vue/shared';\nexport { camelize, capitalize, toDisplayString, toHandlerKey } from '@vue/shared';\n\nconst stack = [];\r\nfunction pushWarningContext(vnode) {\r\n    stack.push(vnode);\r\n}\r\nfunction popWarningContext() {\r\n    stack.pop();\r\n}\r\nfunction warn(msg, ...args) {\r\n    // avoid props formatting or warn handler tracking deps that might be mutated\r\n    // during patch, leading to infinite recursion.\r\n    pauseTracking();\r\n    const instance = stack.length ? stack[stack.length - 1].component : null;\r\n    const appWarnHandler = instance && instance.appContext.config.warnHandler;\r\n    const trace = getComponentTrace();\r\n    if (appWarnHandler) {\r\n        callWithErrorHandling(appWarnHandler, instance, 11 /* APP_WARN_HANDLER */, [\r\n            msg + args.join(''),\r\n            instance && instance.proxy,\r\n            trace\r\n                .map(({ vnode }) => `at <${formatComponentName(instance, vnode.type)}>`)\r\n                .join('\\n'),\r\n            trace\r\n        ]);\r\n    }\r\n    else {\r\n        const warnArgs = [`[Vue warn]: ${msg}`, ...args];\r\n        /* istanbul ignore if */\r\n        if (trace.length &&\r\n            // avoid spamming console during tests\r\n            !false) {\r\n            warnArgs.push(`\\n`, ...formatTrace(trace));\r\n        }\r\n        console.warn(...warnArgs);\r\n    }\r\n    resetTracking();\r\n}\r\nfunction getComponentTrace() {\r\n    let currentVNode = stack[stack.length - 1];\r\n    if (!currentVNode) {\r\n        return [];\r\n    }\r\n    // we can't just use the stack because it will be incomplete during updates\r\n    // that did not start from the root. Re-construct the parent chain using\r\n    // instance parent pointers.\r\n    const normalizedStack = [];\r\n    while (currentVNode) {\r\n        const last = normalizedStack[0];\r\n        if (last && last.vnode === currentVNode) {\r\n            last.recurseCount++;\r\n        }\r\n        else {\r\n            normalizedStack.push({\r\n                vnode: currentVNode,\r\n                recurseCount: 0\r\n            });\r\n        }\r\n        const parentInstance = currentVNode.component && currentVNode.component.parent;\r\n        currentVNode = parentInstance && parentInstance.vnode;\r\n    }\r\n    return normalizedStack;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatTrace(trace) {\r\n    const logs = [];\r\n    trace.forEach((entry, i) => {\r\n        logs.push(...(i === 0 ? [] : [`\\n`]), ...formatTraceEntry(entry));\r\n    });\r\n    return logs;\r\n}\r\nfunction formatTraceEntry({ vnode, recurseCount }) {\r\n    const postfix = recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``;\r\n    const isRoot = vnode.component ? vnode.component.parent == null : false;\r\n    const open = ` at <${formatComponentName(vnode.component, vnode.type, isRoot)}`;\r\n    const close = `>` + postfix;\r\n    return vnode.props\r\n        ? [open, ...formatProps(vnode.props), close]\r\n        : [open + close];\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProps(props) {\r\n    const res = [];\r\n    const keys = Object.keys(props);\r\n    keys.slice(0, 3).forEach(key => {\r\n        res.push(...formatProp(key, props[key]));\r\n    });\r\n    if (keys.length > 3) {\r\n        res.push(` ...`);\r\n    }\r\n    return res;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProp(key, value, raw) {\r\n    if (isString(value)) {\r\n        value = JSON.stringify(value);\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (typeof value === 'number' ||\r\n        typeof value === 'boolean' ||\r\n        value == null) {\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (isRef(value)) {\r\n        value = formatProp(key, toRaw(value.value), true);\r\n        return raw ? value : [`${key}=Ref<`, value, `>`];\r\n    }\r\n    else if (isFunction(value)) {\r\n        return [`${key}=fn${value.name ? `<${value.name}>` : ``}`];\r\n    }\r\n    else {\r\n        value = toRaw(value);\r\n        return raw ? value : [`${key}=`, value];\r\n    }\r\n}\n\nconst ErrorTypeStrings = {\r\n    [\"bc\" /* BEFORE_CREATE */]: 'beforeCreate hook',\r\n    [\"c\" /* CREATED */]: 'created hook',\r\n    [\"bm\" /* BEFORE_MOUNT */]: 'beforeMount hook',\r\n    [\"m\" /* MOUNTED */]: 'mounted hook',\r\n    [\"bu\" /* BEFORE_UPDATE */]: 'beforeUpdate hook',\r\n    [\"u\" /* UPDATED */]: 'updated',\r\n    [\"bum\" /* BEFORE_UNMOUNT */]: 'beforeUnmount hook',\r\n    [\"um\" /* UNMOUNTED */]: 'unmounted hook',\r\n    [\"a\" /* ACTIVATED */]: 'activated hook',\r\n    [\"da\" /* DEACTIVATED */]: 'deactivated hook',\r\n    [\"ec\" /* ERROR_CAPTURED */]: 'errorCaptured hook',\r\n    [\"rtc\" /* RENDER_TRACKED */]: 'renderTracked hook',\r\n    [\"rtg\" /* RENDER_TRIGGERED */]: 'renderTriggered hook',\r\n    [0 /* SETUP_FUNCTION */]: 'setup function',\r\n    [1 /* RENDER_FUNCTION */]: 'render function',\r\n    [2 /* WATCH_GETTER */]: 'watcher getter',\r\n    [3 /* WATCH_CALLBACK */]: 'watcher callback',\r\n    [4 /* WATCH_CLEANUP */]: 'watcher cleanup function',\r\n    [5 /* NATIVE_EVENT_HANDLER */]: 'native event handler',\r\n    [6 /* COMPONENT_EVENT_HANDLER */]: 'component event handler',\r\n    [7 /* VNODE_HOOK */]: 'vnode hook',\r\n    [8 /* DIRECTIVE_HOOK */]: 'directive hook',\r\n    [9 /* TRANSITION_HOOK */]: 'transition hook',\r\n    [10 /* APP_ERROR_HANDLER */]: 'app errorHandler',\r\n    [11 /* APP_WARN_HANDLER */]: 'app warnHandler',\r\n    [12 /* FUNCTION_REF */]: 'ref function',\r\n    [13 /* ASYNC_COMPONENT_LOADER */]: 'async component loader',\r\n    [14 /* SCHEDULER */]: 'scheduler flush. This is likely a Vue internals bug. ' +\r\n        'Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/vue-next'\r\n};\r\nfunction callWithErrorHandling(fn, instance, type, args) {\r\n    let res;\r\n    try {\r\n        res = args ? fn(...args) : fn();\r\n    }\r\n    catch (err) {\r\n        handleError(err, instance, type);\r\n    }\r\n    return res;\r\n}\r\nfunction callWithAsyncErrorHandling(fn, instance, type, args) {\r\n    if (isFunction(fn)) {\r\n        const res = callWithErrorHandling(fn, instance, type, args);\r\n        if (res && isPromise(res)) {\r\n            res.catch(err => {\r\n                handleError(err, instance, type);\r\n            });\r\n        }\r\n        return res;\r\n    }\r\n    const values = [];\r\n    for (let i = 0; i < fn.length; i++) {\r\n        values.push(callWithAsyncErrorHandling(fn[i], instance, type, args));\r\n    }\r\n    return values;\r\n}\r\nfunction handleError(err, instance, type, throwInDev = true) {\r\n    const contextVNode = instance ? instance.vnode : null;\r\n    if (instance) {\r\n        let cur = instance.parent;\r\n        // the exposed instance is the render proxy to keep it consistent with 2.x\r\n        const exposedInstance = instance.proxy;\r\n        // in production the hook receives only the error code\r\n        const errorInfo = (process.env.NODE_ENV !== 'production') ? ErrorTypeStrings[type] : type;\r\n        while (cur) {\r\n            const errorCapturedHooks = cur.ec;\r\n            if (errorCapturedHooks) {\r\n                for (let i = 0; i < errorCapturedHooks.length; i++) {\r\n                    if (errorCapturedHooks[i](err, exposedInstance, errorInfo) === false) {\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            cur = cur.parent;\r\n        }\r\n        // app-level handling\r\n        const appErrorHandler = instance.appContext.config.errorHandler;\r\n        if (appErrorHandler) {\r\n            callWithErrorHandling(appErrorHandler, null, 10 /* APP_ERROR_HANDLER */, [err, exposedInstance, errorInfo]);\r\n            return;\r\n        }\r\n    }\r\n    logError(err, type, contextVNode, throwInDev);\r\n}\r\nfunction logError(err, type, contextVNode, throwInDev = true) {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const info = ErrorTypeStrings[type];\r\n        if (contextVNode) {\r\n            pushWarningContext(contextVNode);\r\n        }\r\n        warn(`Unhandled error${info ? ` during execution of ${info}` : ``}`);\r\n        if (contextVNode) {\r\n            popWarningContext();\r\n        }\r\n        // crash in dev by default so it's more noticeable\r\n        if (throwInDev) {\r\n            throw err;\r\n        }\r\n        else {\r\n            console.error(err);\r\n        }\r\n    }\r\n    else {\r\n        // recover in prod to reduce the impact on end-user\r\n        console.error(err);\r\n    }\r\n}\n\nlet isFlushing = false;\r\nlet isFlushPending = false;\r\nconst queue = [];\r\nlet flushIndex = 0;\r\nconst pendingPreFlushCbs = [];\r\nlet activePreFlushCbs = null;\r\nlet preFlushIndex = 0;\r\nconst pendingPostFlushCbs = [];\r\nlet activePostFlushCbs = null;\r\nlet postFlushIndex = 0;\r\nconst resolvedPromise = Promise.resolve();\r\nlet currentFlushPromise = null;\r\nlet currentPreFlushParentJob = null;\r\nconst RECURSION_LIMIT = 100;\r\nfunction nextTick(fn) {\r\n    const p = currentFlushPromise || resolvedPromise;\r\n    return fn ? p.then(this ? fn.bind(this) : fn) : p;\r\n}\r\nfunction queueJob(job) {\r\n    // the dedupe search uses the startIndex argument of Array.includes()\r\n    // by default the search index includes the current job that is being run\r\n    // so it cannot recursively trigger itself again.\r\n    // if the job is a watch() callback, the search will start with a +1 index to\r\n    // allow it recursively trigger itself - it is the user's responsibility to\r\n    // ensure it doesn't end up in an infinite loop.\r\n    if ((!queue.length ||\r\n        !queue.includes(job, isFlushing && job.allowRecurse ? flushIndex + 1 : flushIndex)) &&\r\n        job !== currentPreFlushParentJob) {\r\n        queue.push(job);\r\n        queueFlush();\r\n    }\r\n}\r\nfunction queueFlush() {\r\n    if (!isFlushing && !isFlushPending) {\r\n        isFlushPending = true;\r\n        currentFlushPromise = resolvedPromise.then(flushJobs);\r\n    }\r\n}\r\nfunction invalidateJob(job) {\r\n    const i = queue.indexOf(job);\r\n    if (i > -1) {\r\n        queue[i] = null;\r\n    }\r\n}\r\nfunction queueCb(cb, activeQueue, pendingQueue, index) {\r\n    if (!isArray(cb)) {\r\n        if (!activeQueue ||\r\n            !activeQueue.includes(cb, cb.allowRecurse ? index + 1 : index)) {\r\n            pendingQueue.push(cb);\r\n        }\r\n    }\r\n    else {\r\n        // if cb is an array, it is a component lifecycle hook which can only be\r\n        // triggered by a job, which is already deduped in the main queue, so\r\n        // we can skip duplicate check here to improve perf\r\n        pendingQueue.push(...cb);\r\n    }\r\n    queueFlush();\r\n}\r\nfunction queuePreFlushCb(cb) {\r\n    queueCb(cb, activePreFlushCbs, pendingPreFlushCbs, preFlushIndex);\r\n}\r\nfunction queuePostFlushCb(cb) {\r\n    queueCb(cb, activePostFlushCbs, pendingPostFlushCbs, postFlushIndex);\r\n}\r\nfunction flushPreFlushCbs(seen, parentJob = null) {\r\n    if (pendingPreFlushCbs.length) {\r\n        currentPreFlushParentJob = parentJob;\r\n        activePreFlushCbs = [...new Set(pendingPreFlushCbs)];\r\n        pendingPreFlushCbs.length = 0;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            seen = seen || new Map();\r\n        }\r\n        for (preFlushIndex = 0; preFlushIndex < activePreFlushCbs.length; preFlushIndex++) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkRecursiveUpdates(seen, activePreFlushCbs[preFlushIndex]);\r\n            }\r\n            activePreFlushCbs[preFlushIndex]();\r\n        }\r\n        activePreFlushCbs = null;\r\n        preFlushIndex = 0;\r\n        currentPreFlushParentJob = null;\r\n        // recursively flush until it drains\r\n        flushPreFlushCbs(seen, parentJob);\r\n    }\r\n}\r\nfunction flushPostFlushCbs(seen) {\r\n    if (pendingPostFlushCbs.length) {\r\n        const deduped = [...new Set(pendingPostFlushCbs)];\r\n        pendingPostFlushCbs.length = 0;\r\n        // #1947 already has active queue, nested flushPostFlushCbs call\r\n        if (activePostFlushCbs) {\r\n            activePostFlushCbs.push(...deduped);\r\n            return;\r\n        }\r\n        activePostFlushCbs = deduped;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            seen = seen || new Map();\r\n        }\r\n        activePostFlushCbs.sort((a, b) => getId(a) - getId(b));\r\n        for (postFlushIndex = 0; postFlushIndex < activePostFlushCbs.length; postFlushIndex++) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkRecursiveUpdates(seen, activePostFlushCbs[postFlushIndex]);\r\n            }\r\n            activePostFlushCbs[postFlushIndex]();\r\n        }\r\n        activePostFlushCbs = null;\r\n        postFlushIndex = 0;\r\n    }\r\n}\r\nconst getId = (job) => job.id == null ? Infinity : job.id;\r\nfunction flushJobs(seen) {\r\n    isFlushPending = false;\r\n    isFlushing = true;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        seen = seen || new Map();\r\n    }\r\n    flushPreFlushCbs(seen);\r\n    // Sort queue before flush.\r\n    // This ensures that:\r\n    // 1. Components are updated from parent to child. (because parent is always\r\n    //    created before the child so its render effect will have smaller\r\n    //    priority number)\r\n    // 2. If a component is unmounted during a parent component's update,\r\n    //    its update can be skipped.\r\n    // Jobs can never be null before flush starts, since they are only invalidated\r\n    // during execution of another flushed job.\r\n    queue.sort((a, b) => getId(a) - getId(b));\r\n    try {\r\n        for (flushIndex = 0; flushIndex < queue.length; flushIndex++) {\r\n            const job = queue[flushIndex];\r\n            if (job) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkRecursiveUpdates(seen, job);\r\n                }\r\n                callWithErrorHandling(job, null, 14 /* SCHEDULER */);\r\n            }\r\n        }\r\n    }\r\n    finally {\r\n        flushIndex = 0;\r\n        queue.length = 0;\r\n        flushPostFlushCbs(seen);\r\n        isFlushing = false;\r\n        currentFlushPromise = null;\r\n        // some postFlushCb queued jobs!\r\n        // keep flushing until it drains.\r\n        if (queue.length || pendingPostFlushCbs.length) {\r\n            flushJobs(seen);\r\n        }\r\n    }\r\n}\r\nfunction checkRecursiveUpdates(seen, fn) {\r\n    if (!seen.has(fn)) {\r\n        seen.set(fn, 1);\r\n    }\r\n    else {\r\n        const count = seen.get(fn);\r\n        if (count > RECURSION_LIMIT) {\r\n            throw new Error(`Maximum recursive updates exceeded. ` +\r\n                `This means you have a reactive effect that is mutating its own ` +\r\n                `dependencies and thus recursively triggering itself. Possible sources ` +\r\n                `include component template, render function, updated hook or ` +\r\n                `watcher source function.`);\r\n        }\r\n        else {\r\n            seen.set(fn, count + 1);\r\n        }\r\n    }\r\n}\n\n/* eslint-disable no-restricted-globals */\r\nlet isHmrUpdating = false;\r\nconst hmrDirtyComponents = new Set();\r\n// Expose the HMR runtime on the global object\r\n// This makes it entirely tree-shakable without polluting the exports and makes\r\n// it easier to be used in toolings like vue-loader\r\n// Note: for a component to be eligible for HMR it also needs the __hmrId option\r\n// to be set so that its instances can be registered / removed.\r\nif ((process.env.NODE_ENV !== 'production') && (true )) {\r\n    const globalObject = typeof global !== 'undefined'\r\n        ? global\r\n        : typeof self !== 'undefined'\r\n            ? self\r\n            : typeof window !== 'undefined'\r\n                ? window\r\n                : {};\r\n    globalObject.__VUE_HMR_RUNTIME__ = {\r\n        createRecord: tryWrap(createRecord),\r\n        rerender: tryWrap(rerender),\r\n        reload: tryWrap(reload)\r\n    };\r\n}\r\nconst map = new Map();\r\nfunction registerHMR(instance) {\r\n    const id = instance.type.__hmrId;\r\n    let record = map.get(id);\r\n    if (!record) {\r\n        createRecord(id);\r\n        record = map.get(id);\r\n    }\r\n    record.add(instance);\r\n}\r\nfunction unregisterHMR(instance) {\r\n    map.get(instance.type.__hmrId).delete(instance);\r\n}\r\nfunction createRecord(id) {\r\n    if (map.has(id)) {\r\n        return false;\r\n    }\r\n    map.set(id, new Set());\r\n    return true;\r\n}\r\nfunction rerender(id, newRender) {\r\n    const record = map.get(id);\r\n    if (!record)\r\n        return;\r\n    // Array.from creates a snapshot which avoids the set being mutated during\r\n    // updates\r\n    Array.from(record).forEach(instance => {\r\n        if (newRender) {\r\n            instance.render = newRender;\r\n        }\r\n        instance.renderCache = [];\r\n        // this flag forces child components with slot content to update\r\n        isHmrUpdating = true;\r\n        instance.update();\r\n        isHmrUpdating = false;\r\n    });\r\n}\r\nfunction reload(id, newComp) {\r\n    const record = map.get(id);\r\n    if (!record)\r\n        return;\r\n    // Array.from creates a snapshot which avoids the set being mutated during\r\n    // updates\r\n    Array.from(record).forEach(instance => {\r\n        const comp = instance.type;\r\n        if (!hmrDirtyComponents.has(comp)) {\r\n            // 1. Update existing comp definition to match new one\r\n            newComp = isClassComponent(newComp) ? newComp.__vccOpts : newComp;\r\n            extend(comp, newComp);\r\n            for (const key in comp) {\r\n                if (!(key in newComp)) {\r\n                    delete comp[key];\r\n                }\r\n            }\r\n            // 2. Mark component dirty. This forces the renderer to replace the component\r\n            // on patch.\r\n            hmrDirtyComponents.add(comp);\r\n            // 3. Make sure to unmark the component after the reload.\r\n            queuePostFlushCb(() => {\r\n                hmrDirtyComponents.delete(comp);\r\n            });\r\n        }\r\n        if (instance.parent) {\r\n            // 4. Force the parent instance to re-render. This will cause all updated\r\n            // components to be unmounted and re-mounted. Queue the update so that we\r\n            // don't end up forcing the same parent to re-render multiple times.\r\n            queueJob(instance.parent.update);\r\n        }\r\n        else if (instance.appContext.reload) {\r\n            // root instance mounted via createApp() has a reload method\r\n            instance.appContext.reload();\r\n        }\r\n        else if (typeof window !== 'undefined') {\r\n            // root instance inside tree created via raw render(). Force reload.\r\n            window.location.reload();\r\n        }\r\n        else {\r\n            console.warn('[HMR] Root or manually mounted instance modified. Full reload required.');\r\n        }\r\n    });\r\n}\r\nfunction tryWrap(fn) {\r\n    return (id, arg) => {\r\n        try {\r\n            return fn(id, arg);\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            console.warn(`[HMR] Something went wrong during Vue component hot-reload. ` +\r\n                `Full reload required.`);\r\n        }\r\n    };\r\n}\n\nlet devtools;\r\nfunction setDevtoolsHook(hook) {\r\n    devtools = hook;\r\n}\r\nfunction devtoolsInitApp(app, version) {\r\n    // TODO queue if devtools is undefined\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"app:init\" /* APP_INIT */, app, version, {\r\n        Fragment,\r\n        Text,\r\n        Comment,\r\n        Static\r\n    });\r\n}\r\nfunction devtoolsUnmountApp(app) {\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"app:unmount\" /* APP_UNMOUNT */, app);\r\n}\r\nconst devtoolsComponentAdded = /*#__PURE__*/ createDevtoolsComponentHook(\"component:added\" /* COMPONENT_ADDED */);\r\nconst devtoolsComponentUpdated = /*#__PURE__*/ createDevtoolsComponentHook(\"component:updated\" /* COMPONENT_UPDATED */);\r\nconst devtoolsComponentRemoved = /*#__PURE__*/ createDevtoolsComponentHook(\"component:removed\" /* COMPONENT_REMOVED */);\r\nfunction createDevtoolsComponentHook(hook) {\r\n    return (component) => {\r\n        if (!devtools)\r\n            return;\r\n        devtools.emit(hook, component.appContext.app, component.uid, component.parent ? component.parent.uid : undefined);\r\n    };\r\n}\r\nfunction devtoolsComponentEmit(component, event, params) {\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"component:emit\" /* COMPONENT_EMIT */, component.appContext.app, component, event, params);\r\n}\n\nfunction emit(instance, event, ...rawArgs) {\r\n    const props = instance.vnode.props || EMPTY_OBJ;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const { emitsOptions, propsOptions: [propsOptions] } = instance;\r\n        if (emitsOptions) {\r\n            if (!(event in emitsOptions)) {\r\n                if (!propsOptions || !(toHandlerKey(event) in propsOptions)) {\r\n                    warn(`Component emitted event \"${event}\" but it is neither declared in ` +\r\n                        `the emits option nor as an \"${toHandlerKey(event)}\" prop.`);\r\n                }\r\n            }\r\n            else {\r\n                const validator = emitsOptions[event];\r\n                if (isFunction(validator)) {\r\n                    const isValid = validator(...rawArgs);\r\n                    if (!isValid) {\r\n                        warn(`Invalid event arguments: event validation failed for event \"${event}\".`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    let args = rawArgs;\r\n    const isModelListener = event.startsWith('update:');\r\n    // for v-model update:xxx events, apply modifiers on args\r\n    const modelArg = isModelListener && event.slice(7);\r\n    if (modelArg && modelArg in props) {\r\n        const modifiersKey = `${modelArg === 'modelValue' ? 'model' : modelArg}Modifiers`;\r\n        const { number, trim } = props[modifiersKey] || EMPTY_OBJ;\r\n        if (trim) {\r\n            args = rawArgs.map(a => a.trim());\r\n        }\r\n        else if (number) {\r\n            args = rawArgs.map(toNumber);\r\n        }\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        devtoolsComponentEmit(instance, event, args);\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const lowerCaseEvent = event.toLowerCase();\r\n        if (lowerCaseEvent !== event && props[toHandlerKey(lowerCaseEvent)]) {\r\n            warn(`Event \"${lowerCaseEvent}\" is emitted in component ` +\r\n                `${formatComponentName(instance, instance.type)} but the handler is registered for \"${event}\". ` +\r\n                `Note that HTML attributes are case-insensitive and you cannot use ` +\r\n                `v-on to listen to camelCase events when using in-DOM templates. ` +\r\n                `You should probably use \"${hyphenate(event)}\" instead of \"${event}\".`);\r\n        }\r\n    }\r\n    // convert handler name to camelCase. See issue #2249\r\n    let handlerName = toHandlerKey(camelize(event));\r\n    let handler = props[handlerName];\r\n    // for v-model update:xxx events, also trigger kebab-case equivalent\r\n    // for props passed via kebab-case\r\n    if (!handler && isModelListener) {\r\n        handlerName = toHandlerKey(hyphenate(event));\r\n        handler = props[handlerName];\r\n    }\r\n    if (handler) {\r\n        callWithAsyncErrorHandling(handler, instance, 6 /* COMPONENT_EVENT_HANDLER */, args);\r\n    }\r\n    const onceHandler = props[handlerName + `Once`];\r\n    if (onceHandler) {\r\n        if (!instance.emitted) {\r\n            (instance.emitted = {})[handlerName] = true;\r\n        }\r\n        else if (instance.emitted[handlerName]) {\r\n            return;\r\n        }\r\n        callWithAsyncErrorHandling(onceHandler, instance, 6 /* COMPONENT_EVENT_HANDLER */, args);\r\n    }\r\n}\r\nfunction normalizeEmitsOptions(comp, appContext, asMixin = false) {\r\n    if (!appContext.deopt && comp.__emits !== undefined) {\r\n        return comp.__emits;\r\n    }\r\n    const raw = comp.emits;\r\n    let normalized = {};\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if (__VUE_OPTIONS_API__ && !isFunction(comp)) {\r\n        const extendEmits = (raw) => {\r\n            hasExtends = true;\r\n            extend(normalized, normalizeEmitsOptions(raw, appContext, true));\r\n        };\r\n        if (!asMixin && appContext.mixins.length) {\r\n            appContext.mixins.forEach(extendEmits);\r\n        }\r\n        if (comp.extends) {\r\n            extendEmits(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            comp.mixins.forEach(extendEmits);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        return (comp.__emits = null);\r\n    }\r\n    if (isArray(raw)) {\r\n        raw.forEach(key => (normalized[key] = null));\r\n    }\r\n    else {\r\n        extend(normalized, raw);\r\n    }\r\n    return (comp.__emits = normalized);\r\n}\r\n// Check if an incoming prop key is a declared emit event listener.\r\n// e.g. With `emits: { click: null }`, props named `onClick` and `onclick` are\r\n// both considered matched listeners.\r\nfunction isEmitListener(options, key) {\r\n    if (!options || !isOn(key)) {\r\n        return false;\r\n    }\r\n    key = key.replace(/Once$/, '');\r\n    return (hasOwn(options, key[2].toLowerCase() + key.slice(3)) ||\r\n        hasOwn(options, key.slice(2)));\r\n}\n\n// mark the current rendering instance for asset resolution (e.g.\r\n// resolveComponent, resolveDirective) during render\r\nlet currentRenderingInstance = null;\r\nfunction setCurrentRenderingInstance(instance) {\r\n    currentRenderingInstance = instance;\r\n}\r\n// dev only flag to track whether $attrs was used during render.\r\n// If $attrs was used during render then the warning for failed attrs\r\n// fallthrough can be suppressed.\r\nlet accessedAttrs = false;\r\nfunction markAttrsAccessed() {\r\n    accessedAttrs = true;\r\n}\r\nfunction renderComponentRoot(instance) {\r\n    const { type: Component, vnode, proxy, withProxy, props, propsOptions: [propsOptions], slots, attrs, emit, render, renderCache, data, setupState, ctx } = instance;\r\n    let result;\r\n    currentRenderingInstance = instance;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        accessedAttrs = false;\r\n    }\r\n    try {\r\n        let fallthroughAttrs;\r\n        if (vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */) {\r\n            // withProxy is a proxy with a different `has` trap only for\r\n            // runtime-compiled render functions using `with` block.\r\n            const proxyToUse = withProxy || proxy;\r\n            result = normalizeVNode(render.call(proxyToUse, proxyToUse, renderCache, props, setupState, data, ctx));\r\n            fallthroughAttrs = attrs;\r\n        }\r\n        else {\r\n            // functional\r\n            const render = Component;\r\n            // in dev, mark attrs accessed if optional props (attrs === props)\r\n            if ((process.env.NODE_ENV !== 'production') && attrs === props) {\r\n                markAttrsAccessed();\r\n            }\r\n            result = normalizeVNode(render.length > 1\r\n                ? render(props, (process.env.NODE_ENV !== 'production')\r\n                    ? {\r\n                        get attrs() {\r\n                            markAttrsAccessed();\r\n                            return attrs;\r\n                        },\r\n                        slots,\r\n                        emit\r\n                    }\r\n                    : { attrs, slots, emit })\r\n                : render(props, null /* we know it doesn't need it */));\r\n            fallthroughAttrs = Component.props\r\n                ? attrs\r\n                : getFunctionalFallthrough(attrs);\r\n        }\r\n        // attr merging\r\n        // in dev mode, comments are preserved, and it's possible for a template\r\n        // to have comments along side the root element which makes it a fragment\r\n        let root = result;\r\n        let setRoot = undefined;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            ;\r\n            [root, setRoot] = getChildRoot(result);\r\n        }\r\n        if (Component.inheritAttrs !== false && fallthroughAttrs) {\r\n            const keys = Object.keys(fallthroughAttrs);\r\n            const { shapeFlag } = root;\r\n            if (keys.length) {\r\n                if (shapeFlag & 1 /* ELEMENT */ ||\r\n                    shapeFlag & 6 /* COMPONENT */) {\r\n                    if (propsOptions && keys.some(isModelListener)) {\r\n                        // If a v-model listener (onUpdate:xxx) has a corresponding declared\r\n                        // prop, it indicates this component expects to handle v-model and\r\n                        // it should not fallthrough.\r\n                        // related: #1543, #1643, #1989\r\n                        fallthroughAttrs = filterModelListeners(fallthroughAttrs, propsOptions);\r\n                    }\r\n                    root = cloneVNode(root, fallthroughAttrs);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production') && !accessedAttrs && root.type !== Comment) {\r\n                    const allAttrs = Object.keys(attrs);\r\n                    const eventAttrs = [];\r\n                    const extraAttrs = [];\r\n                    for (let i = 0, l = allAttrs.length; i < l; i++) {\r\n                        const key = allAttrs[i];\r\n                        if (isOn(key)) {\r\n                            // ignore v-model handlers when they fail to fallthrough\r\n                            if (!isModelListener(key)) {\r\n                                // remove `on`, lowercase first letter to reflect event casing\r\n                                // accurately\r\n                                eventAttrs.push(key[2].toLowerCase() + key.slice(3));\r\n                            }\r\n                        }\r\n                        else {\r\n                            extraAttrs.push(key);\r\n                        }\r\n                    }\r\n                    if (extraAttrs.length) {\r\n                        warn(`Extraneous non-props attributes (` +\r\n                            `${extraAttrs.join(', ')}) ` +\r\n                            `were passed to component but could not be automatically inherited ` +\r\n                            `because component renders fragment or text root nodes.`);\r\n                    }\r\n                    if (eventAttrs.length) {\r\n                        warn(`Extraneous non-emits event listeners (` +\r\n                            `${eventAttrs.join(', ')}) ` +\r\n                            `were passed to component but could not be automatically inherited ` +\r\n                            `because component renders fragment or text root nodes. ` +\r\n                            `If the listener is intended to be a component custom event listener only, ` +\r\n                            `declare it using the \"emits\" option.`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // inherit directives\r\n        if (vnode.dirs) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\r\n                warn(`Runtime directive used on component with non-element root node. ` +\r\n                    `The directives will not function as intended.`);\r\n            }\r\n            root.dirs = root.dirs ? root.dirs.concat(vnode.dirs) : vnode.dirs;\r\n        }\r\n        // inherit transition data\r\n        if (vnode.transition) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\r\n                warn(`Component inside <Transition> renders non-element root node ` +\r\n                    `that cannot be animated.`);\r\n            }\r\n            root.transition = vnode.transition;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && setRoot) {\r\n            setRoot(root);\r\n        }\r\n        else {\r\n            result = root;\r\n        }\r\n    }\r\n    catch (err) {\r\n        handleError(err, instance, 1 /* RENDER_FUNCTION */);\r\n        result = createVNode(Comment);\r\n    }\r\n    currentRenderingInstance = null;\r\n    return result;\r\n}\r\n/**\r\n * dev only\r\n * In dev mode, template root level comments are rendered, which turns the\r\n * template into a fragment root, but we need to locate the single element\r\n * root for attrs and scope id processing.\r\n */\r\nconst getChildRoot = (vnode) => {\r\n    if (vnode.type !== Fragment) {\r\n        return [vnode, undefined];\r\n    }\r\n    const rawChildren = vnode.children;\r\n    const dynamicChildren = vnode.dynamicChildren;\r\n    const childRoot = filterSingleRoot(rawChildren);\r\n    if (!childRoot) {\r\n        return [vnode, undefined];\r\n    }\r\n    const index = rawChildren.indexOf(childRoot);\r\n    const dynamicIndex = dynamicChildren ? dynamicChildren.indexOf(childRoot) : -1;\r\n    const setRoot = (updatedRoot) => {\r\n        rawChildren[index] = updatedRoot;\r\n        if (dynamicChildren) {\r\n            if (dynamicIndex > -1) {\r\n                dynamicChildren[dynamicIndex] = updatedRoot;\r\n            }\r\n            else if (updatedRoot.patchFlag > 0) {\r\n                vnode.dynamicChildren = [...dynamicChildren, updatedRoot];\r\n            }\r\n        }\r\n    };\r\n    return [normalizeVNode(childRoot), setRoot];\r\n};\r\n/**\r\n * dev only\r\n */\r\nfunction filterSingleRoot(children) {\r\n    const filtered = children.filter(child => {\r\n        return !(isVNode(child) &&\r\n            child.type === Comment &&\r\n            child.children !== 'v-if');\r\n    });\r\n    return filtered.length === 1 && isVNode(filtered[0]) ? filtered[0] : null;\r\n}\r\nconst getFunctionalFallthrough = (attrs) => {\r\n    let res;\r\n    for (const key in attrs) {\r\n        if (key === 'class' || key === 'style' || isOn(key)) {\r\n            (res || (res = {}))[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst filterModelListeners = (attrs, props) => {\r\n    const res = {};\r\n    for (const key in attrs) {\r\n        if (!isModelListener(key) || !(key.slice(9) in props)) {\r\n            res[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst isElementRoot = (vnode) => {\r\n    return (vnode.shapeFlag & 6 /* COMPONENT */ ||\r\n        vnode.shapeFlag & 1 /* ELEMENT */ ||\r\n        vnode.type === Comment // potential v-if branch switch\r\n    );\r\n};\r\nfunction shouldUpdateComponent(prevVNode, nextVNode, optimized) {\r\n    const { props: prevProps, children: prevChildren, component } = prevVNode;\r\n    const { props: nextProps, children: nextChildren, patchFlag } = nextVNode;\r\n    const emits = component.emitsOptions;\r\n    // Parent component's render function was hot-updated. Since this may have\r\n    // caused the child component's slots content to have changed, we need to\r\n    // force the child to update as well.\r\n    if ((process.env.NODE_ENV !== 'production') && (prevChildren || nextChildren) && isHmrUpdating) {\r\n        return true;\r\n    }\r\n    // force child update for runtime directive or transition on component vnode.\r\n    if (nextVNode.dirs || nextVNode.transition) {\r\n        return true;\r\n    }\r\n    if (optimized && patchFlag > 0) {\r\n        if (patchFlag & 1024 /* DYNAMIC_SLOTS */) {\r\n            // slot content that references values that might have changed,\r\n            // e.g. in a v-for\r\n            return true;\r\n        }\r\n        if (patchFlag & 16 /* FULL_PROPS */) {\r\n            if (!prevProps) {\r\n                return !!nextProps;\r\n            }\r\n            // presence of this flag indicates props are always non-null\r\n            return hasPropsChanged(prevProps, nextProps, emits);\r\n        }\r\n        else if (patchFlag & 8 /* PROPS */) {\r\n            const dynamicProps = nextVNode.dynamicProps;\r\n            for (let i = 0; i < dynamicProps.length; i++) {\r\n                const key = dynamicProps[i];\r\n                if (nextProps[key] !== prevProps[key] &&\r\n                    !isEmitListener(emits, key)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // this path is only taken by manually written render functions\r\n        // so presence of any children leads to a forced update\r\n        if (prevChildren || nextChildren) {\r\n            if (!nextChildren || !nextChildren.$stable) {\r\n                return true;\r\n            }\r\n        }\r\n        if (prevProps === nextProps) {\r\n            return false;\r\n        }\r\n        if (!prevProps) {\r\n            return !!nextProps;\r\n        }\r\n        if (!nextProps) {\r\n            return true;\r\n        }\r\n        return hasPropsChanged(prevProps, nextProps, emits);\r\n    }\r\n    return false;\r\n}\r\nfunction hasPropsChanged(prevProps, nextProps, emitsOptions) {\r\n    const nextKeys = Object.keys(nextProps);\r\n    if (nextKeys.length !== Object.keys(prevProps).length) {\r\n        return true;\r\n    }\r\n    for (let i = 0; i < nextKeys.length; i++) {\r\n        const key = nextKeys[i];\r\n        if (nextProps[key] !== prevProps[key] &&\r\n            !isEmitListener(emitsOptions, key)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction updateHOCHostEl({ vnode, parent }, el // HostNode\r\n) {\r\n    while (parent && parent.subTree === vnode) {\r\n        (vnode = parent.vnode).el = el;\r\n        parent = parent.parent;\r\n    }\r\n}\n\nconst isSuspense = (type) => type.__isSuspense;\r\n// Suspense exposes a component-like API, and is treated like a component\r\n// in the compiler, but internally it's a special built-in type that hooks\r\n// directly into the renderer.\r\nconst SuspenseImpl = {\r\n    // In order to make Suspense tree-shakable, we need to avoid importing it\r\n    // directly in the renderer. The renderer checks for the __isSuspense flag\r\n    // on a vnode's type and calls the `process` method, passing in renderer\r\n    // internals.\r\n    __isSuspense: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, \r\n    // platform-specific impl passed from renderer\r\n    rendererInternals) {\r\n        if (n1 == null) {\r\n            mountSuspense(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, rendererInternals);\r\n        }\r\n        else {\r\n            patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, rendererInternals);\r\n        }\r\n    },\r\n    hydrate: hydrateSuspense,\r\n    create: createSuspenseBoundary\r\n};\r\n// Force-casted public typing for h and TSX props inference\r\nconst Suspense = ( SuspenseImpl\r\n    );\r\nfunction mountSuspense(vnode, container, anchor, parentComponent, parentSuspense, isSVG, optimized, rendererInternals) {\r\n    const { p: patch, o: { createElement } } = rendererInternals;\r\n    const hiddenContainer = createElement('div');\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, container, hiddenContainer, anchor, isSVG, optimized, rendererInternals));\r\n    // start mounting the content subtree in an off-dom container\r\n    patch(null, (suspense.pendingBranch = vnode.ssContent), hiddenContainer, null, parentComponent, suspense, isSVG);\r\n    // now check if we have encountered any async deps\r\n    if (suspense.deps > 0) {\r\n        // has async\r\n        // mount the fallback tree\r\n        patch(null, vnode.ssFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n        isSVG);\r\n        setActiveBranch(suspense, vnode.ssFallback);\r\n    }\r\n    else {\r\n        // Suspense has no async deps. Just resolve.\r\n        suspense.resolve();\r\n    }\r\n}\r\nfunction patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, { p: patch, um: unmount, o: { createElement } }) {\r\n    const suspense = (n2.suspense = n1.suspense);\r\n    suspense.vnode = n2;\r\n    n2.el = n1.el;\r\n    const newBranch = n2.ssContent;\r\n    const newFallback = n2.ssFallback;\r\n    const { activeBranch, pendingBranch, isInFallback, isHydrating } = suspense;\r\n    if (pendingBranch) {\r\n        suspense.pendingBranch = newBranch;\r\n        if (isSameVNodeType(newBranch, pendingBranch)) {\r\n            // same root type but content may have changed.\r\n            patch(pendingBranch, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG);\r\n            if (suspense.deps <= 0) {\r\n                suspense.resolve();\r\n            }\r\n            else if (isInFallback) {\r\n                patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                isSVG);\r\n                setActiveBranch(suspense, newFallback);\r\n            }\r\n        }\r\n        else {\r\n            // toggled before pending tree is resolved\r\n            suspense.pendingId++;\r\n            if (isHydrating) {\r\n                // if toggled before hydration is finished, the current DOM tree is\r\n                // no longer valid. set it as the active branch so it will be unmounted\r\n                // when resolved\r\n                suspense.isHydrating = false;\r\n                suspense.activeBranch = pendingBranch;\r\n            }\r\n            else {\r\n                unmount(pendingBranch, parentComponent, suspense);\r\n            }\r\n            // increment pending ID. this is used to invalidate async callbacks\r\n            // reset suspense state\r\n            suspense.deps = 0;\r\n            // discard effects from pending branch\r\n            suspense.effects.length = 0;\r\n            // discard previous container\r\n            suspense.hiddenContainer = createElement('div');\r\n            if (isInFallback) {\r\n                // already in fallback state\r\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG);\r\n                if (suspense.deps <= 0) {\r\n                    suspense.resolve();\r\n                }\r\n                else {\r\n                    patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                    isSVG);\r\n                    setActiveBranch(suspense, newFallback);\r\n                }\r\n            }\r\n            else if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n                // toggled \"back\" to current active branch\r\n                patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG);\r\n                // force resolve\r\n                suspense.resolve(true);\r\n            }\r\n            else {\r\n                // switched to a 3rd branch\r\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG);\r\n                if (suspense.deps <= 0) {\r\n                    suspense.resolve();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n            // root did not change, just normal patch\r\n            patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG);\r\n            setActiveBranch(suspense, newBranch);\r\n        }\r\n        else {\r\n            // root node toggled\r\n            // invoke @pending event\r\n            const onPending = n2.props && n2.props.onPending;\r\n            if (isFunction(onPending)) {\r\n                onPending();\r\n            }\r\n            // mount pending branch in off-dom container\r\n            suspense.pendingBranch = newBranch;\r\n            suspense.pendingId++;\r\n            patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG);\r\n            if (suspense.deps <= 0) {\r\n                // incoming branch has no async deps, resolve now.\r\n                suspense.resolve();\r\n            }\r\n            else {\r\n                const { timeout, pendingId } = suspense;\r\n                if (timeout > 0) {\r\n                    setTimeout(() => {\r\n                        if (suspense.pendingId === pendingId) {\r\n                            suspense.fallback(newFallback);\r\n                        }\r\n                    }, timeout);\r\n                }\r\n                else if (timeout === 0) {\r\n                    suspense.fallback(newFallback);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nlet hasWarned = false;\r\nfunction createSuspenseBoundary(vnode, parent, parentComponent, container, hiddenContainer, anchor, isSVG, optimized, rendererInternals, isHydrating = false) {\r\n    /* istanbul ignore if */\r\n    if ((process.env.NODE_ENV !== 'production') && !false && !hasWarned) {\r\n        hasWarned = true;\r\n        // @ts-ignore `console.info` cannot be null error\r\n        console[console.info ? 'info' : 'log'](`<Suspense> is an experimental feature and its API will likely change.`);\r\n    }\r\n    const { p: patch, m: move, um: unmount, n: next, o: { parentNode, remove } } = rendererInternals;\r\n    const timeout = toNumber(vnode.props && vnode.props.timeout);\r\n    const suspense = {\r\n        vnode,\r\n        parent,\r\n        parentComponent,\r\n        isSVG,\r\n        container,\r\n        hiddenContainer,\r\n        anchor,\r\n        deps: 0,\r\n        pendingId: 0,\r\n        timeout: typeof timeout === 'number' ? timeout : -1,\r\n        activeBranch: null,\r\n        pendingBranch: null,\r\n        isInFallback: true,\r\n        isHydrating,\r\n        isUnmounted: false,\r\n        effects: [],\r\n        resolve(resume = false) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (!resume && !suspense.pendingBranch) {\r\n                    throw new Error(`suspense.resolve() is called without a pending branch.`);\r\n                }\r\n                if (suspense.isUnmounted) {\r\n                    throw new Error(`suspense.resolve() is called on an already unmounted suspense boundary.`);\r\n                }\r\n            }\r\n            const { vnode, activeBranch, pendingBranch, pendingId, effects, parentComponent, container } = suspense;\r\n            if (suspense.isHydrating) {\r\n                suspense.isHydrating = false;\r\n            }\r\n            else if (!resume) {\r\n                const delayEnter = activeBranch &&\r\n                    pendingBranch.transition &&\r\n                    pendingBranch.transition.mode === 'out-in';\r\n                if (delayEnter) {\r\n                    activeBranch.transition.afterLeave = () => {\r\n                        if (pendingId === suspense.pendingId) {\r\n                            move(pendingBranch, container, anchor, 0 /* ENTER */);\r\n                        }\r\n                    };\r\n                }\r\n                // this is initial anchor on mount\r\n                let { anchor } = suspense;\r\n                // unmount current active tree\r\n                if (activeBranch) {\r\n                    // if the fallback tree was mounted, it may have been moved\r\n                    // as part of a parent suspense. get the latest anchor for insertion\r\n                    anchor = next(activeBranch);\r\n                    unmount(activeBranch, parentComponent, suspense, true);\r\n                }\r\n                if (!delayEnter) {\r\n                    // move content from off-dom container to actual container\r\n                    move(pendingBranch, container, anchor, 0 /* ENTER */);\r\n                }\r\n            }\r\n            setActiveBranch(suspense, pendingBranch);\r\n            suspense.pendingBranch = null;\r\n            suspense.isInFallback = false;\r\n            // flush buffered effects\r\n            // check if there is a pending parent suspense\r\n            let parent = suspense.parent;\r\n            let hasUnresolvedAncestor = false;\r\n            while (parent) {\r\n                if (parent.pendingBranch) {\r\n                    // found a pending parent suspense, merge buffered post jobs\r\n                    // into that parent\r\n                    parent.effects.push(...effects);\r\n                    hasUnresolvedAncestor = true;\r\n                    break;\r\n                }\r\n                parent = parent.parent;\r\n            }\r\n            // no pending parent suspense, flush all jobs\r\n            if (!hasUnresolvedAncestor) {\r\n                queuePostFlushCb(effects);\r\n            }\r\n            suspense.effects = [];\r\n            // invoke @resolve event\r\n            const onResolve = vnode.props && vnode.props.onResolve;\r\n            if (isFunction(onResolve)) {\r\n                onResolve();\r\n            }\r\n        },\r\n        fallback(fallbackVNode) {\r\n            if (!suspense.pendingBranch) {\r\n                return;\r\n            }\r\n            const { vnode, activeBranch, parentComponent, container, isSVG } = suspense;\r\n            // invoke @fallback event\r\n            const onFallback = vnode.props && vnode.props.onFallback;\r\n            if (isFunction(onFallback)) {\r\n                onFallback();\r\n            }\r\n            const anchor = next(activeBranch);\r\n            const mountFallback = () => {\r\n                if (!suspense.isInFallback) {\r\n                    return;\r\n                }\r\n                // mount the fallback tree\r\n                patch(null, fallbackVNode, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                isSVG);\r\n                setActiveBranch(suspense, fallbackVNode);\r\n            };\r\n            const delayEnter = fallbackVNode.transition && fallbackVNode.transition.mode === 'out-in';\r\n            if (delayEnter) {\r\n                activeBranch.transition.afterLeave = mountFallback;\r\n            }\r\n            // unmount current active branch\r\n            unmount(activeBranch, parentComponent, null, // no suspense so unmount hooks fire now\r\n            true // shouldRemove\r\n            );\r\n            suspense.isInFallback = true;\r\n            if (!delayEnter) {\r\n                mountFallback();\r\n            }\r\n        },\r\n        move(container, anchor, type) {\r\n            suspense.activeBranch &&\r\n                move(suspense.activeBranch, container, anchor, type);\r\n            suspense.container = container;\r\n        },\r\n        next() {\r\n            return suspense.activeBranch && next(suspense.activeBranch);\r\n        },\r\n        registerDep(instance, setupRenderEffect) {\r\n            if (!suspense.pendingBranch) {\r\n                return;\r\n            }\r\n            const hydratedEl = instance.vnode.el;\r\n            suspense.deps++;\r\n            instance\r\n                .asyncDep.catch(err => {\r\n                handleError(err, instance, 0 /* SETUP_FUNCTION */);\r\n            })\r\n                .then(asyncSetupResult => {\r\n                // retry when the setup() promise resolves.\r\n                // component may have been unmounted before resolve.\r\n                if (instance.isUnmounted ||\r\n                    suspense.isUnmounted ||\r\n                    suspense.pendingId !== instance.suspenseId) {\r\n                    return;\r\n                }\r\n                suspense.deps--;\r\n                // retry from this component\r\n                instance.asyncResolved = true;\r\n                const { vnode } = instance;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(vnode);\r\n                }\r\n                handleSetupResult(instance, asyncSetupResult);\r\n                if (hydratedEl) {\r\n                    // vnode may have been replaced if an update happened before the\r\n                    // async dep is resolved.\r\n                    vnode.el = hydratedEl;\r\n                }\r\n                const placeholder = !hydratedEl && instance.subTree.el;\r\n                setupRenderEffect(instance, vnode, \r\n                // component may have been moved before resolve.\r\n                // if this is not a hydration, instance.subTree will be the comment\r\n                // placeholder.\r\n                parentNode(hydratedEl || instance.subTree.el), \r\n                // anchor will not be used if this is hydration, so only need to\r\n                // consider the comment placeholder case.\r\n                hydratedEl ? null : next(instance.subTree), suspense, isSVG, optimized);\r\n                if (placeholder) {\r\n                    remove(placeholder);\r\n                }\r\n                updateHOCHostEl(instance, vnode.el);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n                if (suspense.deps === 0) {\r\n                    suspense.resolve();\r\n                }\r\n            });\r\n        },\r\n        unmount(parentSuspense, doRemove) {\r\n            suspense.isUnmounted = true;\r\n            if (suspense.activeBranch) {\r\n                unmount(suspense.activeBranch, parentComponent, parentSuspense, doRemove);\r\n            }\r\n            if (suspense.pendingBranch) {\r\n                unmount(suspense.pendingBranch, parentComponent, parentSuspense, doRemove);\r\n            }\r\n        }\r\n    };\r\n    return suspense;\r\n}\r\nfunction hydrateSuspense(node, vnode, parentComponent, parentSuspense, isSVG, optimized, rendererInternals, hydrateNode) {\r\n    /* eslint-disable no-restricted-globals */\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, node.parentNode, document.createElement('div'), null, isSVG, optimized, rendererInternals, true /* hydrating */));\r\n    // there are two possible scenarios for server-rendered suspense:\r\n    // - success: ssr content should be fully resolved\r\n    // - failure: ssr content should be the fallback branch.\r\n    // however, on the client we don't really know if it has failed or not\r\n    // attempt to hydrate the DOM assuming it has succeeded, but we still\r\n    // need to construct a suspense boundary first\r\n    const result = hydrateNode(node, (suspense.pendingBranch = vnode.ssContent), parentComponent, suspense, optimized);\r\n    if (suspense.deps === 0) {\r\n        suspense.resolve();\r\n    }\r\n    return result;\r\n    /* eslint-enable no-restricted-globals */\r\n}\r\nfunction normalizeSuspenseChildren(vnode) {\r\n    const { shapeFlag, children } = vnode;\r\n    let content;\r\n    let fallback;\r\n    if (shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        content = normalizeSuspenseSlot(children.default);\r\n        fallback = normalizeSuspenseSlot(children.fallback);\r\n    }\r\n    else {\r\n        content = normalizeSuspenseSlot(children);\r\n        fallback = normalizeVNode(null);\r\n    }\r\n    return {\r\n        content,\r\n        fallback\r\n    };\r\n}\r\nfunction normalizeSuspenseSlot(s) {\r\n    if (isFunction(s)) {\r\n        s = s();\r\n    }\r\n    if (isArray(s)) {\r\n        const singleChild = filterSingleRoot(s);\r\n        if ((process.env.NODE_ENV !== 'production') && !singleChild) {\r\n            warn(`<Suspense> slots expect a single root node.`);\r\n        }\r\n        s = singleChild;\r\n    }\r\n    return normalizeVNode(s);\r\n}\r\nfunction queueEffectWithSuspense(fn, suspense) {\r\n    if (suspense && suspense.pendingBranch) {\r\n        if (isArray(fn)) {\r\n            suspense.effects.push(...fn);\r\n        }\r\n        else {\r\n            suspense.effects.push(fn);\r\n        }\r\n    }\r\n    else {\r\n        queuePostFlushCb(fn);\r\n    }\r\n}\r\nfunction setActiveBranch(suspense, branch) {\r\n    suspense.activeBranch = branch;\r\n    const { vnode, parentComponent } = suspense;\r\n    const el = (vnode.el = branch.el);\r\n    // in case suspense is the root node of a component,\r\n    // recursively update the HOC el\r\n    if (parentComponent && parentComponent.subTree === vnode) {\r\n        parentComponent.vnode.el = el;\r\n        updateHOCHostEl(parentComponent, el);\r\n    }\r\n}\n\nlet isRenderingCompiledSlot = 0;\r\nconst setCompiledSlotRendering = (n) => (isRenderingCompiledSlot += n);\r\n/**\r\n * Compiler runtime helper for rendering `<slot/>`\r\n * @private\r\n */\r\nfunction renderSlot(slots, name, props = {}, \r\n// this is not a user-facing function, so the fallback is always generated by\r\n// the compiler and guaranteed to be a function returning an array\r\nfallback) {\r\n    let slot = slots[name];\r\n    if ((process.env.NODE_ENV !== 'production') && slot && slot.length > 1) {\r\n        warn(`SSR-optimized slot function detected in a non-SSR-optimized render ` +\r\n            `function. You need to mark this component with $dynamic-slots in the ` +\r\n            `parent template.`);\r\n        slot = () => [];\r\n    }\r\n    // a compiled slot disables block tracking by default to avoid manual\r\n    // invocation interfering with template-based block tracking, but in\r\n    // `renderSlot` we can be sure that it's template-based so we can force\r\n    // enable it.\r\n    isRenderingCompiledSlot++;\r\n    const rendered = (openBlock(),\r\n        createBlock(Fragment, { key: props.key }, slot ? slot(props) : fallback ? fallback() : [], slots._ === 1 /* STABLE */\r\n            ? 64 /* STABLE_FRAGMENT */\r\n            : -2 /* BAIL */));\r\n    isRenderingCompiledSlot--;\r\n    return rendered;\r\n}\n\n/**\r\n * Wrap a slot function to memoize current rendering instance\r\n * @private\r\n */\r\nfunction withCtx(fn, ctx = currentRenderingInstance) {\r\n    if (!ctx)\r\n        return fn;\r\n    const renderFnWithContext = (...args) => {\r\n        // If a user calls a compiled slot inside a template expression (#1745), it\r\n        // can mess up block tracking, so by default we need to push a null block to\r\n        // avoid that. This isn't necessary if rendering a compiled `<slot>`.\r\n        if (!isRenderingCompiledSlot) {\r\n            openBlock(true /* null block that disables tracking */);\r\n        }\r\n        const owner = currentRenderingInstance;\r\n        setCurrentRenderingInstance(ctx);\r\n        const res = fn(...args);\r\n        setCurrentRenderingInstance(owner);\r\n        if (!isRenderingCompiledSlot) {\r\n            closeBlock();\r\n        }\r\n        return res;\r\n    };\r\n    renderFnWithContext._c = true;\r\n    return renderFnWithContext;\r\n}\n\n// SFC scoped style ID management.\r\nlet currentScopeId = null;\r\nconst scopeIdStack = [];\r\n/**\r\n * @private\r\n */\r\nfunction pushScopeId(id) {\r\n    scopeIdStack.push((currentScopeId = id));\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction popScopeId() {\r\n    scopeIdStack.pop();\r\n    currentScopeId = scopeIdStack[scopeIdStack.length - 1] || null;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction withScopeId(id) {\r\n    return ((fn) => withCtx(function () {\r\n        pushScopeId(id);\r\n        const res = fn.apply(this, arguments);\r\n        popScopeId();\r\n        return res;\r\n    }));\r\n}\n\nfunction initProps(instance, rawProps, isStateful, // result of bitwise flag comparison\r\nisSSR = false) {\r\n    const props = {};\r\n    const attrs = {};\r\n    def(attrs, InternalObjectKey, 1);\r\n    setFullProps(instance, rawProps, props, attrs);\r\n    // validation\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        validateProps(props, instance);\r\n    }\r\n    if (isStateful) {\r\n        // stateful\r\n        instance.props = isSSR ? props : shallowReactive(props);\r\n    }\r\n    else {\r\n        if (!instance.type.props) {\r\n            // functional w/ optional props, props === attrs\r\n            instance.props = attrs;\r\n        }\r\n        else {\r\n            // functional w/ declared props\r\n            instance.props = props;\r\n        }\r\n    }\r\n    instance.attrs = attrs;\r\n}\r\nfunction updateProps(instance, rawProps, rawPrevProps, optimized) {\r\n    const { props, attrs, vnode: { patchFlag } } = instance;\r\n    const rawCurrentProps = toRaw(props);\r\n    const [options] = instance.propsOptions;\r\n    if (\r\n    // always force full diff in dev\r\n    // - #1942 if hmr is enabled with sfc component\r\n    // - vite#872 non-sfc component used by sfc component\r\n    !((process.env.NODE_ENV !== 'production') &&\r\n        (instance.type.__hmrId ||\r\n            (instance.parent && instance.parent.type.__hmrId))) &&\r\n        (optimized || patchFlag > 0) &&\r\n        !(patchFlag & 16 /* FULL_PROPS */)) {\r\n        if (patchFlag & 8 /* PROPS */) {\r\n            // Compiler-generated props & no keys change, just set the updated\r\n            // the props.\r\n            const propsToUpdate = instance.vnode.dynamicProps;\r\n            for (let i = 0; i < propsToUpdate.length; i++) {\r\n                const key = propsToUpdate[i];\r\n                // PROPS flag guarantees rawProps to be non-null\r\n                const value = rawProps[key];\r\n                if (options) {\r\n                    // attr / props separation was done on init and will be consistent\r\n                    // in this code path, so just check if attrs have it.\r\n                    if (hasOwn(attrs, key)) {\r\n                        attrs[key] = value;\r\n                    }\r\n                    else {\r\n                        const camelizedKey = camelize(key);\r\n                        props[camelizedKey] = resolvePropValue(options, rawCurrentProps, camelizedKey, value, instance);\r\n                    }\r\n                }\r\n                else {\r\n                    attrs[key] = value;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // full props update.\r\n        setFullProps(instance, rawProps, props, attrs);\r\n        // in case of dynamic props, check if we need to delete keys from\r\n        // the props object\r\n        let kebabKey;\r\n        for (const key in rawCurrentProps) {\r\n            if (!rawProps ||\r\n                // for camelCase\r\n                (!hasOwn(rawProps, key) &&\r\n                    // it's possible the original props was passed in as kebab-case\r\n                    // and converted to camelCase (#955)\r\n                    ((kebabKey = hyphenate(key)) === key || !hasOwn(rawProps, kebabKey)))) {\r\n                if (options) {\r\n                    if (rawPrevProps &&\r\n                        // for camelCase\r\n                        (rawPrevProps[key] !== undefined ||\r\n                            // for kebab-case\r\n                            rawPrevProps[kebabKey] !== undefined)) {\r\n                        props[key] = resolvePropValue(options, rawProps || EMPTY_OBJ, key, undefined, instance);\r\n                    }\r\n                }\r\n                else {\r\n                    delete props[key];\r\n                }\r\n            }\r\n        }\r\n        // in the case of functional component w/o props declaration, props and\r\n        // attrs point to the same object so it should already have been updated.\r\n        if (attrs !== rawCurrentProps) {\r\n            for (const key in attrs) {\r\n                if (!rawProps || !hasOwn(rawProps, key)) {\r\n                    delete attrs[key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // trigger updates for $attrs in case it's used in component slots\r\n    trigger(instance, \"set\" /* SET */, '$attrs');\r\n    if ((process.env.NODE_ENV !== 'production') && rawProps) {\r\n        validateProps(props, instance);\r\n    }\r\n}\r\nfunction setFullProps(instance, rawProps, props, attrs) {\r\n    const [options, needCastKeys] = instance.propsOptions;\r\n    if (rawProps) {\r\n        for (const key in rawProps) {\r\n            const value = rawProps[key];\r\n            // key, ref are reserved and never passed down\r\n            if (isReservedProp(key)) {\r\n                continue;\r\n            }\r\n            // prop option names are camelized during normalization, so to support\r\n            // kebab -> camel conversion here we need to camelize the key.\r\n            let camelKey;\r\n            if (options && hasOwn(options, (camelKey = camelize(key)))) {\r\n                props[camelKey] = value;\r\n            }\r\n            else if (!isEmitListener(instance.emitsOptions, key)) {\r\n                // Any non-declared (either as a prop or an emitted event) props are put\r\n                // into a separate `attrs` object for spreading. Make sure to preserve\r\n                // original key casing\r\n                attrs[key] = value;\r\n            }\r\n        }\r\n    }\r\n    if (needCastKeys) {\r\n        const rawCurrentProps = toRaw(props);\r\n        for (let i = 0; i < needCastKeys.length; i++) {\r\n            const key = needCastKeys[i];\r\n            props[key] = resolvePropValue(options, rawCurrentProps, key, rawCurrentProps[key], instance);\r\n        }\r\n    }\r\n}\r\nfunction resolvePropValue(options, props, key, value, instance) {\r\n    const opt = options[key];\r\n    if (opt != null) {\r\n        const hasDefault = hasOwn(opt, 'default');\r\n        // default values\r\n        if (hasDefault && value === undefined) {\r\n            const defaultValue = opt.default;\r\n            if (opt.type !== Function && isFunction(defaultValue)) {\r\n                setCurrentInstance(instance);\r\n                value = defaultValue(props);\r\n                setCurrentInstance(null);\r\n            }\r\n            else {\r\n                value = defaultValue;\r\n            }\r\n        }\r\n        // boolean casting\r\n        if (opt[0 /* shouldCast */]) {\r\n            if (!hasOwn(props, key) && !hasDefault) {\r\n                value = false;\r\n            }\r\n            else if (opt[1 /* shouldCastTrue */] &&\r\n                (value === '' || value === hyphenate(key))) {\r\n                value = true;\r\n            }\r\n        }\r\n    }\r\n    return value;\r\n}\r\nfunction normalizePropsOptions(comp, appContext, asMixin = false) {\r\n    if (!appContext.deopt && comp.__props) {\r\n        return comp.__props;\r\n    }\r\n    const raw = comp.props;\r\n    const normalized = {};\r\n    const needCastKeys = [];\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if (__VUE_OPTIONS_API__ && !isFunction(comp)) {\r\n        const extendProps = (raw) => {\r\n            hasExtends = true;\r\n            const [props, keys] = normalizePropsOptions(raw, appContext, true);\r\n            extend(normalized, props);\r\n            if (keys)\r\n                needCastKeys.push(...keys);\r\n        };\r\n        if (!asMixin && appContext.mixins.length) {\r\n            appContext.mixins.forEach(extendProps);\r\n        }\r\n        if (comp.extends) {\r\n            extendProps(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            comp.mixins.forEach(extendProps);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        return (comp.__props = EMPTY_ARR);\r\n    }\r\n    if (isArray(raw)) {\r\n        for (let i = 0; i < raw.length; i++) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isString(raw[i])) {\r\n                warn(`props must be strings when using array syntax.`, raw[i]);\r\n            }\r\n            const normalizedKey = camelize(raw[i]);\r\n            if (validatePropName(normalizedKey)) {\r\n                normalized[normalizedKey] = EMPTY_OBJ;\r\n            }\r\n        }\r\n    }\r\n    else if (raw) {\r\n        if ((process.env.NODE_ENV !== 'production') && !isObject(raw)) {\r\n            warn(`invalid props options`, raw);\r\n        }\r\n        for (const key in raw) {\r\n            const normalizedKey = camelize(key);\r\n            if (validatePropName(normalizedKey)) {\r\n                const opt = raw[key];\r\n                const prop = (normalized[normalizedKey] =\r\n                    isArray(opt) || isFunction(opt) ? { type: opt } : opt);\r\n                if (prop) {\r\n                    const booleanIndex = getTypeIndex(Boolean, prop.type);\r\n                    const stringIndex = getTypeIndex(String, prop.type);\r\n                    prop[0 /* shouldCast */] = booleanIndex > -1;\r\n                    prop[1 /* shouldCastTrue */] =\r\n                        stringIndex < 0 || booleanIndex < stringIndex;\r\n                    // if the prop needs boolean casting or default value\r\n                    if (booleanIndex > -1 || hasOwn(prop, 'default')) {\r\n                        needCastKeys.push(normalizedKey);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return (comp.__props = [normalized, needCastKeys]);\r\n}\r\nfunction validatePropName(key) {\r\n    if (key[0] !== '$') {\r\n        return true;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Invalid prop name: \"${key}\" is a reserved property.`);\r\n    }\r\n    return false;\r\n}\r\n// use function string name to check type constructors\r\n// so that it works across vms / iframes.\r\nfunction getType(ctor) {\r\n    const match = ctor && ctor.toString().match(/^\\s*function (\\w+)/);\r\n    return match ? match[1] : '';\r\n}\r\nfunction isSameType(a, b) {\r\n    return getType(a) === getType(b);\r\n}\r\nfunction getTypeIndex(type, expectedTypes) {\r\n    if (isArray(expectedTypes)) {\r\n        for (let i = 0, len = expectedTypes.length; i < len; i++) {\r\n            if (isSameType(expectedTypes[i], type)) {\r\n                return i;\r\n            }\r\n        }\r\n    }\r\n    else if (isFunction(expectedTypes)) {\r\n        return isSameType(expectedTypes, type) ? 0 : -1;\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProps(props, instance) {\r\n    const rawValues = toRaw(props);\r\n    const options = instance.propsOptions[0];\r\n    for (const key in options) {\r\n        let opt = options[key];\r\n        if (opt == null)\r\n            continue;\r\n        validateProp(key, rawValues[key], opt, !hasOwn(rawValues, key));\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProp(name, value, prop, isAbsent) {\r\n    const { type, required, validator } = prop;\r\n    // required!\r\n    if (required && isAbsent) {\r\n        warn('Missing required prop: \"' + name + '\"');\r\n        return;\r\n    }\r\n    // missing but optional\r\n    if (value == null && !prop.required) {\r\n        return;\r\n    }\r\n    // type check\r\n    if (type != null && type !== true) {\r\n        let isValid = false;\r\n        const types = isArray(type) ? type : [type];\r\n        const expectedTypes = [];\r\n        // value is valid as long as one of the specified types match\r\n        for (let i = 0; i < types.length && !isValid; i++) {\r\n            const { valid, expectedType } = assertType(value, types[i]);\r\n            expectedTypes.push(expectedType || '');\r\n            isValid = valid;\r\n        }\r\n        if (!isValid) {\r\n            warn(getInvalidTypeMessage(name, value, expectedTypes));\r\n            return;\r\n        }\r\n    }\r\n    // custom validator\r\n    if (validator && !validator(value)) {\r\n        warn('Invalid prop: custom validator check failed for prop \"' + name + '\".');\r\n    }\r\n}\r\nconst isSimpleType = /*#__PURE__*/ makeMap('String,Number,Boolean,Function,Symbol');\r\n/**\r\n * dev only\r\n */\r\nfunction assertType(value, type) {\r\n    let valid;\r\n    const expectedType = getType(type);\r\n    if (isSimpleType(expectedType)) {\r\n        const t = typeof value;\r\n        valid = t === expectedType.toLowerCase();\r\n        // for primitive wrapper objects\r\n        if (!valid && t === 'object') {\r\n            valid = value instanceof type;\r\n        }\r\n    }\r\n    else if (expectedType === 'Object') {\r\n        valid = isObject(value);\r\n    }\r\n    else if (expectedType === 'Array') {\r\n        valid = isArray(value);\r\n    }\r\n    else {\r\n        valid = value instanceof type;\r\n    }\r\n    return {\r\n        valid,\r\n        expectedType\r\n    };\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction getInvalidTypeMessage(name, value, expectedTypes) {\r\n    let message = `Invalid prop: type check failed for prop \"${name}\".` +\r\n        ` Expected ${expectedTypes.map(capitalize).join(', ')}`;\r\n    const expectedType = expectedTypes[0];\r\n    const receivedType = toRawType(value);\r\n    const expectedValue = styleValue(value, expectedType);\r\n    const receivedValue = styleValue(value, receivedType);\r\n    // check if we need to specify expected value\r\n    if (expectedTypes.length === 1 &&\r\n        isExplicable(expectedType) &&\r\n        !isBoolean(expectedType, receivedType)) {\r\n        message += ` with value ${expectedValue}`;\r\n    }\r\n    message += `, got ${receivedType} `;\r\n    // check if we need to specify received value\r\n    if (isExplicable(receivedType)) {\r\n        message += `with value ${receivedValue}.`;\r\n    }\r\n    return message;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction styleValue(value, type) {\r\n    if (type === 'String') {\r\n        return `\"${value}\"`;\r\n    }\r\n    else if (type === 'Number') {\r\n        return `${Number(value)}`;\r\n    }\r\n    else {\r\n        return `${value}`;\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isExplicable(type) {\r\n    const explicitTypes = ['string', 'number', 'boolean'];\r\n    return explicitTypes.some(elem => type.toLowerCase() === elem);\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isBoolean(...args) {\r\n    return args.some(elem => elem.toLowerCase() === 'boolean');\r\n}\n\nfunction injectHook(type, hook, target = currentInstance, prepend = false) {\r\n    if (target) {\r\n        const hooks = target[type] || (target[type] = []);\r\n        // cache the error handling wrapper for injected hooks so the same hook\r\n        // can be properly deduped by the scheduler. \"__weh\" stands for \"with error\r\n        // handling\".\r\n        const wrappedHook = hook.__weh ||\r\n            (hook.__weh = (...args) => {\r\n                if (target.isUnmounted) {\r\n                    return;\r\n                }\r\n                // disable tracking inside all lifecycle hooks\r\n                // since they can potentially be called inside effects.\r\n                pauseTracking();\r\n                // Set currentInstance during hook invocation.\r\n                // This assumes the hook does not synchronously trigger other hooks, which\r\n                // can only be false when the user does something really funky.\r\n                setCurrentInstance(target);\r\n                const res = callWithAsyncErrorHandling(hook, target, type, args);\r\n                setCurrentInstance(null);\r\n                resetTracking();\r\n                return res;\r\n            });\r\n        if (prepend) {\r\n            hooks.unshift(wrappedHook);\r\n        }\r\n        else {\r\n            hooks.push(wrappedHook);\r\n        }\r\n        return wrappedHook;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        const apiName = toHandlerKey(ErrorTypeStrings[type].replace(/ hook$/, ''));\r\n        warn(`${apiName} is called when there is no active component instance to be ` +\r\n            `associated with. ` +\r\n            `Lifecycle injection APIs can only be used during execution of setup().` +\r\n            ( ` If you are using async setup(), make sure to register lifecycle ` +\r\n                    `hooks before the first await statement.`\r\n                ));\r\n    }\r\n}\r\nconst createHook = (lifecycle) => (hook, target = currentInstance) => \r\n// post-create lifecycle registrations are noops during SSR\r\n!isInSSRComponentSetup && injectHook(lifecycle, hook, target);\r\nconst onBeforeMount = createHook(\"bm\" /* BEFORE_MOUNT */);\r\nconst onMounted = createHook(\"m\" /* MOUNTED */);\r\nconst onBeforeUpdate = createHook(\"bu\" /* BEFORE_UPDATE */);\r\nconst onUpdated = createHook(\"u\" /* UPDATED */);\r\nconst onBeforeUnmount = createHook(\"bum\" /* BEFORE_UNMOUNT */);\r\nconst onUnmounted = createHook(\"um\" /* UNMOUNTED */);\r\nconst onRenderTriggered = createHook(\"rtg\" /* RENDER_TRIGGERED */);\r\nconst onRenderTracked = createHook(\"rtc\" /* RENDER_TRACKED */);\r\nconst onErrorCaptured = (hook, target = currentInstance) => {\r\n    injectHook(\"ec\" /* ERROR_CAPTURED */, hook, target);\r\n};\n\n// Simple effect.\r\nfunction watchEffect(effect, options) {\r\n    return doWatch(effect, null, options);\r\n}\r\n// initial value for watchers to trigger on undefined initial values\r\nconst INITIAL_WATCHER_VALUE = {};\r\n// implementation\r\nfunction watch(source, cb, options) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isFunction(cb)) {\r\n        warn(`\\`watch(fn, options?)\\` signature has been moved to a separate API. ` +\r\n            `Use \\`watchEffect(fn, options?)\\` instead. \\`watch\\` now only ` +\r\n            `supports \\`watch(source, cb, options?) signature.`);\r\n    }\r\n    return doWatch(source, cb, options);\r\n}\r\nfunction doWatch(source, cb, { immediate, deep, flush, onTrack, onTrigger } = EMPTY_OBJ, instance = currentInstance) {\r\n    if ((process.env.NODE_ENV !== 'production') && !cb) {\r\n        if (immediate !== undefined) {\r\n            warn(`watch() \"immediate\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n        if (deep !== undefined) {\r\n            warn(`watch() \"deep\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n    }\r\n    const warnInvalidSource = (s) => {\r\n        warn(`Invalid watch source: `, s, `A watch source can only be a getter/effect function, a ref, ` +\r\n            `a reactive object, or an array of these types.`);\r\n    };\r\n    let getter;\r\n    let forceTrigger = false;\r\n    if (isRef(source)) {\r\n        getter = () => source.value;\r\n        forceTrigger = !!source._shallow;\r\n    }\r\n    else if (isReactive(source)) {\r\n        getter = () => source;\r\n        deep = true;\r\n    }\r\n    else if (isArray(source)) {\r\n        getter = () => source.map(s => {\r\n            if (isRef(s)) {\r\n                return s.value;\r\n            }\r\n            else if (isReactive(s)) {\r\n                return traverse(s);\r\n            }\r\n            else if (isFunction(s)) {\r\n                return callWithErrorHandling(s, instance, 2 /* WATCH_GETTER */);\r\n            }\r\n            else {\r\n                (process.env.NODE_ENV !== 'production') && warnInvalidSource(s);\r\n            }\r\n        });\r\n    }\r\n    else if (isFunction(source)) {\r\n        if (cb) {\r\n            // getter with cb\r\n            getter = () => callWithErrorHandling(source, instance, 2 /* WATCH_GETTER */);\r\n        }\r\n        else {\r\n            // no cb -> simple effect\r\n            getter = () => {\r\n                if (instance && instance.isUnmounted) {\r\n                    return;\r\n                }\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                return callWithErrorHandling(source, instance, 3 /* WATCH_CALLBACK */, [onInvalidate]);\r\n            };\r\n        }\r\n    }\r\n    else {\r\n        getter = NOOP;\r\n        (process.env.NODE_ENV !== 'production') && warnInvalidSource(source);\r\n    }\r\n    if (cb && deep) {\r\n        const baseGetter = getter;\r\n        getter = () => traverse(baseGetter());\r\n    }\r\n    let cleanup;\r\n    const onInvalidate = (fn) => {\r\n        cleanup = runner.options.onStop = () => {\r\n            callWithErrorHandling(fn, instance, 4 /* WATCH_CLEANUP */);\r\n        };\r\n    };\r\n    let oldValue = isArray(source) ? [] : INITIAL_WATCHER_VALUE;\r\n    const job = () => {\r\n        if (!runner.active) {\r\n            return;\r\n        }\r\n        if (cb) {\r\n            // watch(source, cb)\r\n            const newValue = runner();\r\n            if (deep || forceTrigger || hasChanged(newValue, oldValue)) {\r\n                // cleanup before running cb again\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                callWithAsyncErrorHandling(cb, instance, 3 /* WATCH_CALLBACK */, [\r\n                    newValue,\r\n                    // pass undefined as the old value when it's changed for the first time\r\n                    oldValue === INITIAL_WATCHER_VALUE ? undefined : oldValue,\r\n                    onInvalidate\r\n                ]);\r\n                oldValue = newValue;\r\n            }\r\n        }\r\n        else {\r\n            // watchEffect\r\n            runner();\r\n        }\r\n    };\r\n    // important: mark the job as a watcher callback so that scheduler knows\r\n    // it is allowed to self-trigger (#1727)\r\n    job.allowRecurse = !!cb;\r\n    let scheduler;\r\n    if (flush === 'sync') {\r\n        scheduler = job;\r\n    }\r\n    else if (flush === 'post') {\r\n        scheduler = () => queuePostRenderEffect(job, instance && instance.suspense);\r\n    }\r\n    else {\r\n        // default: 'pre'\r\n        scheduler = () => {\r\n            if (!instance || instance.isMounted) {\r\n                queuePreFlushCb(job);\r\n            }\r\n            else {\r\n                // with 'pre' option, the first call must happen before\r\n                // the component is mounted so it is called synchronously.\r\n                job();\r\n            }\r\n        };\r\n    }\r\n    const runner = effect(getter, {\r\n        lazy: true,\r\n        onTrack,\r\n        onTrigger,\r\n        scheduler\r\n    });\r\n    recordInstanceBoundEffect(runner);\r\n    // initial run\r\n    if (cb) {\r\n        if (immediate) {\r\n            job();\r\n        }\r\n        else {\r\n            oldValue = runner();\r\n        }\r\n    }\r\n    else if (flush === 'post') {\r\n        queuePostRenderEffect(runner, instance && instance.suspense);\r\n    }\r\n    else {\r\n        runner();\r\n    }\r\n    return () => {\r\n        stop(runner);\r\n        if (instance) {\r\n            remove(instance.effects, runner);\r\n        }\r\n    };\r\n}\r\n// this.$watch\r\nfunction instanceWatch(source, cb, options) {\r\n    const publicThis = this.proxy;\r\n    const getter = isString(source)\r\n        ? () => publicThis[source]\r\n        : source.bind(publicThis);\r\n    return doWatch(getter, cb.bind(publicThis), options, this);\r\n}\r\nfunction traverse(value, seen = new Set()) {\r\n    if (!isObject(value) || seen.has(value)) {\r\n        return value;\r\n    }\r\n    seen.add(value);\r\n    if (isRef(value)) {\r\n        traverse(value.value, seen);\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            traverse(value[i], seen);\r\n        }\r\n    }\r\n    else if (isSet(value) || isMap(value)) {\r\n        value.forEach((v) => {\r\n            traverse(v, seen);\r\n        });\r\n    }\r\n    else {\r\n        for (const key in value) {\r\n            traverse(value[key], seen);\r\n        }\r\n    }\r\n    return value;\r\n}\n\nfunction useTransitionState() {\r\n    const state = {\r\n        isMounted: false,\r\n        isLeaving: false,\r\n        isUnmounting: false,\r\n        leavingVNodes: new Map()\r\n    };\r\n    onMounted(() => {\r\n        state.isMounted = true;\r\n    });\r\n    onBeforeUnmount(() => {\r\n        state.isUnmounting = true;\r\n    });\r\n    return state;\r\n}\r\nconst TransitionHookValidator = [Function, Array];\r\nconst BaseTransitionImpl = {\r\n    name: `BaseTransition`,\r\n    props: {\r\n        mode: String,\r\n        appear: Boolean,\r\n        persisted: Boolean,\r\n        // enter\r\n        onBeforeEnter: TransitionHookValidator,\r\n        onEnter: TransitionHookValidator,\r\n        onAfterEnter: TransitionHookValidator,\r\n        onEnterCancelled: TransitionHookValidator,\r\n        // leave\r\n        onBeforeLeave: TransitionHookValidator,\r\n        onLeave: TransitionHookValidator,\r\n        onAfterLeave: TransitionHookValidator,\r\n        onLeaveCancelled: TransitionHookValidator,\r\n        // appear\r\n        onBeforeAppear: TransitionHookValidator,\r\n        onAppear: TransitionHookValidator,\r\n        onAfterAppear: TransitionHookValidator,\r\n        onAppearCancelled: TransitionHookValidator\r\n    },\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        let prevTransitionKey;\r\n        return () => {\r\n            const children = slots.default && getTransitionRawChildren(slots.default(), true);\r\n            if (!children || !children.length) {\r\n                return;\r\n            }\r\n            // warn multiple elements\r\n            if ((process.env.NODE_ENV !== 'production') && children.length > 1) {\r\n                warn('<transition> can only be used on a single element or component. Use ' +\r\n                    '<transition-group> for lists.');\r\n            }\r\n            // there's no need to track reactivity for these props so use the raw\r\n            // props for a bit better perf\r\n            const rawProps = toRaw(props);\r\n            const { mode } = rawProps;\r\n            // check mode\r\n            if ((process.env.NODE_ENV !== 'production') && mode && !['in-out', 'out-in', 'default'].includes(mode)) {\r\n                warn(`invalid <transition> mode: ${mode}`);\r\n            }\r\n            // at this point children has a guaranteed length of 1.\r\n            const child = children[0];\r\n            if (state.isLeaving) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            // in the case of <transition><keep-alive/></transition>, we need to\r\n            // compare the type of the kept-alive children.\r\n            const innerChild = getKeepAliveChild(child);\r\n            if (!innerChild) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            const enterHooks = resolveTransitionHooks(innerChild, rawProps, state, instance);\r\n            setTransitionHooks(innerChild, enterHooks);\r\n            const oldChild = instance.subTree;\r\n            const oldInnerChild = oldChild && getKeepAliveChild(oldChild);\r\n            let transitionKeyChanged = false;\r\n            const { getTransitionKey } = innerChild.type;\r\n            if (getTransitionKey) {\r\n                const key = getTransitionKey();\r\n                if (prevTransitionKey === undefined) {\r\n                    prevTransitionKey = key;\r\n                }\r\n                else if (key !== prevTransitionKey) {\r\n                    prevTransitionKey = key;\r\n                    transitionKeyChanged = true;\r\n                }\r\n            }\r\n            // handle mode\r\n            if (oldInnerChild &&\r\n                oldInnerChild.type !== Comment &&\r\n                (!isSameVNodeType(innerChild, oldInnerChild) || transitionKeyChanged)) {\r\n                const leavingHooks = resolveTransitionHooks(oldInnerChild, rawProps, state, instance);\r\n                // update old tree's hooks in case of dynamic transition\r\n                setTransitionHooks(oldInnerChild, leavingHooks);\r\n                // switching between different views\r\n                if (mode === 'out-in') {\r\n                    state.isLeaving = true;\r\n                    // return placeholder node and queue update when leave finishes\r\n                    leavingHooks.afterLeave = () => {\r\n                        state.isLeaving = false;\r\n                        instance.update();\r\n                    };\r\n                    return emptyPlaceholder(child);\r\n                }\r\n                else if (mode === 'in-out') {\r\n                    leavingHooks.delayLeave = (el, earlyRemove, delayedLeave) => {\r\n                        const leavingVNodesCache = getLeavingNodesForType(state, oldInnerChild);\r\n                        leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild;\r\n                        // early removal callback\r\n                        el._leaveCb = () => {\r\n                            earlyRemove();\r\n                            el._leaveCb = undefined;\r\n                            delete enterHooks.delayedLeave;\r\n                        };\r\n                        enterHooks.delayedLeave = delayedLeave;\r\n                    };\r\n                }\r\n            }\r\n            return child;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst BaseTransition = BaseTransitionImpl;\r\nfunction getLeavingNodesForType(state, vnode) {\r\n    const { leavingVNodes } = state;\r\n    let leavingVNodesCache = leavingVNodes.get(vnode.type);\r\n    if (!leavingVNodesCache) {\r\n        leavingVNodesCache = Object.create(null);\r\n        leavingVNodes.set(vnode.type, leavingVNodesCache);\r\n    }\r\n    return leavingVNodesCache;\r\n}\r\n// The transition hooks are attached to the vnode as vnode.transition\r\n// and will be called at appropriate timing in the renderer.\r\nfunction resolveTransitionHooks(vnode, props, state, instance) {\r\n    const { appear, mode, persisted = false, onBeforeEnter, onEnter, onAfterEnter, onEnterCancelled, onBeforeLeave, onLeave, onAfterLeave, onLeaveCancelled, onBeforeAppear, onAppear, onAfterAppear, onAppearCancelled } = props;\r\n    const key = String(vnode.key);\r\n    const leavingVNodesCache = getLeavingNodesForType(state, vnode);\r\n    const callHook = (hook, args) => {\r\n        hook &&\r\n            callWithAsyncErrorHandling(hook, instance, 9 /* TRANSITION_HOOK */, args);\r\n    };\r\n    const hooks = {\r\n        mode,\r\n        persisted,\r\n        beforeEnter(el) {\r\n            let hook = onBeforeEnter;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onBeforeAppear || onBeforeEnter;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            // for same element (v-show)\r\n            if (el._leaveCb) {\r\n                el._leaveCb(true /* cancelled */);\r\n            }\r\n            // for toggled element with same key (v-if)\r\n            const leavingVNode = leavingVNodesCache[key];\r\n            if (leavingVNode &&\r\n                isSameVNodeType(vnode, leavingVNode) &&\r\n                leavingVNode.el._leaveCb) {\r\n                // force early removal (not cancelled)\r\n                leavingVNode.el._leaveCb();\r\n            }\r\n            callHook(hook, [el]);\r\n        },\r\n        enter(el) {\r\n            let hook = onEnter;\r\n            let afterHook = onAfterEnter;\r\n            let cancelHook = onEnterCancelled;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onAppear || onEnter;\r\n                    afterHook = onAfterAppear || onAfterEnter;\r\n                    cancelHook = onAppearCancelled || onEnterCancelled;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            let called = false;\r\n            const done = (el._enterCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                if (cancelled) {\r\n                    callHook(cancelHook, [el]);\r\n                }\r\n                else {\r\n                    callHook(afterHook, [el]);\r\n                }\r\n                if (hooks.delayedLeave) {\r\n                    hooks.delayedLeave();\r\n                }\r\n                el._enterCb = undefined;\r\n            });\r\n            if (hook) {\r\n                hook(el, done);\r\n                if (hook.length <= 1) {\r\n                    done();\r\n                }\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        leave(el, remove) {\r\n            const key = String(vnode.key);\r\n            if (el._enterCb) {\r\n                el._enterCb(true /* cancelled */);\r\n            }\r\n            if (state.isUnmounting) {\r\n                return remove();\r\n            }\r\n            callHook(onBeforeLeave, [el]);\r\n            let called = false;\r\n            const done = (el._leaveCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                remove();\r\n                if (cancelled) {\r\n                    callHook(onLeaveCancelled, [el]);\r\n                }\r\n                else {\r\n                    callHook(onAfterLeave, [el]);\r\n                }\r\n                el._leaveCb = undefined;\r\n                if (leavingVNodesCache[key] === vnode) {\r\n                    delete leavingVNodesCache[key];\r\n                }\r\n            });\r\n            leavingVNodesCache[key] = vnode;\r\n            if (onLeave) {\r\n                onLeave(el, done);\r\n                if (onLeave.length <= 1) {\r\n                    done();\r\n                }\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        clone(vnode) {\r\n            return resolveTransitionHooks(vnode, props, state, instance);\r\n        }\r\n    };\r\n    return hooks;\r\n}\r\n// the placeholder really only handles one special case: KeepAlive\r\n// in the case of a KeepAlive in a leave phase we need to return a KeepAlive\r\n// placeholder with empty content to avoid the KeepAlive instance from being\r\n// unmounted.\r\nfunction emptyPlaceholder(vnode) {\r\n    if (isKeepAlive(vnode)) {\r\n        vnode = cloneVNode(vnode);\r\n        vnode.children = null;\r\n        return vnode;\r\n    }\r\n}\r\nfunction getKeepAliveChild(vnode) {\r\n    return isKeepAlive(vnode)\r\n        ? vnode.children\r\n            ? vnode.children[0]\r\n            : undefined\r\n        : vnode;\r\n}\r\nfunction setTransitionHooks(vnode, hooks) {\r\n    if (vnode.shapeFlag & 6 /* COMPONENT */ && vnode.component) {\r\n        setTransitionHooks(vnode.component.subTree, hooks);\r\n    }\r\n    else if ( vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n        vnode.ssContent.transition = hooks.clone(vnode.ssContent);\r\n        vnode.ssFallback.transition = hooks.clone(vnode.ssFallback);\r\n    }\r\n    else {\r\n        vnode.transition = hooks;\r\n    }\r\n}\r\nfunction getTransitionRawChildren(children, keepComment = false) {\r\n    let ret = [];\r\n    let keyedFragmentCount = 0;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        // handle fragment children case, e.g. v-for\r\n        if (child.type === Fragment) {\r\n            if (child.patchFlag & 128 /* KEYED_FRAGMENT */)\r\n                keyedFragmentCount++;\r\n            ret = ret.concat(getTransitionRawChildren(child.children, keepComment));\r\n        }\r\n        // comment placeholders should be skipped, e.g. v-if\r\n        else if (keepComment || child.type !== Comment) {\r\n            ret.push(child);\r\n        }\r\n    }\r\n    // #1126 if a transition children list contains multiple sub fragments, these\r\n    // fragments will be merged into a flat children array. Since each v-for\r\n    // fragment may contain different static bindings inside, we need to de-top\r\n    // these children to force full diffs to ensure correct behavior.\r\n    if (keyedFragmentCount > 1) {\r\n        for (let i = 0; i < ret.length; i++) {\r\n            ret[i].patchFlag = -2 /* BAIL */;\r\n        }\r\n    }\r\n    return ret;\r\n}\n\nconst isKeepAlive = (vnode) => vnode.type.__isKeepAlive;\r\nconst KeepAliveImpl = {\r\n    name: `KeepAlive`,\r\n    // Marker for special handling inside the renderer. We are not using a ===\r\n    // check directly on KeepAlive in the renderer, because importing it directly\r\n    // would prevent it from being tree-shaken.\r\n    __isKeepAlive: true,\r\n    inheritRef: true,\r\n    props: {\r\n        include: [String, RegExp, Array],\r\n        exclude: [String, RegExp, Array],\r\n        max: [String, Number]\r\n    },\r\n    setup(props, { slots }) {\r\n        const cache = new Map();\r\n        const keys = new Set();\r\n        let current = null;\r\n        const instance = getCurrentInstance();\r\n        const parentSuspense = instance.suspense;\r\n        // KeepAlive communicates with the instantiated renderer via the\r\n        // ctx where the renderer passes in its internals,\r\n        // and the KeepAlive instance exposes activate/deactivate implementations.\r\n        // The whole point of this is to avoid importing KeepAlive directly in the\r\n        // renderer to facilitate tree-shaking.\r\n        const sharedContext = instance.ctx;\r\n        const { renderer: { p: patch, m: move, um: _unmount, o: { createElement } } } = sharedContext;\r\n        const storageContainer = createElement('div');\r\n        sharedContext.activate = (vnode, container, anchor, isSVG, optimized) => {\r\n            const instance = vnode.component;\r\n            move(vnode, container, anchor, 0 /* ENTER */, parentSuspense);\r\n            // in case props have changed\r\n            patch(instance.vnode, vnode, container, anchor, instance, parentSuspense, isSVG, optimized);\r\n            queuePostRenderEffect(() => {\r\n                instance.isDeactivated = false;\r\n                if (instance.a) {\r\n                    invokeArrayFns(instance.a);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeMounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n            }, parentSuspense);\r\n        };\r\n        sharedContext.deactivate = (vnode) => {\r\n            const instance = vnode.component;\r\n            move(vnode, storageContainer, null, 1 /* LEAVE */, parentSuspense);\r\n            queuePostRenderEffect(() => {\r\n                if (instance.da) {\r\n                    invokeArrayFns(instance.da);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeUnmounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n                instance.isDeactivated = true;\r\n            }, parentSuspense);\r\n        };\r\n        function unmount(vnode) {\r\n            // reset the shapeFlag so it can be properly unmounted\r\n            resetShapeFlag(vnode);\r\n            _unmount(vnode, instance, parentSuspense);\r\n        }\r\n        function pruneCache(filter) {\r\n            cache.forEach((vnode, key) => {\r\n                const name = getName(vnode.type);\r\n                if (name && (!filter || !filter(name))) {\r\n                    pruneCacheEntry(key);\r\n                }\r\n            });\r\n        }\r\n        function pruneCacheEntry(key) {\r\n            const cached = cache.get(key);\r\n            if (!current || cached.type !== current.type) {\r\n                unmount(cached);\r\n            }\r\n            else if (current) {\r\n                // current active instance should no longer be kept-alive.\r\n                // we can't unmount it now but it might be later, so reset its flag now.\r\n                resetShapeFlag(current);\r\n            }\r\n            cache.delete(key);\r\n            keys.delete(key);\r\n        }\r\n        // prune cache on include/exclude prop change\r\n        watch(() => [props.include, props.exclude], ([include, exclude]) => {\r\n            include && pruneCache(name => matches(include, name));\r\n            exclude && pruneCache(name => !matches(exclude, name));\r\n        }, \r\n        // prune post-render after `current` has been updated\r\n        { flush: 'post' });\r\n        // cache sub tree after render\r\n        let pendingCacheKey = null;\r\n        const cacheSubtree = () => {\r\n            // fix #1621, the pendingCacheKey could be 0\r\n            if (pendingCacheKey != null) {\r\n                cache.set(pendingCacheKey, getInnerChild(instance.subTree));\r\n            }\r\n        };\r\n        onMounted(cacheSubtree);\r\n        onUpdated(cacheSubtree);\r\n        onBeforeUnmount(() => {\r\n            cache.forEach(cached => {\r\n                const { subTree, suspense } = instance;\r\n                const vnode = getInnerChild(subTree);\r\n                if (cached.type === vnode.type) {\r\n                    // current instance will be unmounted as part of keep-alive's unmount\r\n                    resetShapeFlag(vnode);\r\n                    // but invoke its deactivated hook here\r\n                    const da = vnode.component.da;\r\n                    da && queuePostRenderEffect(da, suspense);\r\n                    return;\r\n                }\r\n                unmount(cached);\r\n            });\r\n        });\r\n        return () => {\r\n            pendingCacheKey = null;\r\n            if (!slots.default) {\r\n                return null;\r\n            }\r\n            const children = slots.default();\r\n            const rawVNode = children[0];\r\n            if (children.length > 1) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`KeepAlive should contain exactly one component child.`);\r\n                }\r\n                current = null;\r\n                return children;\r\n            }\r\n            else if (!isVNode(rawVNode) ||\r\n                (!(rawVNode.shapeFlag & 4 /* STATEFUL_COMPONENT */) &&\r\n                    !(rawVNode.shapeFlag & 128 /* SUSPENSE */))) {\r\n                current = null;\r\n                return rawVNode;\r\n            }\r\n            let vnode = getInnerChild(rawVNode);\r\n            const comp = vnode.type;\r\n            const name = getName(comp);\r\n            const { include, exclude, max } = props;\r\n            if ((include && (!name || !matches(include, name))) ||\r\n                (exclude && name && matches(exclude, name))) {\r\n                current = vnode;\r\n                return rawVNode;\r\n            }\r\n            const key = vnode.key == null ? comp : vnode.key;\r\n            const cachedVNode = cache.get(key);\r\n            // clone vnode if it's reused because we are going to mutate it\r\n            if (vnode.el) {\r\n                vnode = cloneVNode(vnode);\r\n                if (rawVNode.shapeFlag & 128 /* SUSPENSE */) {\r\n                    rawVNode.ssContent = vnode;\r\n                }\r\n            }\r\n            // #1513 it's possible for the returned vnode to be cloned due to attr\r\n            // fallthrough or scopeId, so the vnode here may not be the final vnode\r\n            // that is mounted. Instead of caching it directly, we store the pending\r\n            // key and cache `instance.subTree` (the normalized vnode) in\r\n            // beforeMount/beforeUpdate hooks.\r\n            pendingCacheKey = key;\r\n            if (cachedVNode) {\r\n                // copy over mounted state\r\n                vnode.el = cachedVNode.el;\r\n                vnode.component = cachedVNode.component;\r\n                if (vnode.transition) {\r\n                    // recursively update transition hooks on subTree\r\n                    setTransitionHooks(vnode, vnode.transition);\r\n                }\r\n                // avoid vnode being mounted as fresh\r\n                vnode.shapeFlag |= 512 /* COMPONENT_KEPT_ALIVE */;\r\n                // make this key the freshest\r\n                keys.delete(key);\r\n                keys.add(key);\r\n            }\r\n            else {\r\n                keys.add(key);\r\n                // prune oldest entry\r\n                if (max && keys.size > parseInt(max, 10)) {\r\n                    pruneCacheEntry(keys.values().next().value);\r\n                }\r\n            }\r\n            // avoid vnode being unmounted\r\n            vnode.shapeFlag |= 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n            current = vnode;\r\n            return rawVNode;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst KeepAlive = KeepAliveImpl;\r\nfunction getName(comp) {\r\n    return comp.displayName || comp.name;\r\n}\r\nfunction matches(pattern, name) {\r\n    if (isArray(pattern)) {\r\n        return pattern.some((p) => matches(p, name));\r\n    }\r\n    else if (isString(pattern)) {\r\n        return pattern.split(',').indexOf(name) > -1;\r\n    }\r\n    else if (pattern.test) {\r\n        return pattern.test(name);\r\n    }\r\n    /* istanbul ignore next */\r\n    return false;\r\n}\r\nfunction onActivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"a\" /* ACTIVATED */, target);\r\n}\r\nfunction onDeactivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"da\" /* DEACTIVATED */, target);\r\n}\r\nfunction registerKeepAliveHook(hook, type, target = currentInstance) {\r\n    // cache the deactivate branch check wrapper for injected hooks so the same\r\n    // hook can be properly deduped by the scheduler. \"__wdc\" stands for \"with\r\n    // deactivation check\".\r\n    const wrappedHook = hook.__wdc ||\r\n        (hook.__wdc = () => {\r\n            // only fire the hook if the target instance is NOT in a deactivated branch.\r\n            let current = target;\r\n            while (current) {\r\n                if (current.isDeactivated) {\r\n                    return;\r\n                }\r\n                current = current.parent;\r\n            }\r\n            hook();\r\n        });\r\n    injectHook(type, wrappedHook, target);\r\n    // In addition to registering it on the target instance, we walk up the parent\r\n    // chain and register it on all ancestor instances that are keep-alive roots.\r\n    // This avoids the need to walk the entire component tree when invoking these\r\n    // hooks, and more importantly, avoids the need to track child components in\r\n    // arrays.\r\n    if (target) {\r\n        let current = target.parent;\r\n        while (current && current.parent) {\r\n            if (isKeepAlive(current.parent.vnode)) {\r\n                injectToKeepAliveRoot(wrappedHook, type, target, current);\r\n            }\r\n            current = current.parent;\r\n        }\r\n    }\r\n}\r\nfunction injectToKeepAliveRoot(hook, type, target, keepAliveRoot) {\r\n    // injectHook wraps the original for error handling, so make sure to remove\r\n    // the wrapped version.\r\n    const injected = injectHook(type, hook, keepAliveRoot, true /* prepend */);\r\n    onUnmounted(() => {\r\n        remove(keepAliveRoot[type], injected);\r\n    }, target);\r\n}\r\nfunction resetShapeFlag(vnode) {\r\n    let shapeFlag = vnode.shapeFlag;\r\n    if (shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n        shapeFlag -= 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n    }\r\n    if (shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {\r\n        shapeFlag -= 512 /* COMPONENT_KEPT_ALIVE */;\r\n    }\r\n    vnode.shapeFlag = shapeFlag;\r\n}\r\nfunction getInnerChild(vnode) {\r\n    return vnode.shapeFlag & 128 /* SUSPENSE */ ? vnode.ssContent : vnode;\r\n}\n\nconst isInternalKey = (key) => key[0] === '_' || key === '$stable';\r\nconst normalizeSlotValue = (value) => isArray(value)\r\n    ? value.map(normalizeVNode)\r\n    : [normalizeVNode(value)];\r\nconst normalizeSlot = (key, rawSlot, ctx) => withCtx((props) => {\r\n    if ((process.env.NODE_ENV !== 'production') && currentInstance) {\r\n        warn(`Slot \"${key}\" invoked outside of the render function: ` +\r\n            `this will not track dependencies used in the slot. ` +\r\n            `Invoke the slot function inside the render function instead.`);\r\n    }\r\n    return normalizeSlotValue(rawSlot(props));\r\n}, ctx);\r\nconst normalizeObjectSlots = (rawSlots, slots) => {\r\n    const ctx = rawSlots._ctx;\r\n    for (const key in rawSlots) {\r\n        if (isInternalKey(key))\r\n            continue;\r\n        const value = rawSlots[key];\r\n        if (isFunction(value)) {\r\n            slots[key] = normalizeSlot(key, value, ctx);\r\n        }\r\n        else if (value != null) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Non-function value encountered for slot \"${key}\". ` +\r\n                    `Prefer function slots for better performance.`);\r\n            }\r\n            const normalized = normalizeSlotValue(value);\r\n            slots[key] = () => normalized;\r\n        }\r\n    }\r\n};\r\nconst normalizeVNodeSlots = (instance, children) => {\r\n    if ((process.env.NODE_ENV !== 'production') && !isKeepAlive(instance.vnode)) {\r\n        warn(`Non-function value encountered for default slot. ` +\r\n            `Prefer function slots for better performance.`);\r\n    }\r\n    const normalized = normalizeSlotValue(children);\r\n    instance.slots.default = () => normalized;\r\n};\r\nconst initSlots = (instance, children) => {\r\n    if (instance.vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            instance.slots = children;\r\n            // make compiler marker non-enumerable\r\n            def(children, '_', type);\r\n        }\r\n        else {\r\n            normalizeObjectSlots(children, (instance.slots = {}));\r\n        }\r\n    }\r\n    else {\r\n        instance.slots = {};\r\n        if (children) {\r\n            normalizeVNodeSlots(instance, children);\r\n        }\r\n    }\r\n    def(instance.slots, InternalObjectKey, 1);\r\n};\r\nconst updateSlots = (instance, children) => {\r\n    const { vnode, slots } = instance;\r\n    let needDeletionCheck = true;\r\n    let deletionComparisonTarget = EMPTY_OBJ;\r\n    if (vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            // compiled slots.\r\n            if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n                // Parent was HMR updated so slot content may have changed.\r\n                // force update slots and mark instance for hmr as well\r\n                extend(slots, children);\r\n            }\r\n            else if (type === 1 /* STABLE */) {\r\n                // compiled AND stable.\r\n                // no need to update, and skip stale slots removal.\r\n                needDeletionCheck = false;\r\n            }\r\n            else {\r\n                // compiled but dynamic (v-if/v-for on slots) - update slots, but skip\r\n                // normalization.\r\n                extend(slots, children);\r\n            }\r\n        }\r\n        else {\r\n            needDeletionCheck = !children.$stable;\r\n            normalizeObjectSlots(children, slots);\r\n        }\r\n        deletionComparisonTarget = children;\r\n    }\r\n    else if (children) {\r\n        // non slot object children (direct value) passed to a component\r\n        normalizeVNodeSlots(instance, children);\r\n        deletionComparisonTarget = { default: 1 };\r\n    }\r\n    // delete stale slots\r\n    if (needDeletionCheck) {\r\n        for (const key in slots) {\r\n            if (!isInternalKey(key) && !(key in deletionComparisonTarget)) {\r\n                delete slots[key];\r\n            }\r\n        }\r\n    }\r\n};\n\n/**\r\nRuntime helper for applying directives to a vnode. Example usage:\r\n\nconst comp = resolveComponent('comp')\r\nconst foo = resolveDirective('foo')\r\nconst bar = resolveDirective('bar')\r\n\nreturn withDirectives(h(comp), [\r\n  [foo, this.x],\r\n  [bar, this.y]\r\n])\r\n*/\r\nconst isBuiltInDirective = /*#__PURE__*/ makeMap('bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text');\r\nfunction validateDirectiveName(name) {\r\n    if (isBuiltInDirective(name)) {\r\n        warn('Do not use built-in directive ids as custom directive id: ' + name);\r\n    }\r\n}\r\n/**\r\n * Adds directives to a VNode.\r\n */\r\nfunction withDirectives(vnode, directives) {\r\n    const internalInstance = currentRenderingInstance;\r\n    if (internalInstance === null) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`withDirectives can only be used inside render functions.`);\r\n        return vnode;\r\n    }\r\n    const instance = internalInstance.proxy;\r\n    const bindings = vnode.dirs || (vnode.dirs = []);\r\n    for (let i = 0; i < directives.length; i++) {\r\n        let [dir, value, arg, modifiers = EMPTY_OBJ] = directives[i];\r\n        if (isFunction(dir)) {\r\n            dir = {\r\n                mounted: dir,\r\n                updated: dir\r\n            };\r\n        }\r\n        bindings.push({\r\n            dir,\r\n            instance,\r\n            value,\r\n            oldValue: void 0,\r\n            arg,\r\n            modifiers\r\n        });\r\n    }\r\n    return vnode;\r\n}\r\nfunction invokeDirectiveHook(vnode, prevVNode, instance, name) {\r\n    const bindings = vnode.dirs;\r\n    const oldBindings = prevVNode && prevVNode.dirs;\r\n    for (let i = 0; i < bindings.length; i++) {\r\n        const binding = bindings[i];\r\n        if (oldBindings) {\r\n            binding.oldValue = oldBindings[i].value;\r\n        }\r\n        const hook = binding.dir[name];\r\n        if (hook) {\r\n            callWithAsyncErrorHandling(hook, instance, 8 /* DIRECTIVE_HOOK */, [\r\n                vnode.el,\r\n                binding,\r\n                vnode,\r\n                prevVNode\r\n            ]);\r\n        }\r\n    }\r\n}\n\nfunction createAppContext() {\r\n    return {\r\n        app: null,\r\n        config: {\r\n            isNativeTag: NO,\r\n            performance: false,\r\n            globalProperties: {},\r\n            optionMergeStrategies: {},\r\n            isCustomElement: NO,\r\n            errorHandler: undefined,\r\n            warnHandler: undefined\r\n        },\r\n        mixins: [],\r\n        components: {},\r\n        directives: {},\r\n        provides: Object.create(null)\r\n    };\r\n}\r\nlet uid = 0;\r\nfunction createAppAPI(render, hydrate) {\r\n    return function createApp(rootComponent, rootProps = null) {\r\n        if (rootProps != null && !isObject(rootProps)) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`root props passed to app.mount() must be an object.`);\r\n            rootProps = null;\r\n        }\r\n        const context = createAppContext();\r\n        const installedPlugins = new Set();\r\n        let isMounted = false;\r\n        const app = (context.app = {\r\n            _uid: uid++,\r\n            _component: rootComponent,\r\n            _props: rootProps,\r\n            _container: null,\r\n            _context: context,\r\n            version,\r\n            get config() {\r\n                return context.config;\r\n            },\r\n            set config(v) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`app.config cannot be replaced. Modify individual options instead.`);\r\n                }\r\n            },\r\n            use(plugin, ...options) {\r\n                if (installedPlugins.has(plugin)) {\r\n                    (process.env.NODE_ENV !== 'production') && warn(`Plugin has already been applied to target app.`);\r\n                }\r\n                else if (plugin && isFunction(plugin.install)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin.install(app, ...options);\r\n                }\r\n                else if (isFunction(plugin)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin(app, ...options);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`A plugin must either be a function or an object with an \"install\" ` +\r\n                        `function.`);\r\n                }\r\n                return app;\r\n            },\r\n            mixin(mixin) {\r\n                if (__VUE_OPTIONS_API__) {\r\n                    if (!context.mixins.includes(mixin)) {\r\n                        context.mixins.push(mixin);\r\n                        // global mixin with props/emits de-optimizes props/emits\r\n                        // normalization caching.\r\n                        if (mixin.props || mixin.emits) {\r\n                            context.deopt = true;\r\n                        }\r\n                    }\r\n                    else if ((process.env.NODE_ENV !== 'production')) {\r\n                        warn('Mixin has already been applied to target app' +\r\n                            (mixin.name ? `: ${mixin.name}` : ''));\r\n                    }\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Mixins are only available in builds supporting Options API');\r\n                }\r\n                return app;\r\n            },\r\n            component(name, component) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    validateComponentName(name, context.config);\r\n                }\r\n                if (!component) {\r\n                    return context.components[name];\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && context.components[name]) {\r\n                    warn(`Component \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.components[name] = component;\r\n                return app;\r\n            },\r\n            directive(name, directive) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    validateDirectiveName(name);\r\n                }\r\n                if (!directive) {\r\n                    return context.directives[name];\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && context.directives[name]) {\r\n                    warn(`Directive \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.directives[name] = directive;\r\n                return app;\r\n            },\r\n            mount(rootContainer, isHydrate) {\r\n                if (!isMounted) {\r\n                    const vnode = createVNode(rootComponent, rootProps);\r\n                    // store app context on the root VNode.\r\n                    // this will be set on the root instance on initial mount.\r\n                    vnode.appContext = context;\r\n                    // HMR root reload\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        context.reload = () => {\r\n                            render(cloneVNode(vnode), rootContainer);\r\n                        };\r\n                    }\r\n                    if (isHydrate && hydrate) {\r\n                        hydrate(vnode, rootContainer);\r\n                    }\r\n                    else {\r\n                        render(vnode, rootContainer);\r\n                    }\r\n                    isMounted = true;\r\n                    app._container = rootContainer;\r\n                    rootContainer.__vue_app__ = app;\r\n                    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                        devtoolsInitApp(app, version);\r\n                    }\r\n                    return vnode.component.proxy;\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`App has already been mounted.\\n` +\r\n                        `If you want to remount the same app, move your app creation logic ` +\r\n                        `into a factory function and create fresh app instances for each ` +\r\n                        `mount - e.g. \\`const createMyApp = () => createApp(App)\\``);\r\n                }\r\n            },\r\n            unmount() {\r\n                if (isMounted) {\r\n                    render(null, app._container);\r\n                    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                        devtoolsUnmountApp(app);\r\n                    }\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`Cannot unmount an app that is not mounted.`);\r\n                }\r\n            },\r\n            provide(key, value) {\r\n                if ((process.env.NODE_ENV !== 'production') && key in context.provides) {\r\n                    warn(`App already provides property with key \"${String(key)}\". ` +\r\n                        `It will be overwritten with the new value.`);\r\n                }\r\n                // TypeScript doesn't allow symbols as index type\r\n                // https://github.com/Microsoft/TypeScript/issues/24587\r\n                context.provides[key] = value;\r\n                return app;\r\n            }\r\n        });\r\n        return app;\r\n    };\r\n}\n\nlet hasMismatch = false;\r\nconst isSVGContainer = (container) => /svg/.test(container.namespaceURI) && container.tagName !== 'foreignObject';\r\nconst isComment = (node) => node.nodeType === 8 /* COMMENT */;\r\n// Note: hydration is DOM-specific\r\n// But we have to place it in core due to tight coupling with core - splitting\r\n// it out creates a ton of unnecessary complexity.\r\n// Hydration also depends on some renderer internal logic which needs to be\r\n// passed in via arguments.\r\nfunction createHydrationFunctions(rendererInternals) {\r\n    const { mt: mountComponent, p: patch, o: { patchProp, nextSibling, parentNode, remove, insert, createComment } } = rendererInternals;\r\n    const hydrate = (vnode, container) => {\r\n        if ((process.env.NODE_ENV !== 'production') && !container.hasChildNodes()) {\r\n            warn(`Attempting to hydrate existing markup but container is empty. ` +\r\n                `Performing full mount instead.`);\r\n            patch(null, vnode, container);\r\n            return;\r\n        }\r\n        hasMismatch = false;\r\n        hydrateNode(container.firstChild, vnode, null, null);\r\n        flushPostFlushCbs();\r\n        if (hasMismatch && !false) {\r\n            // this error should show up in production\r\n            console.error(`Hydration completed but contains mismatches.`);\r\n        }\r\n    };\r\n    const hydrateNode = (node, vnode, parentComponent, parentSuspense, optimized = false) => {\r\n        const isFragmentStart = isComment(node) && node.data === '[';\r\n        const onMismatch = () => handleMismatch(node, vnode, parentComponent, parentSuspense, isFragmentStart);\r\n        const { type, ref, shapeFlag } = vnode;\r\n        const domType = node.nodeType;\r\n        vnode.el = node;\r\n        let nextNode = null;\r\n        switch (type) {\r\n            case Text:\r\n                if (domType !== 3 /* TEXT */) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    if (node.data !== vnode.children) {\r\n                        hasMismatch = true;\r\n                        (process.env.NODE_ENV !== 'production') &&\r\n                            warn(`Hydration text mismatch:` +\r\n                                `\\n- Client: ${JSON.stringify(node.data)}` +\r\n                                `\\n- Server: ${JSON.stringify(vnode.children)}`);\r\n                        node.data = vnode.children;\r\n                    }\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Comment:\r\n                if (domType !== 8 /* COMMENT */ || isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Static:\r\n                if (domType !== 1 /* ELEMENT */) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    // determine anchor, adopt content\r\n                    nextNode = node;\r\n                    // if the static vnode has its content stripped during build,\r\n                    // adopt it from the server-rendered HTML.\r\n                    const needToAdoptContent = !vnode.children.length;\r\n                    for (let i = 0; i < vnode.staticCount; i++) {\r\n                        if (needToAdoptContent)\r\n                            vnode.children += nextNode.outerHTML;\r\n                        if (i === vnode.staticCount - 1) {\r\n                            vnode.anchor = nextNode;\r\n                        }\r\n                        nextNode = nextSibling(nextNode);\r\n                    }\r\n                    return nextNode;\r\n                }\r\n                break;\r\n            case Fragment:\r\n                if (!isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = hydrateFragment(node, vnode, parentComponent, parentSuspense, optimized);\r\n                }\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    if (domType !== 1 /* ELEMENT */ ||\r\n                        vnode.type !== node.tagName.toLowerCase()) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = hydrateElement(node, vnode, parentComponent, parentSuspense, optimized);\r\n                    }\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    // when setting up the render effect, if the initial vnode already\r\n                    // has .el set, the component will perform hydration instead of mount\r\n                    // on its sub-tree.\r\n                    const container = parentNode(node);\r\n                    const hydrateComponent = () => {\r\n                        mountComponent(vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container), optimized);\r\n                    };\r\n                    // async component\r\n                    const loadAsync = vnode.type.__asyncLoader;\r\n                    if (loadAsync) {\r\n                        loadAsync().then(hydrateComponent);\r\n                    }\r\n                    else {\r\n                        hydrateComponent();\r\n                    }\r\n                    // component may be async, so in the case of fragments we cannot rely\r\n                    // on component's rendered output to determine the end of the fragment\r\n                    // instead, we do a lookahead to find the end anchor node.\r\n                    nextNode = isFragmentStart\r\n                        ? locateClosingAsyncAnchor(node)\r\n                        : nextSibling(node);\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    if (domType !== 8 /* COMMENT */) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, optimized, rendererInternals, hydrateChildren);\r\n                    }\r\n                }\r\n                else if ( shapeFlag & 128 /* SUSPENSE */) {\r\n                    nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, isSVGContainer(parentNode(node)), optimized, rendererInternals, hydrateNode);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid HostVNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        if (ref != null && parentComponent) {\r\n            setRef(ref, null, parentComponent, parentSuspense, vnode);\r\n        }\r\n        return nextNode;\r\n    };\r\n    const hydrateElement = (el, vnode, parentComponent, parentSuspense, optimized) => {\r\n        optimized = optimized || !!vnode.dynamicChildren;\r\n        const { props, patchFlag, shapeFlag, dirs } = vnode;\r\n        // skip props & children if this is hoisted static nodes\r\n        if (patchFlag !== -1 /* HOISTED */) {\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\r\n            }\r\n            // props\r\n            if (props) {\r\n                if (!optimized ||\r\n                    (patchFlag & 16 /* FULL_PROPS */ ||\r\n                        patchFlag & 32 /* HYDRATE_EVENTS */)) {\r\n                    for (const key in props) {\r\n                        if (!isReservedProp(key) && isOn(key)) {\r\n                            patchProp(el, key, null, props[key]);\r\n                        }\r\n                    }\r\n                }\r\n                else if (props.onClick) {\r\n                    // Fast path for click listeners (which is most often) to avoid\r\n                    // iterating through props.\r\n                    patchProp(el, 'onClick', null, props.onClick);\r\n                }\r\n            }\r\n            // vnode / directive hooks\r\n            let vnodeHooks;\r\n            if ((vnodeHooks = props && props.onVnodeBeforeMount)) {\r\n                invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n            }\r\n            if ((vnodeHooks = props && props.onVnodeMounted) || dirs) {\r\n                queueEffectWithSuspense(() => {\r\n                    vnodeHooks && invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n                    dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n                }, parentSuspense);\r\n            }\r\n            // children\r\n            if (shapeFlag & 16 /* ARRAY_CHILDREN */ &&\r\n                // skip if element has innerHTML / textContent\r\n                !(props && (props.innerHTML || props.textContent))) {\r\n                let next = hydrateChildren(el.firstChild, vnode, el, parentComponent, parentSuspense, optimized);\r\n                let hasWarned = false;\r\n                while (next) {\r\n                    hasMismatch = true;\r\n                    if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\r\n                        warn(`Hydration children mismatch in <${vnode.type}>: ` +\r\n                            `server rendered element contains more child nodes than client vdom.`);\r\n                        hasWarned = true;\r\n                    }\r\n                    // The SSRed DOM contains more nodes than it should. Remove them.\r\n                    const cur = next;\r\n                    next = next.nextSibling;\r\n                    remove(cur);\r\n                }\r\n            }\r\n            else if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                if (el.textContent !== vnode.children) {\r\n                    hasMismatch = true;\r\n                    (process.env.NODE_ENV !== 'production') &&\r\n                        warn(`Hydration text content mismatch in <${vnode.type}>:\\n` +\r\n                            `- Client: ${el.textContent}\\n` +\r\n                            `- Server: ${vnode.children}`);\r\n                    el.textContent = vnode.children;\r\n                }\r\n            }\r\n        }\r\n        return el.nextSibling;\r\n    };\r\n    const hydrateChildren = (node, parentVNode, container, parentComponent, parentSuspense, optimized) => {\r\n        optimized = optimized || !!parentVNode.dynamicChildren;\r\n        const children = parentVNode.children;\r\n        const l = children.length;\r\n        let hasWarned = false;\r\n        for (let i = 0; i < l; i++) {\r\n            const vnode = optimized\r\n                ? children[i]\r\n                : (children[i] = normalizeVNode(children[i]));\r\n            if (node) {\r\n                node = hydrateNode(node, vnode, parentComponent, parentSuspense, optimized);\r\n            }\r\n            else {\r\n                hasMismatch = true;\r\n                if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\r\n                    warn(`Hydration children mismatch in <${container.tagName.toLowerCase()}>: ` +\r\n                        `server rendered element contains fewer child nodes than client vdom.`);\r\n                    hasWarned = true;\r\n                }\r\n                // the SSRed DOM didn't contain enough nodes. Mount the missing ones.\r\n                patch(null, vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container));\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    const hydrateFragment = (node, vnode, parentComponent, parentSuspense, optimized) => {\r\n        const container = parentNode(node);\r\n        const next = hydrateChildren(nextSibling(node), vnode, container, parentComponent, parentSuspense, optimized);\r\n        if (next && isComment(next) && next.data === ']') {\r\n            return nextSibling((vnode.anchor = next));\r\n        }\r\n        else {\r\n            // fragment didn't hydrate successfully, since we didn't get a end anchor\r\n            // back. This should have led to node/children mismatch warnings.\r\n            hasMismatch = true;\r\n            // since the anchor is missing, we need to create one and insert it\r\n            insert((vnode.anchor = createComment(`]`)), container, next);\r\n            return next;\r\n        }\r\n    };\r\n    const handleMismatch = (node, vnode, parentComponent, parentSuspense, isFragment) => {\r\n        hasMismatch = true;\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`Hydration node mismatch:\\n- Client vnode:`, vnode.type, `\\n- Server rendered DOM:`, node, node.nodeType === 3 /* TEXT */\r\n                ? `(text)`\r\n                : isComment(node) && node.data === '['\r\n                    ? `(start of fragment)`\r\n                    : ``);\r\n        vnode.el = null;\r\n        if (isFragment) {\r\n            // remove excessive fragment nodes\r\n            const end = locateClosingAsyncAnchor(node);\r\n            while (true) {\r\n                const next = nextSibling(node);\r\n                if (next && next !== end) {\r\n                    remove(next);\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        const next = nextSibling(node);\r\n        const container = parentNode(node);\r\n        remove(node);\r\n        patch(null, vnode, container, next, parentComponent, parentSuspense, isSVGContainer(container));\r\n        return next;\r\n    };\r\n    const locateClosingAsyncAnchor = (node) => {\r\n        let match = 0;\r\n        while (node) {\r\n            node = nextSibling(node);\r\n            if (node && isComment(node)) {\r\n                if (node.data === '[')\r\n                    match++;\r\n                if (node.data === ']') {\r\n                    if (match === 0) {\r\n                        return nextSibling(node);\r\n                    }\r\n                    else {\r\n                        match--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    return [hydrate, hydrateNode];\r\n}\n\nlet supported;\r\nlet perf;\r\nfunction startMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        perf.mark(`vue-${type}-${instance.uid}`);\r\n    }\r\n}\r\nfunction endMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        const startTag = `vue-${type}-${instance.uid}`;\r\n        const endTag = startTag + `:end`;\r\n        perf.mark(endTag);\r\n        perf.measure(`<${formatComponentName(instance, instance.type)}> ${type}`, startTag, endTag);\r\n        perf.clearMarks(startTag);\r\n        perf.clearMarks(endTag);\r\n    }\r\n}\r\nfunction isSupported() {\r\n    if (supported !== undefined) {\r\n        return supported;\r\n    }\r\n    /* eslint-disable no-restricted-globals */\r\n    if (typeof window !== 'undefined' && window.performance) {\r\n        supported = true;\r\n        perf = window.performance;\r\n    }\r\n    else {\r\n        supported = false;\r\n    }\r\n    /* eslint-enable no-restricted-globals */\r\n    return supported;\r\n}\n\n/**\r\n * This is only called in esm-bundler builds.\r\n * It is called when a renderer is created, in `baseCreateRenderer` so that\r\n * importing runtime-core is side-effects free.\r\n *\r\n * istanbul-ignore-next\r\n */\r\nfunction initFeatureFlags() {\r\n    let needWarn = false;\r\n    if (typeof __VUE_OPTIONS_API__ !== 'boolean') {\r\n        needWarn = true;\r\n        getGlobalThis().__VUE_OPTIONS_API__ = true;\r\n    }\r\n    if (typeof __VUE_PROD_DEVTOOLS__ !== 'boolean') {\r\n        needWarn = true;\r\n        getGlobalThis().__VUE_PROD_DEVTOOLS__ = false;\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && needWarn) {\r\n        console.warn(`You are running the esm-bundler build of Vue. It is recommended to ` +\r\n            `configure your bundler to explicitly replace feature flag globals ` +\r\n            `with boolean literals to get proper tree-shaking in the final bundle. ` +\r\n            `See http://link.vuejs.org/feature-flags for more details.`);\r\n    }\r\n}\n\nconst prodEffectOptions = {\r\n    scheduler: queueJob,\r\n    // #1801, #2043 component render effects should allow recursive updates\r\n    allowRecurse: true\r\n};\r\nfunction createDevEffectOptions(instance) {\r\n    return {\r\n        scheduler: queueJob,\r\n        allowRecurse: true,\r\n        onTrack: instance.rtc ? e => invokeArrayFns(instance.rtc, e) : void 0,\r\n        onTrigger: instance.rtg ? e => invokeArrayFns(instance.rtg, e) : void 0\r\n    };\r\n}\r\nconst queuePostRenderEffect =  queueEffectWithSuspense\r\n    ;\r\nconst setRef = (rawRef, oldRawRef, parentComponent, parentSuspense, vnode) => {\r\n    if (isArray(rawRef)) {\r\n        rawRef.forEach((r, i) => setRef(r, oldRawRef && (isArray(oldRawRef) ? oldRawRef[i] : oldRawRef), parentComponent, parentSuspense, vnode));\r\n        return;\r\n    }\r\n    let value;\r\n    if (!vnode) {\r\n        value = null;\r\n    }\r\n    else {\r\n        if (vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */) {\r\n            value = vnode.component.proxy;\r\n        }\r\n        else {\r\n            value = vnode.el;\r\n        }\r\n    }\r\n    const { i: owner, r: ref } = rawRef;\r\n    if ((process.env.NODE_ENV !== 'production') && !owner) {\r\n        warn(`Missing ref owner context. ref cannot be used on hoisted vnodes. ` +\r\n            `A vnode with ref must be created inside the render function.`);\r\n        return;\r\n    }\r\n    const oldRef = oldRawRef && oldRawRef.r;\r\n    const refs = owner.refs === EMPTY_OBJ ? (owner.refs = {}) : owner.refs;\r\n    const setupState = owner.setupState;\r\n    // unset old ref\r\n    if (oldRef != null && oldRef !== ref) {\r\n        if (isString(oldRef)) {\r\n            refs[oldRef] = null;\r\n            if (hasOwn(setupState, oldRef)) {\r\n                setupState[oldRef] = null;\r\n            }\r\n        }\r\n        else if (isRef(oldRef)) {\r\n            oldRef.value = null;\r\n        }\r\n    }\r\n    if (isString(ref)) {\r\n        const doSet = () => {\r\n            refs[ref] = value;\r\n            if (hasOwn(setupState, ref)) {\r\n                setupState[ref] = value;\r\n            }\r\n        };\r\n        // #1789: for non-null values, set them after render\r\n        // null values means this is unmount and it should not overwrite another\r\n        // ref with the same key\r\n        if (value) {\r\n            doSet.id = -1;\r\n            queuePostRenderEffect(doSet, parentSuspense);\r\n        }\r\n        else {\r\n            doSet();\r\n        }\r\n    }\r\n    else if (isRef(ref)) {\r\n        const doSet = () => {\r\n            ref.value = value;\r\n        };\r\n        if (value) {\r\n            doSet.id = -1;\r\n            queuePostRenderEffect(doSet, parentSuspense);\r\n        }\r\n        else {\r\n            doSet();\r\n        }\r\n    }\r\n    else if (isFunction(ref)) {\r\n        callWithErrorHandling(ref, parentComponent, 12 /* FUNCTION_REF */, [\r\n            value,\r\n            refs\r\n        ]);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn('Invalid template ref type:', value, `(${typeof value})`);\r\n    }\r\n};\r\n/**\r\n * The createRenderer function accepts two generic arguments:\r\n * HostNode and HostElement, corresponding to Node and Element types in the\r\n * host environment. For example, for runtime-dom, HostNode would be the DOM\r\n * `Node` interface and HostElement would be the DOM `Element` interface.\r\n *\r\n * Custom renderers can pass in the platform specific types like this:\r\n *\r\n * ``` js\r\n * const { render, createApp } = createRenderer<Node, Element>({\r\n *   patchProp,\r\n *   ...nodeOps\r\n * })\r\n * ```\r\n */\r\nfunction createRenderer(options) {\r\n    return baseCreateRenderer(options);\r\n}\r\n// Separate API for creating hydration-enabled renderer.\r\n// Hydration logic is only used when calling this function, making it\r\n// tree-shakable.\r\nfunction createHydrationRenderer(options) {\r\n    return baseCreateRenderer(options, createHydrationFunctions);\r\n}\r\n// implementation\r\nfunction baseCreateRenderer(options, createHydrationFns) {\r\n    // compile-time feature flags check\r\n    {\r\n        initFeatureFlags();\r\n    }\r\n    const { insert: hostInsert, remove: hostRemove, patchProp: hostPatchProp, forcePatchProp: hostForcePatchProp, createElement: hostCreateElement, createText: hostCreateText, createComment: hostCreateComment, setText: hostSetText, setElementText: hostSetElementText, parentNode: hostParentNode, nextSibling: hostNextSibling, setScopeId: hostSetScopeId = NOOP, cloneNode: hostCloneNode, insertStaticContent: hostInsertStaticContent } = options;\r\n    // Note: functions inside this closure should use `const xxx = () => {}`\r\n    // style in order to prevent being inlined by minifiers.\r\n    const patch = (n1, n2, container, anchor = null, parentComponent = null, parentSuspense = null, isSVG = false, optimized = false) => {\r\n        // patching & not same type, unmount old tree\r\n        if (n1 && !isSameVNodeType(n1, n2)) {\r\n            anchor = getNextHostNode(n1);\r\n            unmount(n1, parentComponent, parentSuspense, true);\r\n            n1 = null;\r\n        }\r\n        if (n2.patchFlag === -2 /* BAIL */) {\r\n            optimized = false;\r\n            n2.dynamicChildren = null;\r\n        }\r\n        const { type, ref, shapeFlag } = n2;\r\n        switch (type) {\r\n            case Text:\r\n                processText(n1, n2, container, anchor);\r\n                break;\r\n            case Comment:\r\n                processCommentNode(n1, n2, container, anchor);\r\n                break;\r\n            case Static:\r\n                if (n1 == null) {\r\n                    mountStaticNode(n2, container, anchor, isSVG);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    patchStaticNode(n1, n2, container, isSVG);\r\n                }\r\n                break;\r\n            case Fragment:\r\n                processFragment(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    processElement(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    processComponent(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, internals);\r\n                }\r\n                else if ( shapeFlag & 128 /* SUSPENSE */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, internals);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid VNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        // set ref\r\n        if (ref != null && parentComponent) {\r\n            setRef(ref, n1 && n1.ref, parentComponent, parentSuspense, n2);\r\n        }\r\n    };\r\n    const processText = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateText(n2.children)), container, anchor);\r\n        }\r\n        else {\r\n            const el = (n2.el = n1.el);\r\n            if (n2.children !== n1.children) {\r\n                hostSetText(el, n2.children);\r\n            }\r\n        }\r\n    };\r\n    const processCommentNode = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateComment(n2.children || '')), container, anchor);\r\n        }\r\n        else {\r\n            // there's no support for dynamic comments\r\n            n2.el = n1.el;\r\n        }\r\n    };\r\n    const mountStaticNode = (n2, container, anchor, isSVG) => {\r\n        [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);\r\n    };\r\n    /**\r\n     * Dev / HMR only\r\n     */\r\n    const patchStaticNode = (n1, n2, container, isSVG) => {\r\n        // static nodes are only patched during dev for HMR\r\n        if (n2.children !== n1.children) {\r\n            const anchor = hostNextSibling(n1.anchor);\r\n            // remove existing\r\n            removeStaticNode(n1);\r\n            [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);\r\n        }\r\n        else {\r\n            n2.el = n1.el;\r\n            n2.anchor = n1.anchor;\r\n        }\r\n    };\r\n    /**\r\n     * Dev / HMR only\r\n     */\r\n    const moveStaticNode = (vnode, container, anchor) => {\r\n        let cur = vnode.el;\r\n        const end = vnode.anchor;\r\n        while (cur && cur !== end) {\r\n            const next = hostNextSibling(cur);\r\n            hostInsert(cur, container, anchor);\r\n            cur = next;\r\n        }\r\n        hostInsert(end, container, anchor);\r\n    };\r\n    /**\r\n     * Dev / HMR only\r\n     */\r\n    const removeStaticNode = (vnode) => {\r\n        let cur = vnode.el;\r\n        while (cur && cur !== vnode.anchor) {\r\n            const next = hostNextSibling(cur);\r\n            hostRemove(cur);\r\n            cur = next;\r\n        }\r\n        hostRemove(vnode.anchor);\r\n    };\r\n    const processElement = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        isSVG = isSVG || n2.type === 'svg';\r\n        if (n1 == null) {\r\n            mountElement(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n        else {\r\n            patchElement(n1, n2, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n    };\r\n    const mountElement = (vnode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        let el;\r\n        let vnodeHook;\r\n        const { type, props, shapeFlag, transition, scopeId, patchFlag, dirs } = vnode;\r\n        if (!(process.env.NODE_ENV !== 'production') &&\r\n            vnode.el &&\r\n            hostCloneNode !== undefined &&\r\n            patchFlag === -1 /* HOISTED */) {\r\n            // If a vnode has non-null el, it means it's being reused.\r\n            // Only static vnodes can be reused, so its mounted DOM nodes should be\r\n            // exactly the same, and we can simply do a clone here.\r\n            // only do this in production since cloned trees cannot be HMR updated.\r\n            el = vnode.el = hostCloneNode(vnode.el);\r\n        }\r\n        else {\r\n            el = vnode.el = hostCreateElement(vnode.type, isSVG, props && props.is);\r\n            // mount children first, since some props may rely on child content\r\n            // being already rendered, e.g. `<select value>`\r\n            if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                hostSetElementText(el, vnode.children);\r\n            }\r\n            else if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                mountChildren(vnode.children, el, null, parentComponent, parentSuspense, isSVG && type !== 'foreignObject', optimized || !!vnode.dynamicChildren);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\r\n            }\r\n            // props\r\n            if (props) {\r\n                for (const key in props) {\r\n                    if (!isReservedProp(key)) {\r\n                        hostPatchProp(el, key, null, props[key], isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n                if ((vnodeHook = props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                }\r\n            }\r\n            // scopeId\r\n            setScopeId(el, scopeId, vnode, parentComponent);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            Object.defineProperty(el, '__vnode', {\r\n                value: vnode,\r\n                enumerable: false\r\n            });\r\n            Object.defineProperty(el, '__vueParentComponent', {\r\n                value: parentComponent,\r\n                enumerable: false\r\n            });\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n        }\r\n        // #1583 For inside suspense + suspense not resolved case, enter hook should call when suspense resolved\r\n        // #1689 For inside suspense + suspense resolved case, just call it\r\n        const needCallTransitionHooks = (!parentSuspense || (parentSuspense && !parentSuspense.pendingBranch)) &&\r\n            transition &&\r\n            !transition.persisted;\r\n        if (needCallTransitionHooks) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        hostInsert(el, container, anchor);\r\n        if ((vnodeHook = props && props.onVnodeMounted) ||\r\n            needCallTransitionHooks ||\r\n            dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                needCallTransitionHooks && transition.enter(el);\r\n                dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const setScopeId = (el, scopeId, vnode, parentComponent) => {\r\n        if (scopeId) {\r\n            hostSetScopeId(el, scopeId);\r\n        }\r\n        if (parentComponent) {\r\n            const treeOwnerId = parentComponent.type.__scopeId;\r\n            // vnode's own scopeId and the current patched component's scopeId is\r\n            // different - this is a slot content node.\r\n            if (treeOwnerId && treeOwnerId !== scopeId) {\r\n                hostSetScopeId(el, treeOwnerId + '-s');\r\n            }\r\n            let subTree = parentComponent.subTree;\r\n            if ((process.env.NODE_ENV !== 'production') && subTree.type === Fragment) {\r\n                subTree =\r\n                    filterSingleRoot(subTree.children) || subTree;\r\n            }\r\n            if (vnode === subTree) {\r\n                setScopeId(el, parentComponent.vnode.scopeId, parentComponent.vnode, parentComponent.parent);\r\n            }\r\n        }\r\n    };\r\n    const mountChildren = (children, container, anchor, parentComponent, parentSuspense, isSVG, optimized, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            const child = (children[i] = optimized\r\n                ? cloneIfMounted(children[i])\r\n                : normalizeVNode(children[i]));\r\n            patch(null, child, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n    };\r\n    const patchElement = (n1, n2, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const el = (n2.el = n1.el);\r\n        let { patchFlag, dynamicChildren, dirs } = n2;\r\n        // #1426 take the old vnode's patch flag into account since user may clone a\r\n        // compiler-generated vnode, which de-opts to FULL_PROPS\r\n        patchFlag |= n1.patchFlag & 16 /* FULL_PROPS */;\r\n        const oldProps = n1.props || EMPTY_OBJ;\r\n        const newProps = n2.props || EMPTY_OBJ;\r\n        let vnodeHook;\r\n        if ((vnodeHook = newProps.onVnodeBeforeUpdate)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(n2, n1, parentComponent, 'beforeUpdate');\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && (true ) && isHmrUpdating) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (patchFlag > 0) {\r\n            // the presence of a patchFlag means this element's render code was\r\n            // generated by the compiler and can take the fast path.\r\n            // in this path old node and new node are guaranteed to have the same shape\r\n            // (i.e. at the exact same position in the source template)\r\n            if (patchFlag & 16 /* FULL_PROPS */) {\r\n                // element props contain dynamic keys, full diff needed\r\n                patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n            }\r\n            else {\r\n                // class\r\n                // this flag is matched when the element has dynamic class bindings.\r\n                if (patchFlag & 2 /* CLASS */) {\r\n                    if (oldProps.class !== newProps.class) {\r\n                        hostPatchProp(el, 'class', null, newProps.class, isSVG);\r\n                    }\r\n                }\r\n                // style\r\n                // this flag is matched when the element has dynamic style bindings\r\n                if (patchFlag & 4 /* STYLE */) {\r\n                    hostPatchProp(el, 'style', oldProps.style, newProps.style, isSVG);\r\n                }\r\n                // props\r\n                // This flag is matched when the element has dynamic prop/attr bindings\r\n                // other than class and style. The keys of dynamic prop/attrs are saved for\r\n                // faster iteration.\r\n                // Note dynamic keys like :[foo]=\"bar\" will cause this optimization to\r\n                // bail out and go through a full diff because we need to unset the old key\r\n                if (patchFlag & 8 /* PROPS */) {\r\n                    // if the flag is present then dynamicProps must be non-null\r\n                    const propsToUpdate = n2.dynamicProps;\r\n                    for (let i = 0; i < propsToUpdate.length; i++) {\r\n                        const key = propsToUpdate[i];\r\n                        const prev = oldProps[key];\r\n                        const next = newProps[key];\r\n                        if (next !== prev ||\r\n                            (hostForcePatchProp && hostForcePatchProp(el, key))) {\r\n                            hostPatchProp(el, key, prev, next, isSVG, n1.children, parentComponent, parentSuspense, unmountChildren);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // text\r\n            // This flag is matched when the element has only dynamic text children.\r\n            if (patchFlag & 1 /* TEXT */) {\r\n                if (n1.children !== n2.children) {\r\n                    hostSetElementText(el, n2.children);\r\n                }\r\n            }\r\n        }\r\n        else if (!optimized && dynamicChildren == null) {\r\n            // unoptimized, full diff\r\n            patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n        }\r\n        const areChildrenSVG = isSVG && n2.type !== 'foreignObject';\r\n        if (dynamicChildren) {\r\n            patchBlockChildren(n1.dynamicChildren, dynamicChildren, el, parentComponent, parentSuspense, areChildrenSVG);\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                (true ) &&\r\n                parentComponent &&\r\n                parentComponent.type.__hmrId) {\r\n                traverseStaticChildren(n1, n2);\r\n            }\r\n        }\r\n        else if (!optimized) {\r\n            // full diff\r\n            patchChildren(n1, n2, el, null, parentComponent, parentSuspense, areChildrenSVG);\r\n        }\r\n        if ((vnodeHook = newProps.onVnodeUpdated) || dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n                dirs && invokeDirectiveHook(n2, n1, parentComponent, 'updated');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    // The fast path for blocks.\r\n    const patchBlockChildren = (oldChildren, newChildren, fallbackContainer, parentComponent, parentSuspense, isSVG) => {\r\n        for (let i = 0; i < newChildren.length; i++) {\r\n            const oldVNode = oldChildren[i];\r\n            const newVNode = newChildren[i];\r\n            // Determine the container (parent element) for the patch.\r\n            const container = \r\n            // - In the case of a Fragment, we need to provide the actual parent\r\n            // of the Fragment itself so it can move its children.\r\n            oldVNode.type === Fragment ||\r\n                // - In the case of different nodes, there is going to be a replacement\r\n                // which also requires the correct parent container\r\n                !isSameVNodeType(oldVNode, newVNode) ||\r\n                // - In the case of a component, it could contain anything.\r\n                oldVNode.shapeFlag & 6 /* COMPONENT */ ||\r\n                oldVNode.shapeFlag & 64 /* TELEPORT */\r\n                ? hostParentNode(oldVNode.el)\r\n                : // In other cases, the parent container is not actually used so we\r\n                    // just pass the block element here to avoid a DOM parentNode call.\r\n                    fallbackContainer;\r\n            patch(oldVNode, newVNode, container, null, parentComponent, parentSuspense, isSVG, true);\r\n        }\r\n    };\r\n    const patchProps = (el, vnode, oldProps, newProps, parentComponent, parentSuspense, isSVG) => {\r\n        if (oldProps !== newProps) {\r\n            for (const key in newProps) {\r\n                // empty string is not valid prop\r\n                if (isReservedProp(key))\r\n                    continue;\r\n                const next = newProps[key];\r\n                const prev = oldProps[key];\r\n                if (next !== prev ||\r\n                    (hostForcePatchProp && hostForcePatchProp(el, key))) {\r\n                    hostPatchProp(el, key, prev, next, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                }\r\n            }\r\n            if (oldProps !== EMPTY_OBJ) {\r\n                for (const key in oldProps) {\r\n                    if (!isReservedProp(key) && !(key in newProps)) {\r\n                        hostPatchProp(el, key, oldProps[key], null, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const processFragment = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const fragmentStartAnchor = (n2.el = n1 ? n1.el : hostCreateText(''));\r\n        const fragmentEndAnchor = (n2.anchor = n1 ? n1.anchor : hostCreateText(''));\r\n        let { patchFlag, dynamicChildren } = n2;\r\n        if (patchFlag > 0) {\r\n            optimized = true;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (n1 == null) {\r\n            hostInsert(fragmentStartAnchor, container, anchor);\r\n            hostInsert(fragmentEndAnchor, container, anchor);\r\n            // a fragment can only have array children\r\n            // since they are either generated by the compiler, or implicitly created\r\n            // from arrays.\r\n            mountChildren(n2.children, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n        else {\r\n            if (patchFlag > 0 &&\r\n                patchFlag & 64 /* STABLE_FRAGMENT */ &&\r\n                dynamicChildren) {\r\n                // a stable fragment (template root or <template v-for>) doesn't need to\r\n                // patch children order, but it may contain dynamicChildren.\r\n                patchBlockChildren(n1.dynamicChildren, dynamicChildren, container, parentComponent, parentSuspense, isSVG);\r\n                if ((process.env.NODE_ENV !== 'production') && parentComponent && parentComponent.type.__hmrId) {\r\n                    traverseStaticChildren(n1, n2);\r\n                }\r\n                else if (\r\n                // #2080 if the stable fragment has a key, it's a <template v-for> that may\r\n                //  get moved around. Make sure all root level vnodes inherit el.\r\n                // #2134 or if it's a component root, it may also get moved around\r\n                // as the component is being moved.\r\n                n2.key != null ||\r\n                    (parentComponent && n2 === parentComponent.subTree)) {\r\n                    traverseStaticChildren(n1, n2, true /* shallow */);\r\n                }\r\n            }\r\n            else {\r\n                // keyed / unkeyed, or manual fragments.\r\n                // for keyed & unkeyed, since they are compiler generated from v-for,\r\n                // each child is guaranteed to be a block so the fragment will never\r\n                // have dynamicChildren.\r\n                patchChildren(n1, n2, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n        }\r\n    };\r\n    const processComponent = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        if (n1 == null) {\r\n            if (n2.shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {\r\n                parentComponent.ctx.activate(n2, container, anchor, isSVG, optimized);\r\n            }\r\n            else {\r\n                mountComponent(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n        }\r\n        else {\r\n            updateComponent(n1, n2, optimized);\r\n        }\r\n    };\r\n    const mountComponent = (initialVNode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const instance = (initialVNode.component = createComponentInstance(initialVNode, parentComponent, parentSuspense));\r\n        if ((process.env.NODE_ENV !== 'production') && (true ) && instance.type.__hmrId) {\r\n            registerHMR(instance);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            pushWarningContext(initialVNode);\r\n            startMeasure(instance, `mount`);\r\n        }\r\n        // inject renderer internals for keepAlive\r\n        if (isKeepAlive(initialVNode)) {\r\n            instance.ctx.renderer = internals;\r\n        }\r\n        // resolve props and slots for setup context\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            startMeasure(instance, `init`);\r\n        }\r\n        setupComponent(instance);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            endMeasure(instance, `init`);\r\n        }\r\n        // setup() is async. This component relies on async logic to be resolved\r\n        // before proceeding\r\n        if ( instance.asyncDep) {\r\n            parentSuspense && parentSuspense.registerDep(instance, setupRenderEffect);\r\n            // Give it a placeholder if this is not hydration\r\n            // TODO handle self-defined fallback\r\n            if (!initialVNode.el) {\r\n                const placeholder = (instance.subTree = createVNode(Comment));\r\n                processCommentNode(null, placeholder, container, anchor);\r\n            }\r\n            return;\r\n        }\r\n        setupRenderEffect(instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            popWarningContext();\r\n            endMeasure(instance, `mount`);\r\n        }\r\n    };\r\n    const updateComponent = (n1, n2, optimized) => {\r\n        const instance = (n2.component = n1.component);\r\n        if (shouldUpdateComponent(n1, n2, optimized)) {\r\n            if (\r\n                instance.asyncDep &&\r\n                !instance.asyncResolved) {\r\n                // async & still pending - just update props and slots\r\n                // since the component's reactive effect for render isn't set-up yet\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(n2);\r\n                }\r\n                updateComponentPreRender(instance, n2, optimized);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n                return;\r\n            }\r\n            else {\r\n                // normal update\r\n                instance.next = n2;\r\n                // in case the child component is also queued, remove it to avoid\r\n                // double updating the same child component in the same flush.\r\n                invalidateJob(instance.update);\r\n                // instance.update is the reactive effect runner.\r\n                instance.update();\r\n            }\r\n        }\r\n        else {\r\n            // no update needed. just copy over properties\r\n            n2.component = n1.component;\r\n            n2.el = n1.el;\r\n            instance.vnode = n2;\r\n        }\r\n    };\r\n    const setupRenderEffect = (instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized) => {\r\n        // create reactive effect for rendering\r\n        instance.update = effect(function componentEffect() {\r\n            if (!instance.isMounted) {\r\n                let vnodeHook;\r\n                const { el, props } = initialVNode;\r\n                const { bm, m, parent } = instance;\r\n                // beforeMount hook\r\n                if (bm) {\r\n                    invokeArrayFns(bm);\r\n                }\r\n                // onVnodeBeforeMount\r\n                if ((vnodeHook = props && props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parent, initialVNode);\r\n                }\r\n                // render\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `render`);\r\n                }\r\n                const subTree = (instance.subTree = renderComponentRoot(instance));\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `render`);\r\n                }\r\n                if (el && hydrateNode) {\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        startMeasure(instance, `hydrate`);\r\n                    }\r\n                    // vnode has adopted host node - perform hydration instead of mount.\r\n                    hydrateNode(initialVNode.el, subTree, instance, parentSuspense);\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        endMeasure(instance, `hydrate`);\r\n                    }\r\n                }\r\n                else {\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        startMeasure(instance, `patch`);\r\n                    }\r\n                    patch(null, subTree, container, anchor, instance, parentSuspense, isSVG);\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        endMeasure(instance, `patch`);\r\n                    }\r\n                    initialVNode.el = subTree.el;\r\n                }\r\n                // mounted hook\r\n                if (m) {\r\n                    queuePostRenderEffect(m, parentSuspense);\r\n                }\r\n                // onVnodeMounted\r\n                if ((vnodeHook = props && props.onVnodeMounted)) {\r\n                    queuePostRenderEffect(() => {\r\n                        invokeVNodeHook(vnodeHook, parent, initialVNode);\r\n                    }, parentSuspense);\r\n                }\r\n                // activated hook for keep-alive roots.\r\n                // #1742 activated hook must be accessed after first render\r\n                // since the hook may be injected by a child keep-alive\r\n                const { a } = instance;\r\n                if (a &&\r\n                    initialVNode.shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n                    queuePostRenderEffect(a, parentSuspense);\r\n                }\r\n                instance.isMounted = true;\r\n            }\r\n            else {\r\n                // updateComponent\r\n                // This is triggered by mutation of component's own state (next: null)\r\n                // OR parent calling processComponent (next: VNode)\r\n                let { next, bu, u, parent, vnode } = instance;\r\n                let originNext = next;\r\n                let vnodeHook;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(next || instance.vnode);\r\n                }\r\n                if (next) {\r\n                    next.el = vnode.el;\r\n                    updateComponentPreRender(instance, next, optimized);\r\n                }\r\n                else {\r\n                    next = vnode;\r\n                }\r\n                // beforeUpdate hook\r\n                if (bu) {\r\n                    invokeArrayFns(bu);\r\n                }\r\n                // onVnodeBeforeUpdate\r\n                if ((vnodeHook = next.props && next.props.onVnodeBeforeUpdate)) {\r\n                    invokeVNodeHook(vnodeHook, parent, next, vnode);\r\n                }\r\n                // render\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `render`);\r\n                }\r\n                const nextTree = renderComponentRoot(instance);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `render`);\r\n                }\r\n                const prevTree = instance.subTree;\r\n                instance.subTree = nextTree;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `patch`);\r\n                }\r\n                patch(prevTree, nextTree, \r\n                // parent may have changed if it's in a teleport\r\n                hostParentNode(prevTree.el), \r\n                // anchor may have changed if it's in a fragment\r\n                getNextHostNode(prevTree), instance, parentSuspense, isSVG);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `patch`);\r\n                }\r\n                next.el = nextTree.el;\r\n                if (originNext === null) {\r\n                    // self-triggered update. In case of HOC, update parent component\r\n                    // vnode el. HOC is indicated by parent instance's subTree pointing\r\n                    // to child component's vnode\r\n                    updateHOCHostEl(instance, nextTree.el);\r\n                }\r\n                // updated hook\r\n                if (u) {\r\n                    queuePostRenderEffect(u, parentSuspense);\r\n                }\r\n                // onVnodeUpdated\r\n                if ((vnodeHook = next.props && next.props.onVnodeUpdated)) {\r\n                    queuePostRenderEffect(() => {\r\n                        invokeVNodeHook(vnodeHook, parent, next, vnode);\r\n                    }, parentSuspense);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                    devtoolsComponentUpdated(instance);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n            }\r\n        }, (process.env.NODE_ENV !== 'production') ? createDevEffectOptions(instance) : prodEffectOptions);\r\n    };\r\n    const updateComponentPreRender = (instance, nextVNode, optimized) => {\r\n        nextVNode.component = instance;\r\n        const prevProps = instance.vnode.props;\r\n        instance.vnode = nextVNode;\r\n        instance.next = null;\r\n        updateProps(instance, nextVNode.props, prevProps, optimized);\r\n        updateSlots(instance, nextVNode.children);\r\n        // props update may have triggered pre-flush watchers.\r\n        // flush them before the render update.\r\n        flushPreFlushCbs(undefined, instance.update);\r\n    };\r\n    const patchChildren = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized = false) => {\r\n        const c1 = n1 && n1.children;\r\n        const prevShapeFlag = n1 ? n1.shapeFlag : 0;\r\n        const c2 = n2.children;\r\n        const { patchFlag, shapeFlag } = n2;\r\n        // fast path\r\n        if (patchFlag > 0) {\r\n            if (patchFlag & 128 /* KEYED_FRAGMENT */) {\r\n                // this could be either fully-keyed or mixed (some keyed some not)\r\n                // presence of patchFlag means children are guaranteed to be arrays\r\n                patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                return;\r\n            }\r\n            else if (patchFlag & 256 /* UNKEYED_FRAGMENT */) {\r\n                // unkeyed\r\n                patchUnkeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                return;\r\n            }\r\n        }\r\n        // children has 3 possibilities: text, array or no children.\r\n        if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n            // text children fast path\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                unmountChildren(c1, parentComponent, parentSuspense);\r\n            }\r\n            if (c2 !== c1) {\r\n                hostSetElementText(container, c2);\r\n            }\r\n        }\r\n        else {\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                // prev children was array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    // two arrays, cannot assume anything, do full diff\r\n                    patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n                else {\r\n                    // no new children, just unmount old\r\n                    unmountChildren(c1, parentComponent, parentSuspense, true);\r\n                }\r\n            }\r\n            else {\r\n                // prev children was text OR null\r\n                // new children is array OR null\r\n                if (prevShapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                    hostSetElementText(container, '');\r\n                }\r\n                // mount new if array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const patchUnkeyedChildren = (c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        c1 = c1 || EMPTY_ARR;\r\n        c2 = c2 || EMPTY_ARR;\r\n        const oldLength = c1.length;\r\n        const newLength = c2.length;\r\n        const commonLength = Math.min(oldLength, newLength);\r\n        let i;\r\n        for (i = 0; i < commonLength; i++) {\r\n            const nextChild = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            patch(c1[i], nextChild, container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n        if (oldLength > newLength) {\r\n            // remove old\r\n            unmountChildren(c1, parentComponent, parentSuspense, true, false, commonLength);\r\n        }\r\n        else {\r\n            // mount new\r\n            mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, commonLength);\r\n        }\r\n    };\r\n    // can be all-keyed or mixed\r\n    const patchKeyedChildren = (c1, c2, container, parentAnchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        let i = 0;\r\n        const l2 = c2.length;\r\n        let e1 = c1.length - 1; // prev ending index\r\n        let e2 = l2 - 1; // next ending index\r\n        // 1. sync from start\r\n        // (a b) c\r\n        // (a b) d e\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[i];\r\n            const n2 = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n        // 2. sync from end\r\n        // a (b c)\r\n        // d e (b c)\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[e1];\r\n            const n2 = (c2[e2] = optimized\r\n                ? cloneIfMounted(c2[e2])\r\n                : normalizeVNode(c2[e2]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            e1--;\r\n            e2--;\r\n        }\r\n        // 3. common sequence + mount\r\n        // (a b)\r\n        // (a b) c\r\n        // i = 2, e1 = 1, e2 = 2\r\n        // (a b)\r\n        // c (a b)\r\n        // i = 0, e1 = -1, e2 = 0\r\n        if (i > e1) {\r\n            if (i <= e2) {\r\n                const nextPos = e2 + 1;\r\n                const anchor = nextPos < l2 ? c2[nextPos].el : parentAnchor;\r\n                while (i <= e2) {\r\n                    patch(null, (c2[i] = optimized\r\n                        ? cloneIfMounted(c2[i])\r\n                        : normalizeVNode(c2[i])), container, anchor, parentComponent, parentSuspense, isSVG);\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n        // 4. common sequence + unmount\r\n        // (a b) c\r\n        // (a b)\r\n        // i = 2, e1 = 2, e2 = 1\r\n        // a (b c)\r\n        // (b c)\r\n        // i = 0, e1 = 0, e2 = -1\r\n        else if (i > e2) {\r\n            while (i <= e1) {\r\n                unmount(c1[i], parentComponent, parentSuspense, true);\r\n                i++;\r\n            }\r\n        }\r\n        // 5. unknown sequence\r\n        // [i ... e1 + 1]: a b [c d e] f g\r\n        // [i ... e2 + 1]: a b [e d c h] f g\r\n        // i = 2, e1 = 4, e2 = 5\r\n        else {\r\n            const s1 = i; // prev starting index\r\n            const s2 = i; // next starting index\r\n            // 5.1 build key:index map for newChildren\r\n            const keyToNewIndexMap = new Map();\r\n            for (i = s2; i <= e2; i++) {\r\n                const nextChild = (c2[i] = optimized\r\n                    ? cloneIfMounted(c2[i])\r\n                    : normalizeVNode(c2[i]));\r\n                if (nextChild.key != null) {\r\n                    if ((process.env.NODE_ENV !== 'production') && keyToNewIndexMap.has(nextChild.key)) {\r\n                        warn(`Duplicate keys found during update:`, JSON.stringify(nextChild.key), `Make sure keys are unique.`);\r\n                    }\r\n                    keyToNewIndexMap.set(nextChild.key, i);\r\n                }\r\n            }\r\n            // 5.2 loop through old children left to be patched and try to patch\r\n            // matching nodes & remove nodes that are no longer present\r\n            let j;\r\n            let patched = 0;\r\n            const toBePatched = e2 - s2 + 1;\r\n            let moved = false;\r\n            // used to track whether any node has moved\r\n            let maxNewIndexSoFar = 0;\r\n            // works as Map<newIndex, oldIndex>\r\n            // Note that oldIndex is offset by +1\r\n            // and oldIndex = 0 is a special value indicating the new node has\r\n            // no corresponding old node.\r\n            // used for determining longest stable subsequence\r\n            const newIndexToOldIndexMap = new Array(toBePatched);\r\n            for (i = 0; i < toBePatched; i++)\r\n                newIndexToOldIndexMap[i] = 0;\r\n            for (i = s1; i <= e1; i++) {\r\n                const prevChild = c1[i];\r\n                if (patched >= toBePatched) {\r\n                    // all new children have been patched so this can only be a removal\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                    continue;\r\n                }\r\n                let newIndex;\r\n                if (prevChild.key != null) {\r\n                    newIndex = keyToNewIndexMap.get(prevChild.key);\r\n                }\r\n                else {\r\n                    // key-less node, try to locate a key-less node of the same type\r\n                    for (j = s2; j <= e2; j++) {\r\n                        if (newIndexToOldIndexMap[j - s2] === 0 &&\r\n                            isSameVNodeType(prevChild, c2[j])) {\r\n                            newIndex = j;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (newIndex === undefined) {\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                }\r\n                else {\r\n                    newIndexToOldIndexMap[newIndex - s2] = i + 1;\r\n                    if (newIndex >= maxNewIndexSoFar) {\r\n                        maxNewIndexSoFar = newIndex;\r\n                    }\r\n                    else {\r\n                        moved = true;\r\n                    }\r\n                    patch(prevChild, c2[newIndex], container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n                    patched++;\r\n                }\r\n            }\r\n            // 5.3 move and mount\r\n            // generate longest stable subsequence only when nodes have moved\r\n            const increasingNewIndexSequence = moved\r\n                ? getSequence(newIndexToOldIndexMap)\r\n                : EMPTY_ARR;\r\n            j = increasingNewIndexSequence.length - 1;\r\n            // looping backwards so that we can use last patched node as anchor\r\n            for (i = toBePatched - 1; i >= 0; i--) {\r\n                const nextIndex = s2 + i;\r\n                const nextChild = c2[nextIndex];\r\n                const anchor = nextIndex + 1 < l2 ? c2[nextIndex + 1].el : parentAnchor;\r\n                if (newIndexToOldIndexMap[i] === 0) {\r\n                    // mount new\r\n                    patch(null, nextChild, container, anchor, parentComponent, parentSuspense, isSVG);\r\n                }\r\n                else if (moved) {\r\n                    // move if:\r\n                    // There is no stable subsequence (e.g. a reverse)\r\n                    // OR current node is not among the stable sequence\r\n                    if (j < 0 || i !== increasingNewIndexSequence[j]) {\r\n                        move(nextChild, container, anchor, 2 /* REORDER */);\r\n                    }\r\n                    else {\r\n                        j--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const move = (vnode, container, anchor, moveType, parentSuspense = null) => {\r\n        const { el, type, transition, children, shapeFlag } = vnode;\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            move(vnode.component.subTree, container, anchor, moveType);\r\n            return;\r\n        }\r\n        if ( shapeFlag & 128 /* SUSPENSE */) {\r\n            vnode.suspense.move(container, anchor, moveType);\r\n            return;\r\n        }\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type.move(vnode, container, anchor, internals);\r\n            return;\r\n        }\r\n        if (type === Fragment) {\r\n            hostInsert(el, container, anchor);\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, anchor, moveType);\r\n            }\r\n            hostInsert(vnode.anchor, container, anchor);\r\n            return;\r\n        }\r\n        // static node move can only happen when force updating HMR\r\n        if ((process.env.NODE_ENV !== 'production') && type === Static) {\r\n            moveStaticNode(vnode, container, anchor);\r\n            return;\r\n        }\r\n        // single nodes\r\n        const needTransition = moveType !== 2 /* REORDER */ &&\r\n            shapeFlag & 1 /* ELEMENT */ &&\r\n            transition;\r\n        if (needTransition) {\r\n            if (moveType === 0 /* ENTER */) {\r\n                transition.beforeEnter(el);\r\n                hostInsert(el, container, anchor);\r\n                queuePostRenderEffect(() => transition.enter(el), parentSuspense);\r\n            }\r\n            else {\r\n                const { leave, delayLeave, afterLeave } = transition;\r\n                const remove = () => hostInsert(el, container, anchor);\r\n                const performLeave = () => {\r\n                    leave(el, () => {\r\n                        remove();\r\n                        afterLeave && afterLeave();\r\n                    });\r\n                };\r\n                if (delayLeave) {\r\n                    delayLeave(el, remove, performLeave);\r\n                }\r\n                else {\r\n                    performLeave();\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            hostInsert(el, container, anchor);\r\n        }\r\n    };\r\n    const unmount = (vnode, parentComponent, parentSuspense, doRemove = false, optimized = false) => {\r\n        const { type, props, ref, children, dynamicChildren, shapeFlag, patchFlag, dirs } = vnode;\r\n        // unset ref\r\n        if (ref != null && parentComponent) {\r\n            setRef(ref, null, parentComponent, parentSuspense, null);\r\n        }\r\n        if (shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n            parentComponent.ctx.deactivate(vnode);\r\n            return;\r\n        }\r\n        const shouldInvokeDirs = shapeFlag & 1 /* ELEMENT */ && dirs;\r\n        let vnodeHook;\r\n        if ((vnodeHook = props && props.onVnodeBeforeUnmount)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n        }\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            unmountComponent(vnode.component, parentSuspense, doRemove);\r\n        }\r\n        else {\r\n            if ( shapeFlag & 128 /* SUSPENSE */) {\r\n                vnode.suspense.unmount(parentSuspense, doRemove);\r\n                return;\r\n            }\r\n            if (shouldInvokeDirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeUnmount');\r\n            }\r\n            if (dynamicChildren &&\r\n                // #1153: fast path should not be taken for non-stable (v-for) fragments\r\n                (type !== Fragment ||\r\n                    (patchFlag > 0 && patchFlag & 64 /* STABLE_FRAGMENT */))) {\r\n                // fast path for block nodes: only need to unmount dynamic children.\r\n                unmountChildren(dynamicChildren, parentComponent, parentSuspense, false, true);\r\n            }\r\n            else if ((type === Fragment &&\r\n                (patchFlag & 128 /* KEYED_FRAGMENT */ ||\r\n                    patchFlag & 256 /* UNKEYED_FRAGMENT */)) ||\r\n                (!optimized && shapeFlag & 16 /* ARRAY_CHILDREN */)) {\r\n                unmountChildren(children, parentComponent, parentSuspense);\r\n            }\r\n            // an unmounted teleport should always remove its children if not disabled\r\n            if (shapeFlag & 64 /* TELEPORT */ &&\r\n                (doRemove || !isTeleportDisabled(vnode.props))) {\r\n                vnode.type.remove(vnode, internals);\r\n            }\r\n            if (doRemove) {\r\n                remove(vnode);\r\n            }\r\n        }\r\n        if ((vnodeHook = props && props.onVnodeUnmounted) || shouldInvokeDirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                shouldInvokeDirs &&\r\n                    invokeDirectiveHook(vnode, null, parentComponent, 'unmounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const remove = vnode => {\r\n        const { type, el, anchor, transition } = vnode;\r\n        if (type === Fragment) {\r\n            removeFragment(el, anchor);\r\n            return;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && type === Static) {\r\n            removeStaticNode(vnode);\r\n            return;\r\n        }\r\n        const performRemove = () => {\r\n            hostRemove(el);\r\n            if (transition && !transition.persisted && transition.afterLeave) {\r\n                transition.afterLeave();\r\n            }\r\n        };\r\n        if (vnode.shapeFlag & 1 /* ELEMENT */ &&\r\n            transition &&\r\n            !transition.persisted) {\r\n            const { leave, delayLeave } = transition;\r\n            const performLeave = () => leave(el, performRemove);\r\n            if (delayLeave) {\r\n                delayLeave(vnode.el, performRemove, performLeave);\r\n            }\r\n            else {\r\n                performLeave();\r\n            }\r\n        }\r\n        else {\r\n            performRemove();\r\n        }\r\n    };\r\n    const removeFragment = (cur, end) => {\r\n        // For fragments, directly remove all contained DOM nodes.\r\n        // (fragment child nodes cannot have transition)\r\n        let next;\r\n        while (cur !== end) {\r\n            next = hostNextSibling(cur);\r\n            hostRemove(cur);\r\n            cur = next;\r\n        }\r\n        hostRemove(end);\r\n    };\r\n    const unmountComponent = (instance, parentSuspense, doRemove) => {\r\n        if ((process.env.NODE_ENV !== 'production') && (true ) && instance.type.__hmrId) {\r\n            unregisterHMR(instance);\r\n        }\r\n        const { bum, effects, update, subTree, um } = instance;\r\n        // beforeUnmount hook\r\n        if (bum) {\r\n            invokeArrayFns(bum);\r\n        }\r\n        if (effects) {\r\n            for (let i = 0; i < effects.length; i++) {\r\n                stop(effects[i]);\r\n            }\r\n        }\r\n        // update may be null if a component is unmounted before its async\r\n        // setup has resolved.\r\n        if (update) {\r\n            stop(update);\r\n            unmount(subTree, instance, parentSuspense, doRemove);\r\n        }\r\n        // unmounted hook\r\n        if (um) {\r\n            queuePostRenderEffect(um, parentSuspense);\r\n        }\r\n        queuePostRenderEffect(() => {\r\n            instance.isUnmounted = true;\r\n        }, parentSuspense);\r\n        // A component with async dep inside a pending suspense is unmounted before\r\n        // its async dep resolves. This should remove the dep from the suspense, and\r\n        // cause the suspense to resolve immediately if that was the last dep.\r\n        if (\r\n            parentSuspense &&\r\n            parentSuspense.pendingBranch &&\r\n            !parentSuspense.isUnmounted &&\r\n            instance.asyncDep &&\r\n            !instance.asyncResolved &&\r\n            instance.suspenseId === parentSuspense.pendingId) {\r\n            parentSuspense.deps--;\r\n            if (parentSuspense.deps === 0) {\r\n                parentSuspense.resolve();\r\n            }\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            devtoolsComponentRemoved(instance);\r\n        }\r\n    };\r\n    const unmountChildren = (children, parentComponent, parentSuspense, doRemove = false, optimized = false, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            unmount(children[i], parentComponent, parentSuspense, doRemove, optimized);\r\n        }\r\n    };\r\n    const getNextHostNode = vnode => {\r\n        if (vnode.shapeFlag & 6 /* COMPONENT */) {\r\n            return getNextHostNode(vnode.component.subTree);\r\n        }\r\n        if ( vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n            return vnode.suspense.next();\r\n        }\r\n        return hostNextSibling((vnode.anchor || vnode.el));\r\n    };\r\n    const render = (vnode, container) => {\r\n        if (vnode == null) {\r\n            if (container._vnode) {\r\n                unmount(container._vnode, null, null, true);\r\n            }\r\n        }\r\n        else {\r\n            patch(container._vnode || null, vnode, container);\r\n        }\r\n        flushPostFlushCbs();\r\n        container._vnode = vnode;\r\n    };\r\n    const internals = {\r\n        p: patch,\r\n        um: unmount,\r\n        m: move,\r\n        r: remove,\r\n        mt: mountComponent,\r\n        mc: mountChildren,\r\n        pc: patchChildren,\r\n        pbc: patchBlockChildren,\r\n        n: getNextHostNode,\r\n        o: options\r\n    };\r\n    let hydrate;\r\n    let hydrateNode;\r\n    if (createHydrationFns) {\r\n        [hydrate, hydrateNode] = createHydrationFns(internals);\r\n    }\r\n    return {\r\n        render,\r\n        hydrate,\r\n        createApp: createAppAPI(render, hydrate)\r\n    };\r\n}\r\nfunction invokeVNodeHook(hook, instance, vnode, prevVNode = null) {\r\n    callWithAsyncErrorHandling(hook, instance, 7 /* VNODE_HOOK */, [\r\n        vnode,\r\n        prevVNode\r\n    ]);\r\n}\r\n/**\r\n * #1156\r\n * When a component is HMR-enabled, we need to make sure that all static nodes\r\n * inside a block also inherit the DOM element from the previous tree so that\r\n * HMR updates (which are full updates) can retrieve the element for patching.\r\n *\r\n * #2080\r\n * Inside keyed `template` fragment static children, if a fragment is moved,\r\n * the children will always moved so that need inherit el form previous nodes\r\n * to ensure correct moved position.\r\n */\r\nfunction traverseStaticChildren(n1, n2, shallow = false) {\r\n    const ch1 = n1.children;\r\n    const ch2 = n2.children;\r\n    if (isArray(ch1) && isArray(ch2)) {\r\n        for (let i = 0; i < ch1.length; i++) {\r\n            // this is only called in the optimized path so array children are\r\n            // guaranteed to be vnodes\r\n            const c1 = ch1[i];\r\n            let c2 = ch2[i];\r\n            if (c2.shapeFlag & 1 /* ELEMENT */ && !c2.dynamicChildren) {\r\n                if (c2.patchFlag <= 0 || c2.patchFlag === 32 /* HYDRATE_EVENTS */) {\r\n                    c2 = ch2[i] = cloneIfMounted(ch2[i]);\r\n                    c2.el = c1.el;\r\n                }\r\n                if (!shallow)\r\n                    traverseStaticChildren(c1, c2);\r\n            }\r\n            // also inherit for comment nodes, but not placeholders (e.g. v-if which\r\n            // would have received .el during block patch)\r\n            if ((process.env.NODE_ENV !== 'production') && c2.type === Comment && !c2.el) {\r\n                c2.el = c1.el;\r\n            }\r\n        }\r\n    }\r\n}\r\n// https://en.wikipedia.org/wiki/Longest_increasing_subsequence\r\nfunction getSequence(arr) {\r\n    const p = arr.slice();\r\n    const result = [0];\r\n    let i, j, u, v, c;\r\n    const len = arr.length;\r\n    for (i = 0; i < len; i++) {\r\n        const arrI = arr[i];\r\n        if (arrI !== 0) {\r\n            j = result[result.length - 1];\r\n            if (arr[j] < arrI) {\r\n                p[i] = j;\r\n                result.push(i);\r\n                continue;\r\n            }\r\n            u = 0;\r\n            v = result.length - 1;\r\n            while (u < v) {\r\n                c = ((u + v) / 2) | 0;\r\n                if (arr[result[c]] < arrI) {\r\n                    u = c + 1;\r\n                }\r\n                else {\r\n                    v = c;\r\n                }\r\n            }\r\n            if (arrI < arr[result[u]]) {\r\n                if (u > 0) {\r\n                    p[i] = result[u - 1];\r\n                }\r\n                result[u] = i;\r\n            }\r\n        }\r\n    }\r\n    u = result.length;\r\n    v = result[u - 1];\r\n    while (u-- > 0) {\r\n        result[u] = v;\r\n        v = p[v];\r\n    }\r\n    return result;\r\n}\n\nconst isTeleport = (type) => type.__isTeleport;\r\nconst isTeleportDisabled = (props) => props && (props.disabled || props.disabled === '');\r\nconst resolveTarget = (props, select) => {\r\n    const targetSelector = props && props.to;\r\n    if (isString(targetSelector)) {\r\n        if (!select) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Current renderer does not support string target for Teleports. ` +\r\n                    `(missing querySelector renderer option)`);\r\n            return null;\r\n        }\r\n        else {\r\n            const target = select(targetSelector);\r\n            if (!target) {\r\n                (process.env.NODE_ENV !== 'production') &&\r\n                    warn(`Failed to locate Teleport target with selector \"${targetSelector}\". ` +\r\n                        `Note the target element must exist before the component is mounted - ` +\r\n                        `i.e. the target cannot be rendered by the component itself, and ` +\r\n                        `ideally should be outside of the entire Vue component tree.`);\r\n            }\r\n            return target;\r\n        }\r\n    }\r\n    else {\r\n        if ((process.env.NODE_ENV !== 'production') && !targetSelector && !isTeleportDisabled(props)) {\r\n            warn(`Invalid Teleport target: ${targetSelector}`);\r\n        }\r\n        return targetSelector;\r\n    }\r\n};\r\nconst TeleportImpl = {\r\n    __isTeleport: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, internals) {\r\n        const { mc: mountChildren, pc: patchChildren, pbc: patchBlockChildren, o: { insert, querySelector, createText, createComment } } = internals;\r\n        const disabled = isTeleportDisabled(n2.props);\r\n        const { shapeFlag, children } = n2;\r\n        if (n1 == null) {\r\n            // insert anchors in the main view\r\n            const placeholder = (n2.el = (process.env.NODE_ENV !== 'production')\r\n                ? createComment('teleport start')\r\n                : createText(''));\r\n            const mainAnchor = (n2.anchor = (process.env.NODE_ENV !== 'production')\r\n                ? createComment('teleport end')\r\n                : createText(''));\r\n            insert(placeholder, container, anchor);\r\n            insert(mainAnchor, container, anchor);\r\n            const target = (n2.target = resolveTarget(n2.props, querySelector));\r\n            const targetAnchor = (n2.targetAnchor = createText(''));\r\n            if (target) {\r\n                insert(targetAnchor, target);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production') && !disabled) {\r\n                warn('Invalid Teleport target on mount:', target, `(${typeof target})`);\r\n            }\r\n            const mount = (container, anchor) => {\r\n                // Teleport *always* has Array children. This is enforced in both the\r\n                // compiler and vnode children normalization.\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(children, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n            };\r\n            if (disabled) {\r\n                mount(container, mainAnchor);\r\n            }\r\n            else if (target) {\r\n                mount(target, targetAnchor);\r\n            }\r\n        }\r\n        else {\r\n            // update content\r\n            n2.el = n1.el;\r\n            const mainAnchor = (n2.anchor = n1.anchor);\r\n            const target = (n2.target = n1.target);\r\n            const targetAnchor = (n2.targetAnchor = n1.targetAnchor);\r\n            const wasDisabled = isTeleportDisabled(n1.props);\r\n            const currentContainer = wasDisabled ? container : target;\r\n            const currentAnchor = wasDisabled ? mainAnchor : targetAnchor;\r\n            if (n2.dynamicChildren) {\r\n                // fast path when the teleport happens to be a block root\r\n                patchBlockChildren(n1.dynamicChildren, n2.dynamicChildren, currentContainer, parentComponent, parentSuspense, isSVG);\r\n                // even in block tree mode we need to make sure all root-level nodes\r\n                // in the teleport inherit previous DOM references so that they can\r\n                // be moved in future patches.\r\n                traverseStaticChildren(n1, n2, true);\r\n            }\r\n            else if (!optimized) {\r\n                patchChildren(n1, n2, currentContainer, currentAnchor, parentComponent, parentSuspense, isSVG);\r\n            }\r\n            if (disabled) {\r\n                if (!wasDisabled) {\r\n                    // enabled -> disabled\r\n                    // move into main container\r\n                    moveTeleport(n2, container, mainAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n            else {\r\n                // target changed\r\n                if ((n2.props && n2.props.to) !== (n1.props && n1.props.to)) {\r\n                    const nextTarget = (n2.target = resolveTarget(n2.props, querySelector));\r\n                    if (nextTarget) {\r\n                        moveTeleport(n2, nextTarget, null, internals, 0 /* TARGET_CHANGE */);\r\n                    }\r\n                    else if ((process.env.NODE_ENV !== 'production')) {\r\n                        warn('Invalid Teleport target on update:', target, `(${typeof target})`);\r\n                    }\r\n                }\r\n                else if (wasDisabled) {\r\n                    // disabled -> enabled\r\n                    // move into teleport target\r\n                    moveTeleport(n2, target, targetAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    remove(vnode, { r: remove, o: { remove: hostRemove } }) {\r\n        const { shapeFlag, children, anchor } = vnode;\r\n        hostRemove(anchor);\r\n        if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            for (let i = 0; i < children.length; i++) {\r\n                remove(children[i]);\r\n            }\r\n        }\r\n    },\r\n    move: moveTeleport,\r\n    hydrate: hydrateTeleport\r\n};\r\nfunction moveTeleport(vnode, container, parentAnchor, { o: { insert }, m: move }, moveType = 2 /* REORDER */) {\r\n    // move target anchor if this is a target change.\r\n    if (moveType === 0 /* TARGET_CHANGE */) {\r\n        insert(vnode.targetAnchor, container, parentAnchor);\r\n    }\r\n    const { el, anchor, shapeFlag, children, props } = vnode;\r\n    const isReorder = moveType === 2 /* REORDER */;\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(el, container, parentAnchor);\r\n    }\r\n    // if this is a re-order and teleport is enabled (content is in target)\r\n    // do not move children. So the opposite is: only move children if this\r\n    // is not a reorder, or the teleport is disabled\r\n    if (!isReorder || isTeleportDisabled(props)) {\r\n        // Teleport has either Array children or no children.\r\n        if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, parentAnchor, 2 /* REORDER */);\r\n            }\r\n        }\r\n    }\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(anchor, container, parentAnchor);\r\n    }\r\n}\r\nfunction hydrateTeleport(node, vnode, parentComponent, parentSuspense, optimized, { o: { nextSibling, parentNode, querySelector } }, hydrateChildren) {\r\n    const target = (vnode.target = resolveTarget(vnode.props, querySelector));\r\n    if (target) {\r\n        // if multiple teleports rendered to the same target element, we need to\r\n        // pick up from where the last teleport finished instead of the first node\r\n        const targetNode = target._lpa || target.firstChild;\r\n        if (vnode.shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            if (isTeleportDisabled(vnode.props)) {\r\n                vnode.anchor = hydrateChildren(nextSibling(node), vnode, parentNode(node), parentComponent, parentSuspense, optimized);\r\n                vnode.targetAnchor = targetNode;\r\n            }\r\n            else {\r\n                vnode.anchor = nextSibling(node);\r\n                vnode.targetAnchor = hydrateChildren(targetNode, vnode, target, parentComponent, parentSuspense, optimized);\r\n            }\r\n            target._lpa =\r\n                vnode.targetAnchor && nextSibling(vnode.targetAnchor);\r\n        }\r\n    }\r\n    return vnode.anchor && nextSibling(vnode.anchor);\r\n}\r\n// Force-casted public typing for h and TSX props inference\r\nconst Teleport = TeleportImpl;\n\nconst COMPONENTS = 'components';\r\nconst DIRECTIVES = 'directives';\r\n/**\r\n * @private\r\n */\r\nfunction resolveComponent(name) {\r\n    return resolveAsset(COMPONENTS, name) || name;\r\n}\r\nconst NULL_DYNAMIC_COMPONENT = Symbol();\r\n/**\r\n * @private\r\n */\r\nfunction resolveDynamicComponent(component) {\r\n    if (isString(component)) {\r\n        return resolveAsset(COMPONENTS, component, false) || component;\r\n    }\r\n    else {\r\n        // invalid types will fallthrough to createVNode and raise warning\r\n        return (component || NULL_DYNAMIC_COMPONENT);\r\n    }\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction resolveDirective(name) {\r\n    return resolveAsset(DIRECTIVES, name);\r\n}\r\n// implementation\r\nfunction resolveAsset(type, name, warnMissing = true) {\r\n    const instance = currentRenderingInstance || currentInstance;\r\n    if (instance) {\r\n        const Component = instance.type;\r\n        // self name has highest priority\r\n        if (type === COMPONENTS) {\r\n            const selfName = Component.displayName || Component.name;\r\n            if (selfName &&\r\n                (selfName === name ||\r\n                    selfName === camelize(name) ||\r\n                    selfName === capitalize(camelize(name)))) {\r\n                return Component;\r\n            }\r\n        }\r\n        const res = \r\n        // local registration\r\n        // check instance[type] first for components with mixin or extends.\r\n        resolve(instance[type] || Component[type], name) ||\r\n            // global registration\r\n            resolve(instance.appContext[type], name);\r\n        if ((process.env.NODE_ENV !== 'production') && warnMissing && !res) {\r\n            warn(`Failed to resolve ${type.slice(0, -1)}: ${name}`);\r\n        }\r\n        return res;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`resolve${capitalize(type.slice(0, -1))} ` +\r\n            `can only be used in render() or setup().`);\r\n    }\r\n}\r\nfunction resolve(registry, name) {\r\n    return (registry &&\r\n        (registry[name] ||\r\n            registry[camelize(name)] ||\r\n            registry[capitalize(camelize(name))]));\r\n}\n\nconst Fragment = Symbol((process.env.NODE_ENV !== 'production') ? 'Fragment' : undefined);\r\nconst Text = Symbol((process.env.NODE_ENV !== 'production') ? 'Text' : undefined);\r\nconst Comment = Symbol((process.env.NODE_ENV !== 'production') ? 'Comment' : undefined);\r\nconst Static = Symbol((process.env.NODE_ENV !== 'production') ? 'Static' : undefined);\r\n// Since v-if and v-for are the two possible ways node structure can dynamically\r\n// change, once we consider v-if branches and each v-for fragment a block, we\r\n// can divide a template into nested blocks, and within each block the node\r\n// structure would be stable. This allows us to skip most children diffing\r\n// and only worry about the dynamic nodes (indicated by patch flags).\r\nconst blockStack = [];\r\nlet currentBlock = null;\r\n/**\r\n * Open a block.\r\n * This must be called before `createBlock`. It cannot be part of `createBlock`\r\n * because the children of the block are evaluated before `createBlock` itself\r\n * is called. The generated code typically looks like this:\r\n *\r\n * ```js\r\n * function render() {\r\n *   return (openBlock(),createBlock('div', null, [...]))\r\n * }\r\n * ```\r\n * disableTracking is true when creating a v-for fragment block, since a v-for\r\n * fragment always diffs its children.\r\n *\r\n * @private\r\n */\r\nfunction openBlock(disableTracking = false) {\r\n    blockStack.push((currentBlock = disableTracking ? null : []));\r\n}\r\nfunction closeBlock() {\r\n    blockStack.pop();\r\n    currentBlock = blockStack[blockStack.length - 1] || null;\r\n}\r\n// Whether we should be tracking dynamic child nodes inside a block.\r\n// Only tracks when this value is > 0\r\n// We are not using a simple boolean because this value may need to be\r\n// incremented/decremented by nested usage of v-once (see below)\r\nlet shouldTrack = 1;\r\n/**\r\n * Block tracking sometimes needs to be disabled, for example during the\r\n * creation of a tree that needs to be cached by v-once. The compiler generates\r\n * code like this:\r\n *\r\n * ``` js\r\n * _cache[1] || (\r\n *   setBlockTracking(-1),\r\n *   _cache[1] = createVNode(...),\r\n *   setBlockTracking(1),\r\n *   _cache[1]\r\n * )\r\n * ```\r\n *\r\n * @private\r\n */\r\nfunction setBlockTracking(value) {\r\n    shouldTrack += value;\r\n}\r\n/**\r\n * Create a block root vnode. Takes the same exact arguments as `createVNode`.\r\n * A block root keeps track of dynamic nodes within the block in the\r\n * `dynamicChildren` array.\r\n *\r\n * @private\r\n */\r\nfunction createBlock(type, props, children, patchFlag, dynamicProps) {\r\n    const vnode = createVNode(type, props, children, patchFlag, dynamicProps, true /* isBlock: prevent a block from tracking itself */);\r\n    // save current block children on the block vnode\r\n    vnode.dynamicChildren = currentBlock || EMPTY_ARR;\r\n    // close block\r\n    closeBlock();\r\n    // a block is always going to be patched, so track it as a child of its\r\n    // parent block\r\n    if (shouldTrack > 0 && currentBlock) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\nfunction isVNode(value) {\r\n    return value ? value.__v_isVNode === true : false;\r\n}\r\nfunction isSameVNodeType(n1, n2) {\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        n2.shapeFlag & 6 /* COMPONENT */ &&\r\n        hmrDirtyComponents.has(n2.type)) {\r\n        // HMR only: if the component has been hot-updated, force a reload.\r\n        return false;\r\n    }\r\n    return n1.type === n2.type && n1.key === n2.key;\r\n}\r\nlet vnodeArgsTransformer;\r\n/**\r\n * Internal API for registering an arguments transform for createVNode\r\n * used for creating stubs in the test-utils\r\n * It is *internal* but needs to be exposed for test-utils to pick up proper\r\n * typings\r\n */\r\nfunction transformVNodeArgs(transformer) {\r\n    vnodeArgsTransformer = transformer;\r\n}\r\nconst createVNodeWithArgsTransform = (...args) => {\r\n    return _createVNode(...(vnodeArgsTransformer\r\n        ? vnodeArgsTransformer(args, currentRenderingInstance)\r\n        : args));\r\n};\r\nconst InternalObjectKey = `__vInternal`;\r\nconst normalizeKey = ({ key }) => key != null ? key : null;\r\nconst normalizeRef = ({ ref }) => {\r\n    return (ref != null\r\n        ? isArray(ref)\r\n            ? ref\r\n            : { i: currentRenderingInstance, r: ref }\r\n        : null);\r\n};\r\nconst createVNode = ((process.env.NODE_ENV !== 'production')\r\n    ? createVNodeWithArgsTransform\r\n    : _createVNode);\r\nfunction _createVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, isBlockNode = false) {\r\n    if (!type || type === NULL_DYNAMIC_COMPONENT) {\r\n        if ((process.env.NODE_ENV !== 'production') && !type) {\r\n            warn(`Invalid vnode type when creating vnode: ${type}.`);\r\n        }\r\n        type = Comment;\r\n    }\r\n    if (isVNode(type)) {\r\n        // createVNode receiving an existing vnode. This happens in cases like\r\n        // <component :is=\"vnode\"/>\r\n        // #2078 make sure to merge refs during the clone instead of overwriting it\r\n        const cloned = cloneVNode(type, props, true /* mergeRef: true */);\r\n        if (children) {\r\n            normalizeChildren(cloned, children);\r\n        }\r\n        return cloned;\r\n    }\r\n    // class component normalization.\r\n    if (isClassComponent(type)) {\r\n        type = type.__vccOpts;\r\n    }\r\n    // class & style normalization.\r\n    if (props) {\r\n        // for reactive or proxy objects, we need to clone it to enable mutation.\r\n        if (isProxy(props) || InternalObjectKey in props) {\r\n            props = extend({}, props);\r\n        }\r\n        let { class: klass, style } = props;\r\n        if (klass && !isString(klass)) {\r\n            props.class = normalizeClass(klass);\r\n        }\r\n        if (isObject(style)) {\r\n            // reactive state objects need to be cloned since they are likely to be\r\n            // mutated\r\n            if (isProxy(style) && !isArray(style)) {\r\n                style = extend({}, style);\r\n            }\r\n            props.style = normalizeStyle(style);\r\n        }\r\n    }\r\n    // encode the vnode type information into a bitmap\r\n    const shapeFlag = isString(type)\r\n        ? 1 /* ELEMENT */\r\n        :  isSuspense(type)\r\n            ? 128 /* SUSPENSE */\r\n            : isTeleport(type)\r\n                ? 64 /* TELEPORT */\r\n                : isObject(type)\r\n                    ? 4 /* STATEFUL_COMPONENT */\r\n                    : isFunction(type)\r\n                        ? 2 /* FUNCTIONAL_COMPONENT */\r\n                        : 0;\r\n    if ((process.env.NODE_ENV !== 'production') && shapeFlag & 4 /* STATEFUL_COMPONENT */ && isProxy(type)) {\r\n        type = toRaw(type);\r\n        warn(`Vue received a Component which was made a reactive object. This can ` +\r\n            `lead to unnecessary performance overhead, and should be avoided by ` +\r\n            `marking the component with \\`markRaw\\` or using \\`shallowRef\\` ` +\r\n            `instead of \\`ref\\`.`, `\\nComponent that was made reactive: `, type);\r\n    }\r\n    const vnode = {\r\n        __v_isVNode: true,\r\n        [\"__v_skip\" /* SKIP */]: true,\r\n        type,\r\n        props,\r\n        key: props && normalizeKey(props),\r\n        ref: props && normalizeRef(props),\r\n        scopeId: currentScopeId,\r\n        children: null,\r\n        component: null,\r\n        suspense: null,\r\n        ssContent: null,\r\n        ssFallback: null,\r\n        dirs: null,\r\n        transition: null,\r\n        el: null,\r\n        anchor: null,\r\n        target: null,\r\n        targetAnchor: null,\r\n        staticCount: 0,\r\n        shapeFlag,\r\n        patchFlag,\r\n        dynamicProps,\r\n        dynamicChildren: null,\r\n        appContext: null\r\n    };\r\n    // validate key\r\n    if ((process.env.NODE_ENV !== 'production') && vnode.key !== vnode.key) {\r\n        warn(`VNode created with invalid key (NaN). VNode type:`, vnode.type);\r\n    }\r\n    normalizeChildren(vnode, children);\r\n    // normalize suspense children\r\n    if ( shapeFlag & 128 /* SUSPENSE */) {\r\n        const { content, fallback } = normalizeSuspenseChildren(vnode);\r\n        vnode.ssContent = content;\r\n        vnode.ssFallback = fallback;\r\n    }\r\n    if (shouldTrack > 0 &&\r\n        // avoid a block node from tracking itself\r\n        !isBlockNode &&\r\n        // has current parent block\r\n        currentBlock &&\r\n        // presence of a patch flag indicates this node needs patching on updates.\r\n        // component nodes also should always be patched, because even if the\r\n        // component doesn't need to update, it needs to persist the instance on to\r\n        // the next vnode so that it can be properly unmounted later.\r\n        (patchFlag > 0 || shapeFlag & 6 /* COMPONENT */) &&\r\n        // the EVENTS flag is only for hydration and if it is the only flag, the\r\n        // vnode should not be considered dynamic due to handler caching.\r\n        patchFlag !== 32 /* HYDRATE_EVENTS */) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\nfunction cloneVNode(vnode, extraProps, mergeRef = false) {\r\n    // This is intentionally NOT using spread or extend to avoid the runtime\r\n    // key enumeration cost.\r\n    const { props, ref, patchFlag } = vnode;\r\n    const mergedProps = extraProps ? mergeProps(props || {}, extraProps) : props;\r\n    return {\r\n        __v_isVNode: true,\r\n        [\"__v_skip\" /* SKIP */]: true,\r\n        type: vnode.type,\r\n        props: mergedProps,\r\n        key: mergedProps && normalizeKey(mergedProps),\r\n        ref: extraProps && extraProps.ref\r\n            ? // #2078 in the case of <component :is=\"vnode\" ref=\"extra\"/>\r\n                // if the vnode itself already has a ref, cloneVNode will need to merge\r\n                // the refs so the single vnode can be set on multiple refs\r\n                mergeRef && ref\r\n                    ? isArray(ref)\r\n                        ? ref.concat(normalizeRef(extraProps))\r\n                        : [ref, normalizeRef(extraProps)]\r\n                    : normalizeRef(extraProps)\r\n            : ref,\r\n        scopeId: vnode.scopeId,\r\n        children: vnode.children,\r\n        target: vnode.target,\r\n        targetAnchor: vnode.targetAnchor,\r\n        staticCount: vnode.staticCount,\r\n        shapeFlag: vnode.shapeFlag,\r\n        // if the vnode is cloned with extra props, we can no longer assume its\r\n        // existing patch flag to be reliable and need to add the FULL_PROPS flag.\r\n        // note: perserve flag for fragments since they use the flag for children\r\n        // fast paths only.\r\n        patchFlag: extraProps && vnode.type !== Fragment\r\n            ? patchFlag === -1 // hoisted node\r\n                ? 16 /* FULL_PROPS */\r\n                : patchFlag | 16 /* FULL_PROPS */\r\n            : patchFlag,\r\n        dynamicProps: vnode.dynamicProps,\r\n        dynamicChildren: vnode.dynamicChildren,\r\n        appContext: vnode.appContext,\r\n        dirs: vnode.dirs,\r\n        transition: vnode.transition,\r\n        // These should technically only be non-null on mounted VNodes. However,\r\n        // they *should* be copied for kept-alive vnodes. So we just always copy\r\n        // them since them being non-null during a mount doesn't affect the logic as\r\n        // they will simply be overwritten.\r\n        component: vnode.component,\r\n        suspense: vnode.suspense,\r\n        ssContent: vnode.ssContent && cloneVNode(vnode.ssContent),\r\n        ssFallback: vnode.ssFallback && cloneVNode(vnode.ssFallback),\r\n        el: vnode.el,\r\n        anchor: vnode.anchor\r\n    };\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createTextVNode(text = ' ', flag = 0) {\r\n    return createVNode(Text, null, text, flag);\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createStaticVNode(content, numberOfNodes) {\r\n    // A static vnode can contain multiple stringified elements, and the number\r\n    // of elements is necessary for hydration.\r\n    const vnode = createVNode(Static, null, content);\r\n    vnode.staticCount = numberOfNodes;\r\n    return vnode;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createCommentVNode(text = '', \r\n// when used as the v-else branch, the comment node must be created as a\r\n// block to ensure correct updates.\r\nasBlock = false) {\r\n    return asBlock\r\n        ? (openBlock(), createBlock(Comment, null, text))\r\n        : createVNode(Comment, null, text);\r\n}\r\nfunction normalizeVNode(child) {\r\n    if (child == null || typeof child === 'boolean') {\r\n        // empty placeholder\r\n        return createVNode(Comment);\r\n    }\r\n    else if (isArray(child)) {\r\n        // fragment\r\n        return createVNode(Fragment, null, child);\r\n    }\r\n    else if (typeof child === 'object') {\r\n        // already vnode, this should be the most common since compiled templates\r\n        // always produce all-vnode children arrays\r\n        return child.el === null ? child : cloneVNode(child);\r\n    }\r\n    else {\r\n        // strings and numbers\r\n        return createVNode(Text, null, String(child));\r\n    }\r\n}\r\n// optimized normalization for template-compiled render fns\r\nfunction cloneIfMounted(child) {\r\n    return child.el === null ? child : cloneVNode(child);\r\n}\r\nfunction normalizeChildren(vnode, children) {\r\n    let type = 0;\r\n    const { shapeFlag } = vnode;\r\n    if (children == null) {\r\n        children = null;\r\n    }\r\n    else if (isArray(children)) {\r\n        type = 16 /* ARRAY_CHILDREN */;\r\n    }\r\n    else if (typeof children === 'object') {\r\n        if (shapeFlag & 1 /* ELEMENT */ || shapeFlag & 64 /* TELEPORT */) {\r\n            // Normalize slot to plain children for plain element and Teleport\r\n            const slot = children.default;\r\n            if (slot) {\r\n                // _c marker is added by withCtx() indicating this is a compiled slot\r\n                slot._c && setCompiledSlotRendering(1);\r\n                normalizeChildren(vnode, slot());\r\n                slot._c && setCompiledSlotRendering(-1);\r\n            }\r\n            return;\r\n        }\r\n        else {\r\n            type = 32 /* SLOTS_CHILDREN */;\r\n            const slotFlag = children._;\r\n            if (!slotFlag && !(InternalObjectKey in children)) {\r\n                children._ctx = currentRenderingInstance;\r\n            }\r\n            else if (slotFlag === 3 /* FORWARDED */ && currentRenderingInstance) {\r\n                // a child component receives forwarded slots from the parent.\r\n                // its slot type is determined by its parent's slot type.\r\n                if (currentRenderingInstance.vnode.patchFlag & 1024 /* DYNAMIC_SLOTS */) {\r\n                    children._ = 2 /* DYNAMIC */;\r\n                    vnode.patchFlag |= 1024 /* DYNAMIC_SLOTS */;\r\n                }\r\n                else {\r\n                    children._ = 1 /* STABLE */;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (isFunction(children)) {\r\n        children = { default: children, _ctx: currentRenderingInstance };\r\n        type = 32 /* SLOTS_CHILDREN */;\r\n    }\r\n    else {\r\n        children = String(children);\r\n        // force teleport children to array so it can be moved around\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type = 16 /* ARRAY_CHILDREN */;\r\n            children = [createTextVNode(children)];\r\n        }\r\n        else {\r\n            type = 8 /* TEXT_CHILDREN */;\r\n        }\r\n    }\r\n    vnode.children = children;\r\n    vnode.shapeFlag |= type;\r\n}\r\nfunction mergeProps(...args) {\r\n    const ret = extend({}, args[0]);\r\n    for (let i = 1; i < args.length; i++) {\r\n        const toMerge = args[i];\r\n        for (const key in toMerge) {\r\n            if (key === 'class') {\r\n                if (ret.class !== toMerge.class) {\r\n                    ret.class = normalizeClass([ret.class, toMerge.class]);\r\n                }\r\n            }\r\n            else if (key === 'style') {\r\n                ret.style = normalizeStyle([ret.style, toMerge.style]);\r\n            }\r\n            else if (isOn(key)) {\r\n                const existing = ret[key];\r\n                const incoming = toMerge[key];\r\n                if (existing !== incoming) {\r\n                    ret[key] = existing\r\n                        ? [].concat(existing, toMerge[key])\r\n                        : incoming;\r\n                }\r\n            }\r\n            else if (key !== '') {\r\n                ret[key] = toMerge[key];\r\n            }\r\n        }\r\n    }\r\n    return ret;\r\n}\n\nfunction provide(key, value) {\r\n    if (!currentInstance) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`provide() can only be used inside setup().`);\r\n        }\r\n    }\r\n    else {\r\n        let provides = currentInstance.provides;\r\n        // by default an instance inherits its parent's provides object\r\n        // but when it needs to provide values of its own, it creates its\r\n        // own provides object using parent provides object as prototype.\r\n        // this way in `inject` we can simply look up injections from direct\r\n        // parent and let the prototype chain do the work.\r\n        const parentProvides = currentInstance.parent && currentInstance.parent.provides;\r\n        if (parentProvides === provides) {\r\n            provides = currentInstance.provides = Object.create(parentProvides);\r\n        }\r\n        // TS doesn't allow symbol as index type\r\n        provides[key] = value;\r\n    }\r\n}\r\nfunction inject(key, defaultValue, treatDefaultAsFactory = false) {\r\n    // fallback to `currentRenderingInstance` so that this can be called in\r\n    // a functional component\r\n    const instance = currentInstance || currentRenderingInstance;\r\n    if (instance) {\r\n        // #2400\r\n        // to support `app.use` plugins,\r\n        // fallback to appContext's `provides` if the intance is at root\r\n        const provides = instance.parent == null\r\n            ? instance.vnode.appContext && instance.vnode.appContext.provides\r\n            : instance.parent.provides;\r\n        if (provides && key in provides) {\r\n            // TS doesn't allow symbol as index type\r\n            return provides[key];\r\n        }\r\n        else if (arguments.length > 1) {\r\n            return treatDefaultAsFactory && isFunction(defaultValue)\r\n                ? defaultValue()\r\n                : defaultValue;\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`injection \"${String(key)}\" not found.`);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`inject() can only be used inside setup() or functional components.`);\r\n    }\r\n}\n\nfunction createDuplicateChecker() {\r\n    const cache = Object.create(null);\r\n    return (type, key) => {\r\n        if (cache[key]) {\r\n            warn(`${type} property \"${key}\" is already defined in ${cache[key]}.`);\r\n        }\r\n        else {\r\n            cache[key] = type;\r\n        }\r\n    };\r\n}\r\nlet isInBeforeCreate = false;\r\nfunction applyOptions(instance, options, deferredData = [], deferredWatch = [], deferredProvide = [], asMixin = false) {\r\n    const { \r\n    // composition\r\n    mixins, extends: extendsOptions, \r\n    // state\r\n    data: dataOptions, computed: computedOptions, methods, watch: watchOptions, provide: provideOptions, inject: injectOptions, \r\n    // assets\r\n    components, directives, \r\n    // lifecycle\r\n    beforeMount, mounted, beforeUpdate, updated, activated, deactivated, beforeDestroy, beforeUnmount, destroyed, unmounted, render, renderTracked, renderTriggered, errorCaptured } = options;\r\n    const publicThis = instance.proxy;\r\n    const ctx = instance.ctx;\r\n    const globalMixins = instance.appContext.mixins;\r\n    if (asMixin && render && instance.render === NOOP) {\r\n        instance.render = render;\r\n    }\r\n    // applyOptions is called non-as-mixin once per instance\r\n    if (!asMixin) {\r\n        isInBeforeCreate = true;\r\n        callSyncHook('beforeCreate', \"bc\" /* BEFORE_CREATE */, options, instance, globalMixins);\r\n        isInBeforeCreate = false;\r\n        // global mixins are applied first\r\n        applyMixins(instance, globalMixins, deferredData, deferredWatch, deferredProvide);\r\n    }\r\n    // extending a base component...\r\n    if (extendsOptions) {\r\n        applyOptions(instance, extendsOptions, deferredData, deferredWatch, deferredProvide, true);\r\n    }\r\n    // local mixins\r\n    if (mixins) {\r\n        applyMixins(instance, mixins, deferredData, deferredWatch, deferredProvide);\r\n    }\r\n    const checkDuplicateProperties = (process.env.NODE_ENV !== 'production') ? createDuplicateChecker() : null;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const [propsOptions] = instance.propsOptions;\r\n        if (propsOptions) {\r\n            for (const key in propsOptions) {\r\n                checkDuplicateProperties(\"Props\" /* PROPS */, key);\r\n            }\r\n        }\r\n    }\r\n    // options initialization order (to be consistent with Vue 2):\r\n    // - props (already done outside of this function)\r\n    // - inject\r\n    // - methods\r\n    // - data (deferred since it relies on `this` access)\r\n    // - computed\r\n    // - watch (deferred since it relies on `this` access)\r\n    if (injectOptions) {\r\n        if (isArray(injectOptions)) {\r\n            for (let i = 0; i < injectOptions.length; i++) {\r\n                const key = injectOptions[i];\r\n                ctx[key] = inject(key);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Inject\" /* INJECT */, key);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (const key in injectOptions) {\r\n                const opt = injectOptions[key];\r\n                if (isObject(opt)) {\r\n                    ctx[key] = inject(opt.from || key, opt.default, true /* treat default function as factory */);\r\n                }\r\n                else {\r\n                    ctx[key] = inject(opt);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Inject\" /* INJECT */, key);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (methods) {\r\n        for (const key in methods) {\r\n            const methodHandler = methods[key];\r\n            if (isFunction(methodHandler)) {\r\n                ctx[key] = methodHandler.bind(publicThis);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Methods\" /* METHODS */, key);\r\n                }\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Method \"${key}\" has type \"${typeof methodHandler}\" in the component definition. ` +\r\n                    `Did you reference the function correctly?`);\r\n            }\r\n        }\r\n    }\r\n    if (!asMixin) {\r\n        if (deferredData.length) {\r\n            deferredData.forEach(dataFn => resolveData(instance, dataFn, publicThis));\r\n        }\r\n        if (dataOptions) {\r\n            resolveData(instance, dataOptions, publicThis);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            const rawData = toRaw(instance.data);\r\n            for (const key in rawData) {\r\n                checkDuplicateProperties(\"Data\" /* DATA */, key);\r\n                // expose data on ctx during dev\r\n                if (key[0] !== '$' && key[0] !== '_') {\r\n                    Object.defineProperty(ctx, key, {\r\n                        configurable: true,\r\n                        enumerable: true,\r\n                        get: () => rawData[key],\r\n                        set: NOOP\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (dataOptions) {\r\n        deferredData.push(dataOptions);\r\n    }\r\n    if (computedOptions) {\r\n        for (const key in computedOptions) {\r\n            const opt = computedOptions[key];\r\n            const get = isFunction(opt)\r\n                ? opt.bind(publicThis, publicThis)\r\n                : isFunction(opt.get)\r\n                    ? opt.get.bind(publicThis, publicThis)\r\n                    : NOOP;\r\n            if ((process.env.NODE_ENV !== 'production') && get === NOOP) {\r\n                warn(`Computed property \"${key}\" has no getter.`);\r\n            }\r\n            const set = !isFunction(opt) && isFunction(opt.set)\r\n                ? opt.set.bind(publicThis)\r\n                : (process.env.NODE_ENV !== 'production')\r\n                    ? () => {\r\n                        warn(`Write operation failed: computed property \"${key}\" is readonly.`);\r\n                    }\r\n                    : NOOP;\r\n            const c = computed({\r\n                get,\r\n                set\r\n            });\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => c.value,\r\n                set: v => (c.value = v)\r\n            });\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkDuplicateProperties(\"Computed\" /* COMPUTED */, key);\r\n            }\r\n        }\r\n    }\r\n    if (watchOptions) {\r\n        deferredWatch.push(watchOptions);\r\n    }\r\n    if (!asMixin && deferredWatch.length) {\r\n        deferredWatch.forEach(watchOptions => {\r\n            for (const key in watchOptions) {\r\n                createWatcher(watchOptions[key], ctx, publicThis, key);\r\n            }\r\n        });\r\n    }\r\n    if (provideOptions) {\r\n        deferredProvide.push(provideOptions);\r\n    }\r\n    if (!asMixin && deferredProvide.length) {\r\n        deferredProvide.forEach(provideOptions => {\r\n            const provides = isFunction(provideOptions)\r\n                ? provideOptions.call(publicThis)\r\n                : provideOptions;\r\n            for (const key in provides) {\r\n                provide(key, provides[key]);\r\n            }\r\n        });\r\n    }\r\n    // asset options.\r\n    // To reduce memory usage, only components with mixins or extends will have\r\n    // resolved asset registry attached to instance.\r\n    if (asMixin) {\r\n        if (components) {\r\n            extend(instance.components ||\r\n                (instance.components = extend({}, instance.type.components)), components);\r\n        }\r\n        if (directives) {\r\n            extend(instance.directives ||\r\n                (instance.directives = extend({}, instance.type.directives)), directives);\r\n        }\r\n    }\r\n    // lifecycle options\r\n    if (!asMixin) {\r\n        callSyncHook('created', \"c\" /* CREATED */, options, instance, globalMixins);\r\n    }\r\n    if (beforeMount) {\r\n        onBeforeMount(beforeMount.bind(publicThis));\r\n    }\r\n    if (mounted) {\r\n        onMounted(mounted.bind(publicThis));\r\n    }\r\n    if (beforeUpdate) {\r\n        onBeforeUpdate(beforeUpdate.bind(publicThis));\r\n    }\r\n    if (updated) {\r\n        onUpdated(updated.bind(publicThis));\r\n    }\r\n    if (activated) {\r\n        onActivated(activated.bind(publicThis));\r\n    }\r\n    if (deactivated) {\r\n        onDeactivated(deactivated.bind(publicThis));\r\n    }\r\n    if (errorCaptured) {\r\n        onErrorCaptured(errorCaptured.bind(publicThis));\r\n    }\r\n    if (renderTracked) {\r\n        onRenderTracked(renderTracked.bind(publicThis));\r\n    }\r\n    if (renderTriggered) {\r\n        onRenderTriggered(renderTriggered.bind(publicThis));\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && beforeDestroy) {\r\n        warn(`\\`beforeDestroy\\` has been renamed to \\`beforeUnmount\\`.`);\r\n    }\r\n    if (beforeUnmount) {\r\n        onBeforeUnmount(beforeUnmount.bind(publicThis));\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && destroyed) {\r\n        warn(`\\`destroyed\\` has been renamed to \\`unmounted\\`.`);\r\n    }\r\n    if (unmounted) {\r\n        onUnmounted(unmounted.bind(publicThis));\r\n    }\r\n}\r\nfunction callSyncHook(name, type, options, instance, globalMixins) {\r\n    callHookFromMixins(name, type, globalMixins, instance);\r\n    const { extends: base, mixins } = options;\r\n    if (base) {\r\n        callHookFromExtends(name, type, base, instance);\r\n    }\r\n    if (mixins) {\r\n        callHookFromMixins(name, type, mixins, instance);\r\n    }\r\n    const selfHook = options[name];\r\n    if (selfHook) {\r\n        callWithAsyncErrorHandling(selfHook.bind(instance.proxy), instance, type);\r\n    }\r\n}\r\nfunction callHookFromExtends(name, type, base, instance) {\r\n    if (base.extends) {\r\n        callHookFromExtends(name, type, base.extends, instance);\r\n    }\r\n    const baseHook = base[name];\r\n    if (baseHook) {\r\n        callWithAsyncErrorHandling(baseHook.bind(instance.proxy), instance, type);\r\n    }\r\n}\r\nfunction callHookFromMixins(name, type, mixins, instance) {\r\n    for (let i = 0; i < mixins.length; i++) {\r\n        const chainedMixins = mixins[i].mixins;\r\n        if (chainedMixins) {\r\n            callHookFromMixins(name, type, chainedMixins, instance);\r\n        }\r\n        const fn = mixins[i][name];\r\n        if (fn) {\r\n            callWithAsyncErrorHandling(fn.bind(instance.proxy), instance, type);\r\n        }\r\n    }\r\n}\r\nfunction applyMixins(instance, mixins, deferredData, deferredWatch, deferredProvide) {\r\n    for (let i = 0; i < mixins.length; i++) {\r\n        applyOptions(instance, mixins[i], deferredData, deferredWatch, deferredProvide, true);\r\n    }\r\n}\r\nfunction resolveData(instance, dataFn, publicThis) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isFunction(dataFn)) {\r\n        warn(`The data option must be a function. ` +\r\n            `Plain object usage is no longer supported.`);\r\n    }\r\n    const data = dataFn.call(publicThis, publicThis);\r\n    if ((process.env.NODE_ENV !== 'production') && isPromise(data)) {\r\n        warn(`data() returned a Promise - note data() cannot be async; If you ` +\r\n            `intend to perform data fetching before component renders, use ` +\r\n            `async setup() + <Suspense>.`);\r\n    }\r\n    if (!isObject(data)) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`data() should return an object.`);\r\n    }\r\n    else if (instance.data === EMPTY_OBJ) {\r\n        instance.data = reactive(data);\r\n    }\r\n    else {\r\n        // existing data: this is a mixin or extends.\r\n        extend(instance.data, data);\r\n    }\r\n}\r\nfunction createWatcher(raw, ctx, publicThis, key) {\r\n    const getter = key.includes('.')\r\n        ? createPathGetter(publicThis, key)\r\n        : () => publicThis[key];\r\n    if (isString(raw)) {\r\n        const handler = ctx[raw];\r\n        if (isFunction(handler)) {\r\n            watch(getter, handler);\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Invalid watch handler specified by key \"${raw}\"`, handler);\r\n        }\r\n    }\r\n    else if (isFunction(raw)) {\r\n        watch(getter, raw.bind(publicThis));\r\n    }\r\n    else if (isObject(raw)) {\r\n        if (isArray(raw)) {\r\n            raw.forEach(r => createWatcher(r, ctx, publicThis, key));\r\n        }\r\n        else {\r\n            const handler = isFunction(raw.handler)\r\n                ? raw.handler.bind(publicThis)\r\n                : ctx[raw.handler];\r\n            if (isFunction(handler)) {\r\n                watch(getter, handler, raw);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Invalid watch handler specified by key \"${raw.handler}\"`, handler);\r\n            }\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Invalid watch option: \"${key}\"`, raw);\r\n    }\r\n}\r\nfunction createPathGetter(ctx, path) {\r\n    const segments = path.split('.');\r\n    return () => {\r\n        let cur = ctx;\r\n        for (let i = 0; i < segments.length && cur; i++) {\r\n            cur = cur[segments[i]];\r\n        }\r\n        return cur;\r\n    };\r\n}\r\nfunction resolveMergedOptions(instance) {\r\n    const raw = instance.type;\r\n    const { __merged, mixins, extends: extendsOptions } = raw;\r\n    if (__merged)\r\n        return __merged;\r\n    const globalMixins = instance.appContext.mixins;\r\n    if (!globalMixins.length && !mixins && !extendsOptions)\r\n        return raw;\r\n    const options = {};\r\n    globalMixins.forEach(m => mergeOptions(options, m, instance));\r\n    mergeOptions(options, raw, instance);\r\n    return (raw.__merged = options);\r\n}\r\nfunction mergeOptions(to, from, instance) {\r\n    const strats = instance.appContext.config.optionMergeStrategies;\r\n    const { mixins, extends: extendsOptions } = from;\r\n    extendsOptions && mergeOptions(to, extendsOptions, instance);\r\n    mixins &&\r\n        mixins.forEach((m) => mergeOptions(to, m, instance));\r\n    for (const key in from) {\r\n        if (strats && hasOwn(strats, key)) {\r\n            to[key] = strats[key](to[key], from[key], instance.proxy, key);\r\n        }\r\n        else {\r\n            to[key] = from[key];\r\n        }\r\n    }\r\n}\n\nconst publicPropertiesMap = extend(Object.create(null), {\r\n    $: i => i,\r\n    $el: i => i.vnode.el,\r\n    $data: i => i.data,\r\n    $props: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.props) : i.props),\r\n    $attrs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.attrs) : i.attrs),\r\n    $slots: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.slots) : i.slots),\r\n    $refs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.refs) : i.refs),\r\n    $parent: i => i.parent && i.parent.proxy,\r\n    $root: i => i.root && i.root.proxy,\r\n    $emit: i => i.emit,\r\n    $options: i => (__VUE_OPTIONS_API__ ? resolveMergedOptions(i) : i.type),\r\n    $forceUpdate: i => () => queueJob(i.update),\r\n    $nextTick: i => nextTick.bind(i.proxy),\r\n    $watch: i => (__VUE_OPTIONS_API__ ? instanceWatch.bind(i) : NOOP)\r\n});\r\nconst PublicInstanceProxyHandlers = {\r\n    get({ _: instance }, key) {\r\n        const { ctx, setupState, data, props, accessCache, type, appContext } = instance;\r\n        // let @vue/reactivity know it should never observe Vue public instances.\r\n        if (key === \"__v_skip\" /* SKIP */) {\r\n            return true;\r\n        }\r\n        // for internal formatters to know that this is a Vue instance\r\n        if ((process.env.NODE_ENV !== 'production') && key === '__isVue') {\r\n            return true;\r\n        }\r\n        // data / props / ctx\r\n        // This getter gets called for every property access on the render context\r\n        // during render and is a major hotspot. The most expensive part of this\r\n        // is the multiple hasOwn() calls. It's much faster to do a simple property\r\n        // access on a plain object, so we use an accessCache object (with null\r\n        // prototype) to memoize what access type a key corresponds to.\r\n        let normalizedProps;\r\n        if (key[0] !== '$') {\r\n            const n = accessCache[key];\r\n            if (n !== undefined) {\r\n                switch (n) {\r\n                    case 0 /* SETUP */:\r\n                        return setupState[key];\r\n                    case 1 /* DATA */:\r\n                        return data[key];\r\n                    case 3 /* CONTEXT */:\r\n                        return ctx[key];\r\n                    case 2 /* PROPS */:\r\n                        return props[key];\r\n                    // default: just fallthrough\r\n                }\r\n            }\r\n            else if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n                accessCache[key] = 0 /* SETUP */;\r\n                return setupState[key];\r\n            }\r\n            else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n                accessCache[key] = 1 /* DATA */;\r\n                return data[key];\r\n            }\r\n            else if (\r\n            // only cache other properties when instance has declared (thus stable)\r\n            // props\r\n            (normalizedProps = instance.propsOptions[0]) &&\r\n                hasOwn(normalizedProps, key)) {\r\n                accessCache[key] = 2 /* PROPS */;\r\n                return props[key];\r\n            }\r\n            else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n                accessCache[key] = 3 /* CONTEXT */;\r\n                return ctx[key];\r\n            }\r\n            else if (!__VUE_OPTIONS_API__ || !isInBeforeCreate) {\r\n                accessCache[key] = 4 /* OTHER */;\r\n            }\r\n        }\r\n        const publicGetter = publicPropertiesMap[key];\r\n        let cssModule, globalProperties;\r\n        // public $xxx properties\r\n        if (publicGetter) {\r\n            if (key === '$attrs') {\r\n                track(instance, \"get\" /* GET */, key);\r\n                (process.env.NODE_ENV !== 'production') && markAttrsAccessed();\r\n            }\r\n            return publicGetter(instance);\r\n        }\r\n        else if (\r\n        // css module (injected by vue-loader)\r\n        (cssModule = type.__cssModules) &&\r\n            (cssModule = cssModule[key])) {\r\n            return cssModule;\r\n        }\r\n        else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n            // user may set custom properties to `this` that start with `$`\r\n            accessCache[key] = 3 /* CONTEXT */;\r\n            return ctx[key];\r\n        }\r\n        else if (\r\n        // global properties\r\n        ((globalProperties = appContext.config.globalProperties),\r\n            hasOwn(globalProperties, key))) {\r\n            return globalProperties[key];\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production') &&\r\n            currentRenderingInstance &&\r\n            (!isString(key) ||\r\n                // #1091 avoid internal isRef/isVNode checks on component instance leading\r\n                // to infinite warning loop\r\n                key.indexOf('__v') !== 0)) {\r\n            if (data !== EMPTY_OBJ &&\r\n                (key[0] === '$' || key[0] === '_') &&\r\n                hasOwn(data, key)) {\r\n                warn(`Property ${JSON.stringify(key)} must be accessed via $data because it starts with a reserved ` +\r\n                    `character (\"$\" or \"_\") and is not proxied on the render context.`);\r\n            }\r\n            else {\r\n                warn(`Property ${JSON.stringify(key)} was accessed during render ` +\r\n                    `but is not defined on instance.`);\r\n            }\r\n        }\r\n    },\r\n    set({ _: instance }, key, value) {\r\n        const { data, setupState, ctx } = instance;\r\n        if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n            setupState[key] = value;\r\n        }\r\n        else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n            data[key] = value;\r\n        }\r\n        else if (key in instance.props) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to mutate prop \"${key}\". Props are readonly.`, instance);\r\n            return false;\r\n        }\r\n        if (key[0] === '$' && key.slice(1) in instance) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to mutate public property \"${key}\". ` +\r\n                    `Properties starting with $ are reserved and readonly.`, instance);\r\n            return false;\r\n        }\r\n        else {\r\n            if ((process.env.NODE_ENV !== 'production') && key in instance.appContext.config.globalProperties) {\r\n                Object.defineProperty(ctx, key, {\r\n                    enumerable: true,\r\n                    configurable: true,\r\n                    value\r\n                });\r\n            }\r\n            else {\r\n                ctx[key] = value;\r\n            }\r\n        }\r\n        return true;\r\n    },\r\n    has({ _: { data, setupState, accessCache, ctx, appContext, propsOptions } }, key) {\r\n        let normalizedProps;\r\n        return (accessCache[key] !== undefined ||\r\n            (data !== EMPTY_OBJ && hasOwn(data, key)) ||\r\n            (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) ||\r\n            ((normalizedProps = propsOptions[0]) && hasOwn(normalizedProps, key)) ||\r\n            hasOwn(ctx, key) ||\r\n            hasOwn(publicPropertiesMap, key) ||\r\n            hasOwn(appContext.config.globalProperties, key));\r\n    }\r\n};\r\nif ((process.env.NODE_ENV !== 'production') && !false) {\r\n    PublicInstanceProxyHandlers.ownKeys = (target) => {\r\n        warn(`Avoid app logic that relies on enumerating keys on a component instance. ` +\r\n            `The keys will be empty in production mode to avoid performance overhead.`);\r\n        return Reflect.ownKeys(target);\r\n    };\r\n}\r\nconst RuntimeCompiledPublicInstanceProxyHandlers = extend({}, PublicInstanceProxyHandlers, {\r\n    get(target, key) {\r\n        // fast path for unscopables when using `with` block\r\n        if (key === Symbol.unscopables) {\r\n            return;\r\n        }\r\n        return PublicInstanceProxyHandlers.get(target, key, target);\r\n    },\r\n    has(_, key) {\r\n        const has = key[0] !== '_' && !isGloballyWhitelisted(key);\r\n        if ((process.env.NODE_ENV !== 'production') && !has && PublicInstanceProxyHandlers.has(_, key)) {\r\n            warn(`Property ${JSON.stringify(key)} should not start with _ which is a reserved prefix for Vue internals.`);\r\n        }\r\n        return has;\r\n    }\r\n});\r\n// In dev mode, the proxy target exposes the same properties as seen on `this`\r\n// for easier console inspection. In prod mode it will be an empty object so\r\n// these properties definitions can be skipped.\r\nfunction createRenderContext(instance) {\r\n    const target = {};\r\n    // expose internal instance for proxy handlers\r\n    Object.defineProperty(target, `_`, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        get: () => instance\r\n    });\r\n    // expose public properties\r\n    Object.keys(publicPropertiesMap).forEach(key => {\r\n        Object.defineProperty(target, key, {\r\n            configurable: true,\r\n            enumerable: false,\r\n            get: () => publicPropertiesMap[key](instance),\r\n            // intercepted by the proxy so no need for implementation,\r\n            // but needed to prevent set errors\r\n            set: NOOP\r\n        });\r\n    });\r\n    // expose global properties\r\n    const { globalProperties } = instance.appContext.config;\r\n    Object.keys(globalProperties).forEach(key => {\r\n        Object.defineProperty(target, key, {\r\n            configurable: true,\r\n            enumerable: false,\r\n            get: () => globalProperties[key],\r\n            set: NOOP\r\n        });\r\n    });\r\n    return target;\r\n}\r\n// dev only\r\nfunction exposePropsOnRenderContext(instance) {\r\n    const { ctx, propsOptions: [propsOptions] } = instance;\r\n    if (propsOptions) {\r\n        Object.keys(propsOptions).forEach(key => {\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => instance.props[key],\r\n                set: NOOP\r\n            });\r\n        });\r\n    }\r\n}\r\n// dev only\r\nfunction exposeSetupStateOnRenderContext(instance) {\r\n    const { ctx, setupState } = instance;\r\n    Object.keys(toRaw(setupState)).forEach(key => {\r\n        if (key[0] === '$' || key[0] === '_') {\r\n            warn(`setup() return property ${JSON.stringify(key)} should not start with \"$\" or \"_\" ` +\r\n                `which are reserved prefixes for Vue internals.`);\r\n            return;\r\n        }\r\n        Object.defineProperty(ctx, key, {\r\n            enumerable: true,\r\n            configurable: true,\r\n            get: () => setupState[key],\r\n            set: NOOP\r\n        });\r\n    });\r\n}\n\nconst emptyAppContext = createAppContext();\r\nlet uid$1 = 0;\r\nfunction createComponentInstance(vnode, parent, suspense) {\r\n    const type = vnode.type;\r\n    // inherit parent app context - or - if root, adopt from root vnode\r\n    const appContext = (parent ? parent.appContext : vnode.appContext) || emptyAppContext;\r\n    const instance = {\r\n        uid: uid$1++,\r\n        vnode,\r\n        type,\r\n        parent,\r\n        appContext,\r\n        root: null,\r\n        next: null,\r\n        subTree: null,\r\n        update: null,\r\n        render: null,\r\n        proxy: null,\r\n        withProxy: null,\r\n        effects: null,\r\n        provides: parent ? parent.provides : Object.create(appContext.provides),\r\n        accessCache: null,\r\n        renderCache: [],\r\n        // local resovled assets\r\n        components: null,\r\n        directives: null,\r\n        // resolved props and emits options\r\n        propsOptions: normalizePropsOptions(type, appContext),\r\n        emitsOptions: normalizeEmitsOptions(type, appContext),\r\n        // emit\r\n        emit: null,\r\n        emitted: null,\r\n        // state\r\n        ctx: EMPTY_OBJ,\r\n        data: EMPTY_OBJ,\r\n        props: EMPTY_OBJ,\r\n        attrs: EMPTY_OBJ,\r\n        slots: EMPTY_OBJ,\r\n        refs: EMPTY_OBJ,\r\n        setupState: EMPTY_OBJ,\r\n        setupContext: null,\r\n        // suspense related\r\n        suspense,\r\n        suspenseId: suspense ? suspense.pendingId : 0,\r\n        asyncDep: null,\r\n        asyncResolved: false,\r\n        // lifecycle hooks\r\n        // not using enums here because it results in computed properties\r\n        isMounted: false,\r\n        isUnmounted: false,\r\n        isDeactivated: false,\r\n        bc: null,\r\n        c: null,\r\n        bm: null,\r\n        m: null,\r\n        bu: null,\r\n        u: null,\r\n        um: null,\r\n        bum: null,\r\n        da: null,\r\n        a: null,\r\n        rtg: null,\r\n        rtc: null,\r\n        ec: null\r\n    };\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        instance.ctx = createRenderContext(instance);\r\n    }\r\n    else {\r\n        instance.ctx = { _: instance };\r\n    }\r\n    instance.root = parent ? parent.root : instance;\r\n    instance.emit = emit.bind(null, instance);\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        devtoolsComponentAdded(instance);\r\n    }\r\n    return instance;\r\n}\r\nlet currentInstance = null;\r\nconst getCurrentInstance = () => currentInstance || currentRenderingInstance;\r\nconst setCurrentInstance = (instance) => {\r\n    currentInstance = instance;\r\n};\r\nconst isBuiltInTag = /*#__PURE__*/ makeMap('slot,component');\r\nfunction validateComponentName(name, config) {\r\n    const appIsNativeTag = config.isNativeTag || NO;\r\n    if (isBuiltInTag(name) || appIsNativeTag(name)) {\r\n        warn('Do not use built-in or reserved HTML elements as component id: ' + name);\r\n    }\r\n}\r\nlet isInSSRComponentSetup = false;\r\nfunction setupComponent(instance, isSSR = false) {\r\n    isInSSRComponentSetup = isSSR;\r\n    const { props, children, shapeFlag } = instance.vnode;\r\n    const isStateful = shapeFlag & 4 /* STATEFUL_COMPONENT */;\r\n    initProps(instance, props, isStateful, isSSR);\r\n    initSlots(instance, children);\r\n    const setupResult = isStateful\r\n        ? setupStatefulComponent(instance, isSSR)\r\n        : undefined;\r\n    isInSSRComponentSetup = false;\r\n    return setupResult;\r\n}\r\nfunction setupStatefulComponent(instance, isSSR) {\r\n    const Component = instance.type;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        if (Component.name) {\r\n            validateComponentName(Component.name, instance.appContext.config);\r\n        }\r\n        if (Component.components) {\r\n            const names = Object.keys(Component.components);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateComponentName(names[i], instance.appContext.config);\r\n            }\r\n        }\r\n        if (Component.directives) {\r\n            const names = Object.keys(Component.directives);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateDirectiveName(names[i]);\r\n            }\r\n        }\r\n    }\r\n    // 0. create render proxy property access cache\r\n    instance.accessCache = Object.create(null);\r\n    // 1. create public instance / render proxy\r\n    // also mark it raw so it's never observed\r\n    instance.proxy = new Proxy(instance.ctx, PublicInstanceProxyHandlers);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        exposePropsOnRenderContext(instance);\r\n    }\r\n    // 2. call setup()\r\n    const { setup } = Component;\r\n    if (setup) {\r\n        const setupContext = (instance.setupContext =\r\n            setup.length > 1 ? createSetupContext(instance) : null);\r\n        currentInstance = instance;\r\n        pauseTracking();\r\n        const setupResult = callWithErrorHandling(setup, instance, 0 /* SETUP_FUNCTION */, [(process.env.NODE_ENV !== 'production') ? shallowReadonly(instance.props) : instance.props, setupContext]);\r\n        resetTracking();\r\n        currentInstance = null;\r\n        if (isPromise(setupResult)) {\r\n            if (isSSR) {\r\n                // return the promise so server-renderer can wait on it\r\n                return setupResult.then((resolvedResult) => {\r\n                    handleSetupResult(instance, resolvedResult);\r\n                });\r\n            }\r\n            else {\r\n                // async setup returned Promise.\r\n                // bail here and wait for re-entry.\r\n                instance.asyncDep = setupResult;\r\n            }\r\n        }\r\n        else {\r\n            handleSetupResult(instance, setupResult);\r\n        }\r\n    }\r\n    else {\r\n        finishComponentSetup(instance);\r\n    }\r\n}\r\nfunction handleSetupResult(instance, setupResult, isSSR) {\r\n    if (isFunction(setupResult)) {\r\n        // setup returned an inline render function\r\n        instance.render = setupResult;\r\n    }\r\n    else if (isObject(setupResult)) {\r\n        if ((process.env.NODE_ENV !== 'production') && isVNode(setupResult)) {\r\n            warn(`setup() should not return VNodes directly - ` +\r\n                `return a render function instead.`);\r\n        }\r\n        // setup returned bindings.\r\n        // assuming a render function compiled from template is present.\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            instance.devtoolsRawSetupState = setupResult;\r\n        }\r\n        instance.setupState = proxyRefs(setupResult);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            exposeSetupStateOnRenderContext(instance);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production') && setupResult !== undefined) {\r\n        warn(`setup() should return an object. Received: ${setupResult === null ? 'null' : typeof setupResult}`);\r\n    }\r\n    finishComponentSetup(instance);\r\n}\r\nlet compile;\r\n/**\r\n * For runtime-dom to register the compiler.\r\n * Note the exported method uses any to avoid d.ts relying on the compiler types.\r\n */\r\nfunction registerRuntimeCompiler(_compile) {\r\n    compile = _compile;\r\n}\r\nfunction finishComponentSetup(instance, isSSR) {\r\n    const Component = instance.type;\r\n    // template / render function normalization\r\n    if (!instance.render) {\r\n        // could be set from setup()\r\n        if (compile && Component.template && !Component.render) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                startMeasure(instance, `compile`);\r\n            }\r\n            Component.render = compile(Component.template, {\r\n                isCustomElement: instance.appContext.config.isCustomElement,\r\n                delimiters: Component.delimiters\r\n            });\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                endMeasure(instance, `compile`);\r\n            }\r\n        }\r\n        instance.render = (Component.render || NOOP);\r\n        // for runtime-compiled render functions using `with` blocks, the render\r\n        // proxy used needs a different `has` handler which is more performant and\r\n        // also only allows a whitelist of globals to fallthrough.\r\n        if (instance.render._rc) {\r\n            instance.withProxy = new Proxy(instance.ctx, RuntimeCompiledPublicInstanceProxyHandlers);\r\n        }\r\n    }\r\n    // support for 2.x options\r\n    if (__VUE_OPTIONS_API__) {\r\n        currentInstance = instance;\r\n        applyOptions(instance, Component);\r\n        currentInstance = null;\r\n    }\r\n    // warn missing template/render\r\n    if ((process.env.NODE_ENV !== 'production') && !Component.render && instance.render === NOOP) {\r\n        /* istanbul ignore if */\r\n        if (!compile && Component.template) {\r\n            warn(`Component provided template option but ` +\r\n                `runtime compilation is not supported in this build of Vue.` +\r\n                ( ` Configure your bundler to alias \"vue\" to \"vue/dist/vue.esm-bundler.js\".`\r\n                    ) /* should not happen */);\r\n        }\r\n        else {\r\n            warn(`Component is missing template or render function.`);\r\n        }\r\n    }\r\n}\r\nconst attrHandlers = {\r\n    get: (target, key) => {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            markAttrsAccessed();\r\n        }\r\n        return target[key];\r\n    },\r\n    set: () => {\r\n        warn(`setupContext.attrs is readonly.`);\r\n        return false;\r\n    },\r\n    deleteProperty: () => {\r\n        warn(`setupContext.attrs is readonly.`);\r\n        return false;\r\n    }\r\n};\r\nfunction createSetupContext(instance) {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        // We use getters in dev in case libs like test-utils overwrite instance\r\n        // properties (overwrites should not be done in prod)\r\n        return Object.freeze({\r\n            get attrs() {\r\n                return new Proxy(instance.attrs, attrHandlers);\r\n            },\r\n            get slots() {\r\n                return shallowReadonly(instance.slots);\r\n            },\r\n            get emit() {\r\n                return (event, ...args) => instance.emit(event, ...args);\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        return {\r\n            attrs: instance.attrs,\r\n            slots: instance.slots,\r\n            emit: instance.emit\r\n        };\r\n    }\r\n}\r\n// record effects created during a component's setup() so that they can be\r\n// stopped when the component unmounts\r\nfunction recordInstanceBoundEffect(effect) {\r\n    if (currentInstance) {\r\n        (currentInstance.effects || (currentInstance.effects = [])).push(effect);\r\n    }\r\n}\r\nconst classifyRE = /(?:^|[-_])(\\w)/g;\r\nconst classify = (str) => str.replace(classifyRE, c => c.toUpperCase()).replace(/[-_]/g, '');\r\n/* istanbul ignore next */\r\nfunction formatComponentName(instance, Component, isRoot = false) {\r\n    let name = isFunction(Component)\r\n        ? Component.displayName || Component.name\r\n        : Component.name;\r\n    if (!name && Component.__file) {\r\n        const match = Component.__file.match(/([^/\\\\]+)\\.vue$/);\r\n        if (match) {\r\n            name = match[1];\r\n        }\r\n    }\r\n    if (!name && instance && instance.parent) {\r\n        // try to infer the name based on reverse resolution\r\n        const inferFromRegistry = (registry) => {\r\n            for (const key in registry) {\r\n                if (registry[key] === Component) {\r\n                    return key;\r\n                }\r\n            }\r\n        };\r\n        name =\r\n            inferFromRegistry(instance.components ||\r\n                instance.parent.type.components) || inferFromRegistry(instance.appContext.components);\r\n    }\r\n    return name ? classify(name) : isRoot ? `App` : `Anonymous`;\r\n}\r\nfunction isClassComponent(value) {\r\n    return isFunction(value) && '__vccOpts' in value;\r\n}\n\nfunction computed(getterOrOptions) {\r\n    const c = computed$1(getterOrOptions);\r\n    recordInstanceBoundEffect(c.effect);\r\n    return c;\r\n}\n\n// implementation, close to no-op\r\nfunction defineComponent(options) {\r\n    return isFunction(options) ? { setup: options, name: options.name } : options;\r\n}\n\nfunction defineAsyncComponent(source) {\r\n    if (isFunction(source)) {\r\n        source = { loader: source };\r\n    }\r\n    const { loader, loadingComponent: loadingComponent, errorComponent: errorComponent, delay = 200, timeout, // undefined = never times out\r\n    suspensible = true, onError: userOnError } = source;\r\n    let pendingRequest = null;\r\n    let resolvedComp;\r\n    let retries = 0;\r\n    const retry = () => {\r\n        retries++;\r\n        pendingRequest = null;\r\n        return load();\r\n    };\r\n    const load = () => {\r\n        let thisRequest;\r\n        return (pendingRequest ||\r\n            (thisRequest = pendingRequest = loader()\r\n                .catch(err => {\r\n                err = err instanceof Error ? err : new Error(String(err));\r\n                if (userOnError) {\r\n                    return new Promise((resolve, reject) => {\r\n                        const userRetry = () => resolve(retry());\r\n                        const userFail = () => reject(err);\r\n                        userOnError(err, userRetry, userFail, retries + 1);\r\n                    });\r\n                }\r\n                else {\r\n                    throw err;\r\n                }\r\n            })\r\n                .then((comp) => {\r\n                if (thisRequest !== pendingRequest && pendingRequest) {\r\n                    return pendingRequest;\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && !comp) {\r\n                    warn(`Async component loader resolved to undefined. ` +\r\n                        `If you are using retry(), make sure to return its return value.`);\r\n                }\r\n                // interop module default\r\n                if (comp &&\r\n                    (comp.__esModule || comp[Symbol.toStringTag] === 'Module')) {\r\n                    comp = comp.default;\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && comp && !isObject(comp) && !isFunction(comp)) {\r\n                    throw new Error(`Invalid async component load result: ${comp}`);\r\n                }\r\n                resolvedComp = comp;\r\n                return comp;\r\n            })));\r\n    };\r\n    return defineComponent({\r\n        __asyncLoader: load,\r\n        name: 'AsyncComponentWrapper',\r\n        setup() {\r\n            const instance = currentInstance;\r\n            // already resolved\r\n            if (resolvedComp) {\r\n                return () => createInnerComp(resolvedComp, instance);\r\n            }\r\n            const onError = (err) => {\r\n                pendingRequest = null;\r\n                handleError(err, instance, 13 /* ASYNC_COMPONENT_LOADER */, !errorComponent /* do not throw in dev if user provided error component */);\r\n            };\r\n            // suspense-controlled or SSR.\r\n            if (( suspensible && instance.suspense) ||\r\n                (false )) {\r\n                return load()\r\n                    .then(comp => {\r\n                    return () => createInnerComp(comp, instance);\r\n                })\r\n                    .catch(err => {\r\n                    onError(err);\r\n                    return () => errorComponent\r\n                        ? createVNode(errorComponent, {\r\n                            error: err\r\n                        })\r\n                        : null;\r\n                });\r\n            }\r\n            const loaded = ref(false);\r\n            const error = ref();\r\n            const delayed = ref(!!delay);\r\n            if (delay) {\r\n                setTimeout(() => {\r\n                    delayed.value = false;\r\n                }, delay);\r\n            }\r\n            if (timeout != null) {\r\n                setTimeout(() => {\r\n                    if (!loaded.value && !error.value) {\r\n                        const err = new Error(`Async component timed out after ${timeout}ms.`);\r\n                        onError(err);\r\n                        error.value = err;\r\n                    }\r\n                }, timeout);\r\n            }\r\n            load()\r\n                .then(() => {\r\n                loaded.value = true;\r\n            })\r\n                .catch(err => {\r\n                onError(err);\r\n                error.value = err;\r\n            });\r\n            return () => {\r\n                if (loaded.value && resolvedComp) {\r\n                    return createInnerComp(resolvedComp, instance);\r\n                }\r\n                else if (error.value && errorComponent) {\r\n                    return createVNode(errorComponent, {\r\n                        error: error.value\r\n                    });\r\n                }\r\n                else if (loadingComponent && !delayed.value) {\r\n                    return createVNode(loadingComponent);\r\n                }\r\n            };\r\n        }\r\n    });\r\n}\r\nfunction createInnerComp(comp, { vnode: { props, children } }) {\r\n    return createVNode(comp, props, children);\r\n}\n\n// Actual implementation\r\nfunction h(type, propsOrChildren, children) {\r\n    const l = arguments.length;\r\n    if (l === 2) {\r\n        if (isObject(propsOrChildren) && !isArray(propsOrChildren)) {\r\n            // single vnode without props\r\n            if (isVNode(propsOrChildren)) {\r\n                return createVNode(type, null, [propsOrChildren]);\r\n            }\r\n            // props without children\r\n            return createVNode(type, propsOrChildren);\r\n        }\r\n        else {\r\n            // omit props\r\n            return createVNode(type, null, propsOrChildren);\r\n        }\r\n    }\r\n    else {\r\n        if (l > 3) {\r\n            children = Array.prototype.slice.call(arguments, 2);\r\n        }\r\n        else if (l === 3 && isVNode(children)) {\r\n            children = [children];\r\n        }\r\n        return createVNode(type, propsOrChildren, children);\r\n    }\r\n}\n\nconst ssrContextKey = Symbol((process.env.NODE_ENV !== 'production') ? `ssrContext` : ``);\r\nconst useSSRContext = () => {\r\n    {\r\n        const ctx = inject(ssrContextKey);\r\n        if (!ctx) {\r\n            warn(`Server rendering context not provided. Make sure to only call ` +\r\n                `useSsrContext() conditionally in the server build.`);\r\n        }\r\n        return ctx;\r\n    }\r\n};\n\nfunction initCustomFormatter() {\r\n    if (!(process.env.NODE_ENV !== 'production') || !true) {\r\n        return;\r\n    }\r\n    const vueStyle = { style: 'color:#3ba776' };\r\n    const numberStyle = { style: 'color:#0b1bc9' };\r\n    const stringStyle = { style: 'color:#b62e24' };\r\n    const keywordStyle = { style: 'color:#9d288c' };\r\n    // custom formatter for Chrome\r\n    // https://www.mattzeunert.com/2016/02/19/custom-chrome-devtools-object-formatters.html\r\n    const formatter = {\r\n        header(obj) {\r\n            // TODO also format ComponentPublicInstance & ctx.slots/attrs in setup\r\n            if (!isObject(obj)) {\r\n                return null;\r\n            }\r\n            if (obj.__isVue) {\r\n                return ['div', vueStyle, `VueInstance`];\r\n            }\r\n            else if (isRef(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, genRefFlag(obj)],\r\n                    '<',\r\n                    formatValue(obj.value),\r\n                    `>`\r\n                ];\r\n            }\r\n            else if (isReactive(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, 'Reactive'],\r\n                    '<',\r\n                    formatValue(obj),\r\n                    `>${isReadonly(obj) ? ` (readonly)` : ``}`\r\n                ];\r\n            }\r\n            else if (isReadonly(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, 'Readonly'],\r\n                    '<',\r\n                    formatValue(obj),\r\n                    '>'\r\n                ];\r\n            }\r\n            return null;\r\n        },\r\n        hasBody(obj) {\r\n            return obj && obj.__isVue;\r\n        },\r\n        body(obj) {\r\n            if (obj && obj.__isVue) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ...formatInstance(obj.$)\r\n                ];\r\n            }\r\n        }\r\n    };\r\n    function formatInstance(instance) {\r\n        const blocks = [];\r\n        if (instance.type.props && instance.props) {\r\n            blocks.push(createInstanceBlock('props', toRaw(instance.props)));\r\n        }\r\n        if (instance.setupState !== EMPTY_OBJ) {\r\n            blocks.push(createInstanceBlock('setup', instance.setupState));\r\n        }\r\n        if (instance.data !== EMPTY_OBJ) {\r\n            blocks.push(createInstanceBlock('data', toRaw(instance.data)));\r\n        }\r\n        const computed = extractKeys(instance, 'computed');\r\n        if (computed) {\r\n            blocks.push(createInstanceBlock('computed', computed));\r\n        }\r\n        const injected = extractKeys(instance, 'inject');\r\n        if (injected) {\r\n            blocks.push(createInstanceBlock('injected', injected));\r\n        }\r\n        blocks.push([\r\n            'div',\r\n            {},\r\n            [\r\n                'span',\r\n                {\r\n                    style: keywordStyle.style + ';opacity:0.66'\r\n                },\r\n                '$ (internal): '\r\n            ],\r\n            ['object', { object: instance }]\r\n        ]);\r\n        return blocks;\r\n    }\r\n    function createInstanceBlock(type, target) {\r\n        target = extend({}, target);\r\n        if (!Object.keys(target).length) {\r\n            return ['span', {}];\r\n        }\r\n        return [\r\n            'div',\r\n            { style: 'line-height:1.25em;margin-bottom:0.6em' },\r\n            [\r\n                'div',\r\n                {\r\n                    style: 'color:#476582'\r\n                },\r\n                type\r\n            ],\r\n            [\r\n                'div',\r\n                {\r\n                    style: 'padding-left:1.25em'\r\n                },\r\n                ...Object.keys(target).map(key => {\r\n                    return [\r\n                        'div',\r\n                        {},\r\n                        ['span', keywordStyle, key + ': '],\r\n                        formatValue(target[key], false)\r\n                    ];\r\n                })\r\n            ]\r\n        ];\r\n    }\r\n    function formatValue(v, asRaw = true) {\r\n        if (typeof v === 'number') {\r\n            return ['span', numberStyle, v];\r\n        }\r\n        else if (typeof v === 'string') {\r\n            return ['span', stringStyle, JSON.stringify(v)];\r\n        }\r\n        else if (typeof v === 'boolean') {\r\n            return ['span', keywordStyle, v];\r\n        }\r\n        else if (isObject(v)) {\r\n            return ['object', { object: asRaw ? toRaw(v) : v }];\r\n        }\r\n        else {\r\n            return ['span', stringStyle, String(v)];\r\n        }\r\n    }\r\n    function extractKeys(instance, type) {\r\n        const Comp = instance.type;\r\n        if (isFunction(Comp)) {\r\n            return;\r\n        }\r\n        const extracted = {};\r\n        for (const key in instance.ctx) {\r\n            if (isKeyOfType(Comp, key, type)) {\r\n                extracted[key] = instance.ctx[key];\r\n            }\r\n        }\r\n        return extracted;\r\n    }\r\n    function isKeyOfType(Comp, key, type) {\r\n        const opts = Comp[type];\r\n        if ((isArray(opts) && opts.includes(key)) ||\r\n            (isObject(opts) && key in opts)) {\r\n            return true;\r\n        }\r\n        if (Comp.extends && isKeyOfType(Comp.extends, key, type)) {\r\n            return true;\r\n        }\r\n        if (Comp.mixins && Comp.mixins.some(m => isKeyOfType(m, key, type))) {\r\n            return true;\r\n        }\r\n    }\r\n    function genRefFlag(v) {\r\n        if (v._shallow) {\r\n            return `ShallowRef`;\r\n        }\r\n        if (v.effect) {\r\n            return `ComputedRef`;\r\n        }\r\n        return `Ref`;\r\n    }\r\n    /* eslint-disable no-restricted-globals */\r\n    if (window.devtoolsFormatters) {\r\n        window.devtoolsFormatters.push(formatter);\r\n    }\r\n    else {\r\n        window.devtoolsFormatters = [formatter];\r\n    }\r\n}\n\n/**\r\n * Actual implementation\r\n */\r\nfunction renderList(source, renderItem) {\r\n    let ret;\r\n    if (isArray(source) || isString(source)) {\r\n        ret = new Array(source.length);\r\n        for (let i = 0, l = source.length; i < l; i++) {\r\n            ret[i] = renderItem(source[i], i);\r\n        }\r\n    }\r\n    else if (typeof source === 'number') {\r\n        if ((process.env.NODE_ENV !== 'production') && !Number.isInteger(source)) {\r\n            warn(`The v-for range expect an integer value but got ${source}.`);\r\n            return [];\r\n        }\r\n        ret = new Array(source);\r\n        for (let i = 0; i < source; i++) {\r\n            ret[i] = renderItem(i + 1, i);\r\n        }\r\n    }\r\n    else if (isObject(source)) {\r\n        if (source[Symbol.iterator]) {\r\n            ret = Array.from(source, renderItem);\r\n        }\r\n        else {\r\n            const keys = Object.keys(source);\r\n            ret = new Array(keys.length);\r\n            for (let i = 0, l = keys.length; i < l; i++) {\r\n                const key = keys[i];\r\n                ret[i] = renderItem(source[key], key, i);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        ret = [];\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * For prefixing keys in v-on=\"obj\" with \"on\"\r\n * @private\r\n */\r\nfunction toHandlers(obj) {\r\n    const ret = {};\r\n    if ((process.env.NODE_ENV !== 'production') && !isObject(obj)) {\r\n        warn(`v-on with no argument expects an object value.`);\r\n        return ret;\r\n    }\r\n    for (const key in obj) {\r\n        ret[toHandlerKey(key)] = obj[key];\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * Compiler runtime helper for creating dynamic slots object\r\n * @private\r\n */\r\nfunction createSlots(slots, dynamicSlots) {\r\n    for (let i = 0; i < dynamicSlots.length; i++) {\r\n        const slot = dynamicSlots[i];\r\n        // array of dynamic slot generated by <template v-for=\"...\" #[...]>\r\n        if (isArray(slot)) {\r\n            for (let j = 0; j < slot.length; j++) {\r\n                slots[slot[j].name] = slot[j].fn;\r\n            }\r\n        }\r\n        else if (slot) {\r\n            // conditional single slot generated by <template v-if=\"...\" #foo>\r\n            slots[slot.name] = slot.fn;\r\n        }\r\n    }\r\n    return slots;\r\n}\n\n// Core API ------------------------------------------------------------------\r\nconst version = \"3.0.2\";\r\n/**\r\n * SSR utils for \\@vue/server-renderer. Only exposed in cjs builds.\r\n * @internal\r\n */\r\nconst ssrUtils = ( null);\n\nexport { BaseTransition, Comment, Fragment, KeepAlive, Static, Suspense, Teleport, Text, callWithAsyncErrorHandling, callWithErrorHandling, cloneVNode, computed, createBlock, createCommentVNode, createHydrationRenderer, createRenderer, createSlots, createStaticVNode, createTextVNode, createVNode, defineAsyncComponent, defineComponent, devtools, getCurrentInstance, getTransitionRawChildren, h, handleError, initCustomFormatter, inject, isVNode, mergeProps, nextTick, onActivated, onBeforeMount, onBeforeUnmount, onBeforeUpdate, onDeactivated, onErrorCaptured, onMounted, onRenderTracked, onRenderTriggered, onUnmounted, onUpdated, openBlock, popScopeId, provide, pushScopeId, queuePostFlushCb, registerRuntimeCompiler, renderList, renderSlot, resolveComponent, resolveDirective, resolveDynamicComponent, resolveTransitionHooks, setBlockTracking, setDevtoolsHook, setTransitionHooks, ssrContextKey, ssrUtils, toHandlers, transformVNodeArgs, useSSRContext, useTransitionState, version, warn, watch, watchEffect, withCtx, withDirectives, withScopeId };\n","import { camelize, warn, callWithAsyncErrorHandling, getCurrentInstance, onMounted, watchEffect, onUpdated, unref, Fragment, h, BaseTransition, useTransitionState, getTransitionRawChildren, setTransitionHooks, resolveTransitionHooks, createVNode, createRenderer, createHydrationRenderer } from '@vue/runtime-core';\nexport * from '@vue/runtime-core';\nimport { isString, isArray, hyphenate, capitalize, isSpecialBooleanAttr, isOn, isModelListener, isFunction, EMPTY_OBJ, extend, isObject, toNumber, invokeArrayFns, looseIndexOf, isSet, looseEqual, isHTMLTag, isSVGTag } from '@vue/shared';\n\nconst svgNS = 'http://www.w3.org/2000/svg';\r\nconst doc = (typeof document !== 'undefined' ? document : null);\r\nlet tempContainer;\r\nlet tempSVGContainer;\r\nconst nodeOps = {\r\n    insert: (child, parent, anchor) => {\r\n        parent.insertBefore(child, anchor || null);\r\n    },\r\n    remove: child => {\r\n        const parent = child.parentNode;\r\n        if (parent) {\r\n            parent.removeChild(child);\r\n        }\r\n    },\r\n    createElement: (tag, isSVG, is) => isSVG\r\n        ? doc.createElementNS(svgNS, tag)\r\n        : doc.createElement(tag, is ? { is } : undefined),\r\n    createText: text => doc.createTextNode(text),\r\n    createComment: text => doc.createComment(text),\r\n    setText: (node, text) => {\r\n        node.nodeValue = text;\r\n    },\r\n    setElementText: (el, text) => {\r\n        el.textContent = text;\r\n    },\r\n    parentNode: node => node.parentNode,\r\n    nextSibling: node => node.nextSibling,\r\n    querySelector: selector => doc.querySelector(selector),\r\n    setScopeId(el, id) {\r\n        el.setAttribute(id, '');\r\n    },\r\n    cloneNode(el) {\r\n        return el.cloneNode(true);\r\n    },\r\n    // __UNSAFE__\r\n    // Reason: innerHTML.\r\n    // Static content here can only come from compiled templates.\r\n    // As long as the user only uses trusted templates, this is safe.\r\n    insertStaticContent(content, parent, anchor, isSVG) {\r\n        const temp = isSVG\r\n            ? tempSVGContainer ||\r\n                (tempSVGContainer = doc.createElementNS(svgNS, 'svg'))\r\n            : tempContainer || (tempContainer = doc.createElement('div'));\r\n        temp.innerHTML = content;\r\n        const first = temp.firstChild;\r\n        let node = first;\r\n        let last = node;\r\n        while (node) {\r\n            last = node;\r\n            nodeOps.insert(node, parent, anchor);\r\n            node = temp.firstChild;\r\n        }\r\n        return [first, last];\r\n    }\r\n};\n\n// compiler should normalize class + :class bindings on the same element\r\n// into a single binding ['staticClass', dynamic]\r\nfunction patchClass(el, value, isSVG) {\r\n    if (value == null) {\r\n        value = '';\r\n    }\r\n    if (isSVG) {\r\n        el.setAttribute('class', value);\r\n    }\r\n    else {\r\n        // directly setting className should be faster than setAttribute in theory\r\n        // if this is an element during a transition, take the temporary transition\r\n        // classes into account.\r\n        const transitionClasses = el._vtc;\r\n        if (transitionClasses) {\r\n            value = (value\r\n                ? [value, ...transitionClasses]\r\n                : [...transitionClasses]).join(' ');\r\n        }\r\n        el.className = value;\r\n    }\r\n}\n\nfunction patchStyle(el, prev, next) {\r\n    const style = el.style;\r\n    if (!next) {\r\n        el.removeAttribute('style');\r\n    }\r\n    else if (isString(next)) {\r\n        if (prev !== next) {\r\n            style.cssText = next;\r\n        }\r\n    }\r\n    else {\r\n        for (const key in next) {\r\n            setStyle(style, key, next[key]);\r\n        }\r\n        if (prev && !isString(prev)) {\r\n            for (const key in prev) {\r\n                if (next[key] == null) {\r\n                    setStyle(style, key, '');\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nconst importantRE = /\\s*!important$/;\r\nfunction setStyle(style, name, val) {\r\n    if (isArray(val)) {\r\n        val.forEach(v => setStyle(style, name, v));\r\n    }\r\n    else {\r\n        if (name.startsWith('--')) {\r\n            // custom property definition\r\n            style.setProperty(name, val);\r\n        }\r\n        else {\r\n            const prefixed = autoPrefix(style, name);\r\n            if (importantRE.test(val)) {\r\n                // !important\r\n                style.setProperty(hyphenate(prefixed), val.replace(importantRE, ''), 'important');\r\n            }\r\n            else {\r\n                style[prefixed] = val;\r\n            }\r\n        }\r\n    }\r\n}\r\nconst prefixes = ['Webkit', 'Moz', 'ms'];\r\nconst prefixCache = {};\r\nfunction autoPrefix(style, rawName) {\r\n    const cached = prefixCache[rawName];\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    let name = camelize(rawName);\r\n    if (name !== 'filter' && name in style) {\r\n        return (prefixCache[rawName] = name);\r\n    }\r\n    name = capitalize(name);\r\n    for (let i = 0; i < prefixes.length; i++) {\r\n        const prefixed = prefixes[i] + name;\r\n        if (prefixed in style) {\r\n            return (prefixCache[rawName] = prefixed);\r\n        }\r\n    }\r\n    return rawName;\r\n}\n\nconst xlinkNS = 'http://www.w3.org/1999/xlink';\r\nfunction patchAttr(el, key, value, isSVG) {\r\n    if (isSVG && key.startsWith('xlink:')) {\r\n        if (value == null) {\r\n            el.removeAttributeNS(xlinkNS, key.slice(6, key.length));\r\n        }\r\n        else {\r\n            el.setAttributeNS(xlinkNS, key, value);\r\n        }\r\n    }\r\n    else {\r\n        // note we are only checking boolean attributes that don't have a\r\n        // corresponding dom prop of the same name here.\r\n        const isBoolean = isSpecialBooleanAttr(key);\r\n        if (value == null || (isBoolean && value === false)) {\r\n            el.removeAttribute(key);\r\n        }\r\n        else {\r\n            el.setAttribute(key, isBoolean ? '' : value);\r\n        }\r\n    }\r\n}\n\n// __UNSAFE__\r\n// functions. The user is responsible for using them with only trusted content.\r\nfunction patchDOMProp(el, key, value, \r\n// the following args are passed only due to potential innerHTML/textContent\r\n// overriding existing VNodes, in which case the old tree must be properly\r\n// unmounted.\r\nprevChildren, parentComponent, parentSuspense, unmountChildren) {\r\n    if (key === 'innerHTML' || key === 'textContent') {\r\n        if (prevChildren) {\r\n            unmountChildren(prevChildren, parentComponent, parentSuspense);\r\n        }\r\n        el[key] = value == null ? '' : value;\r\n        return;\r\n    }\r\n    if (key === 'value' && el.tagName !== 'PROGRESS') {\r\n        // store value as _value as well since\r\n        // non-string values will be stringified.\r\n        el._value = value;\r\n        const newValue = value == null ? '' : value;\r\n        if (el.value !== newValue) {\r\n            el.value = newValue;\r\n        }\r\n        return;\r\n    }\r\n    if (value === '' && typeof el[key] === 'boolean') {\r\n        // e.g. <select multiple> compiles to { multiple: '' }\r\n        el[key] = true;\r\n    }\r\n    else if (value == null && typeof el[key] === 'string') {\r\n        // e.g. <div :id=\"null\">\r\n        el[key] = '';\r\n        el.removeAttribute(key);\r\n    }\r\n    else {\r\n        // some properties perform value validation and throw\r\n        try {\r\n            el[key] = value;\r\n        }\r\n        catch (e) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Failed setting prop \"${key}\" on <${el.tagName.toLowerCase()}>: ` +\r\n                    `value ${value} is invalid.`, e);\r\n            }\r\n        }\r\n    }\r\n}\n\n// Async edge case fix requires storing an event listener's attach timestamp.\r\nlet _getNow = Date.now;\r\n// Determine what event timestamp the browser is using. Annoyingly, the\r\n// timestamp can either be hi-res (relative to page load) or low-res\r\n// (relative to UNIX epoch), so in order to compare time we have to use the\r\n// same timestamp type when saving the flush timestamp.\r\nif (typeof document !== 'undefined' &&\r\n    _getNow() > document.createEvent('Event').timeStamp) {\r\n    // if the low-res timestamp which is bigger than the event timestamp\r\n    // (which is evaluated AFTER) it means the event is using a hi-res timestamp,\r\n    // and we need to use the hi-res version for event listeners as well.\r\n    _getNow = () => performance.now();\r\n}\r\n// To avoid the overhead of repeatedly calling performance.now(), we cache\r\n// and use the same timestamp for all event listeners attached in the same tick.\r\nlet cachedNow = 0;\r\nconst p = Promise.resolve();\r\nconst reset = () => {\r\n    cachedNow = 0;\r\n};\r\nconst getNow = () => cachedNow || (p.then(reset), (cachedNow = _getNow()));\r\nfunction addEventListener(el, event, handler, options) {\r\n    el.addEventListener(event, handler, options);\r\n}\r\nfunction removeEventListener(el, event, handler, options) {\r\n    el.removeEventListener(event, handler, options);\r\n}\r\nfunction patchEvent(el, rawName, prevValue, nextValue, instance = null) {\r\n    // vei = vue event invokers\r\n    const invokers = el._vei || (el._vei = {});\r\n    const existingInvoker = invokers[rawName];\r\n    if (nextValue && existingInvoker) {\r\n        // patch\r\n        existingInvoker.value = nextValue;\r\n    }\r\n    else {\r\n        const [name, options] = parseName(rawName);\r\n        if (nextValue) {\r\n            // add\r\n            const invoker = (invokers[rawName] = createInvoker(nextValue, instance));\r\n            addEventListener(el, name, invoker, options);\r\n        }\r\n        else if (existingInvoker) {\r\n            // remove\r\n            removeEventListener(el, name, existingInvoker, options);\r\n            invokers[rawName] = undefined;\r\n        }\r\n    }\r\n}\r\nconst optionsModifierRE = /(?:Once|Passive|Capture)$/;\r\nfunction parseName(name) {\r\n    let options;\r\n    if (optionsModifierRE.test(name)) {\r\n        options = {};\r\n        let m;\r\n        while ((m = name.match(optionsModifierRE))) {\r\n            name = name.slice(0, name.length - m[0].length);\r\n            options[m[0].toLowerCase()] = true;\r\n        }\r\n    }\r\n    return [name.slice(2).toLowerCase(), options];\r\n}\r\nfunction createInvoker(initialValue, instance) {\r\n    const invoker = (e) => {\r\n        // async edge case #6566: inner click event triggers patch, event handler\r\n        // attached to outer element during patch, and triggered again. This\r\n        // happens because browsers fire microtask ticks between event propagation.\r\n        // the solution is simple: we save the timestamp when a handler is attached,\r\n        // and the handler would only fire if the event passed to it was fired\r\n        // AFTER it was attached.\r\n        const timeStamp = e.timeStamp || _getNow();\r\n        if (timeStamp >= invoker.attached - 1) {\r\n            callWithAsyncErrorHandling(patchStopImmediatePropagation(e, invoker.value), instance, 5 /* NATIVE_EVENT_HANDLER */, [e]);\r\n        }\r\n    };\r\n    invoker.value = initialValue;\r\n    invoker.attached = getNow();\r\n    return invoker;\r\n}\r\nfunction patchStopImmediatePropagation(e, value) {\r\n    if (isArray(value)) {\r\n        const originalStop = e.stopImmediatePropagation;\r\n        e.stopImmediatePropagation = () => {\r\n            originalStop.call(e);\r\n            e._stopped = true;\r\n        };\r\n        return value.map(fn => (e) => !e._stopped && fn(e));\r\n    }\r\n    else {\r\n        return value;\r\n    }\r\n}\n\nconst nativeOnRE = /^on[a-z]/;\r\nconst forcePatchProp = (_, key) => key === 'value';\r\nconst patchProp = (el, key, prevValue, nextValue, isSVG = false, prevChildren, parentComponent, parentSuspense, unmountChildren) => {\r\n    switch (key) {\r\n        // special\r\n        case 'class':\r\n            patchClass(el, nextValue, isSVG);\r\n            break;\r\n        case 'style':\r\n            patchStyle(el, prevValue, nextValue);\r\n            break;\r\n        default:\r\n            if (isOn(key)) {\r\n                // ignore v-model listeners\r\n                if (!isModelListener(key)) {\r\n                    patchEvent(el, key, prevValue, nextValue, parentComponent);\r\n                }\r\n            }\r\n            else if (shouldSetAsProp(el, key, nextValue, isSVG)) {\r\n                patchDOMProp(el, key, nextValue, prevChildren, parentComponent, parentSuspense, unmountChildren);\r\n            }\r\n            else {\r\n                // special case for <input v-model type=\"checkbox\"> with\r\n                // :true-value & :false-value\r\n                // store value as dom properties since non-string values will be\r\n                // stringified.\r\n                if (key === 'true-value') {\r\n                    el._trueValue = nextValue;\r\n                }\r\n                else if (key === 'false-value') {\r\n                    el._falseValue = nextValue;\r\n                }\r\n                patchAttr(el, key, nextValue, isSVG);\r\n            }\r\n            break;\r\n    }\r\n};\r\nfunction shouldSetAsProp(el, key, value, isSVG) {\r\n    if (isSVG) {\r\n        // most keys must be set as attribute on svg elements to work\r\n        // ...except innerHTML\r\n        if (key === 'innerHTML') {\r\n            return true;\r\n        }\r\n        // or native onclick with function values\r\n        if (key in el && nativeOnRE.test(key) && isFunction(value)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    // spellcheck and draggable are numerated attrs, however their\r\n    // corresponding DOM properties are actually booleans - this leads to\r\n    // setting it with a string \"false\" value leading it to be coerced to\r\n    // `true`, so we need to always treat them as attributes.\r\n    // Note that `contentEditable` doesn't have this problem: its DOM\r\n    // property is also enumerated string values.\r\n    if (key === 'spellcheck' || key === 'draggable') {\r\n        return false;\r\n    }\r\n    // #1787 form as an attribute must be a string, while it accepts an Element as\r\n    // a prop\r\n    if (key === 'form' && typeof value === 'string') {\r\n        return false;\r\n    }\r\n    // #1526 <input list> must be set as attribute\r\n    if (key === 'list' && el.tagName === 'INPUT') {\r\n        return false;\r\n    }\r\n    // native onclick with string value, must be set as attribute\r\n    if (nativeOnRE.test(key) && isString(value)) {\r\n        return false;\r\n    }\r\n    return key in el;\r\n}\n\nfunction useCssModule(name = '$style') {\r\n    /* istanbul ignore else */\r\n    {\r\n        const instance = getCurrentInstance();\r\n        if (!instance) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`useCssModule must be called inside setup()`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        const modules = instance.type.__cssModules;\r\n        if (!modules) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`Current instance does not have CSS modules injected.`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        const mod = modules[name];\r\n        if (!mod) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Current instance does not have CSS module named \"${name}\".`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        return mod;\r\n    }\r\n}\n\nfunction useCssVars(getter, scoped = false) {\r\n    const instance = getCurrentInstance();\r\n    /* istanbul ignore next */\r\n    if (!instance) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`useCssVars is called without current active component instance.`);\r\n        return;\r\n    }\r\n    const prefix = scoped && instance.type.__scopeId\r\n        ? `${instance.type.__scopeId.replace(/^data-v-/, '')}-`\r\n        : ``;\r\n    const setVars = () => setVarsOnVNode(instance.subTree, getter(instance.proxy), prefix);\r\n    onMounted(() => watchEffect(setVars));\r\n    onUpdated(setVars);\r\n}\r\nfunction setVarsOnVNode(vnode, vars, prefix) {\r\n    if ( vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n        const suspense = vnode.suspense;\r\n        vnode = suspense.activeBranch;\r\n        if (suspense.pendingBranch && !suspense.isHydrating) {\r\n            suspense.effects.push(() => {\r\n                setVarsOnVNode(suspense.activeBranch, vars, prefix);\r\n            });\r\n        }\r\n    }\r\n    // drill down HOCs until it's a non-component vnode\r\n    while (vnode.component) {\r\n        vnode = vnode.component.subTree;\r\n    }\r\n    if (vnode.shapeFlag & 1 /* ELEMENT */ && vnode.el) {\r\n        const style = vnode.el.style;\r\n        for (const key in vars) {\r\n            style.setProperty(`--${prefix}${key}`, unref(vars[key]));\r\n        }\r\n    }\r\n    else if (vnode.type === Fragment) {\r\n        vnode.children.forEach(c => setVarsOnVNode(c, vars, prefix));\r\n    }\r\n}\n\nconst TRANSITION = 'transition';\r\nconst ANIMATION = 'animation';\r\n// DOM Transition is a higher-order-component based on the platform-agnostic\r\n// base Transition component, with DOM-specific logic.\r\nconst Transition = (props, { slots }) => h(BaseTransition, resolveTransitionProps(props), slots);\r\nTransition.displayName = 'Transition';\r\nconst DOMTransitionPropsValidators = {\r\n    name: String,\r\n    type: String,\r\n    css: {\r\n        type: Boolean,\r\n        default: true\r\n    },\r\n    duration: [String, Number, Object],\r\n    enterFromClass: String,\r\n    enterActiveClass: String,\r\n    enterToClass: String,\r\n    appearFromClass: String,\r\n    appearActiveClass: String,\r\n    appearToClass: String,\r\n    leaveFromClass: String,\r\n    leaveActiveClass: String,\r\n    leaveToClass: String\r\n};\r\nconst TransitionPropsValidators = (Transition.props = /*#__PURE__*/ extend({}, BaseTransition.props, DOMTransitionPropsValidators));\r\nfunction resolveTransitionProps(rawProps) {\r\n    let { name = 'v', type, css = true, duration, enterFromClass = `${name}-enter-from`, enterActiveClass = `${name}-enter-active`, enterToClass = `${name}-enter-to`, appearFromClass = enterFromClass, appearActiveClass = enterActiveClass, appearToClass = enterToClass, leaveFromClass = `${name}-leave-from`, leaveActiveClass = `${name}-leave-active`, leaveToClass = `${name}-leave-to` } = rawProps;\r\n    const baseProps = {};\r\n    for (const key in rawProps) {\r\n        if (!(key in DOMTransitionPropsValidators)) {\r\n            baseProps[key] = rawProps[key];\r\n        }\r\n    }\r\n    if (!css) {\r\n        return baseProps;\r\n    }\r\n    const durations = normalizeDuration(duration);\r\n    const enterDuration = durations && durations[0];\r\n    const leaveDuration = durations && durations[1];\r\n    const { onBeforeEnter, onEnter, onEnterCancelled, onLeave, onLeaveCancelled, onBeforeAppear = onBeforeEnter, onAppear = onEnter, onAppearCancelled = onEnterCancelled } = baseProps;\r\n    const finishEnter = (el, isAppear, done) => {\r\n        removeTransitionClass(el, isAppear ? appearToClass : enterToClass);\r\n        removeTransitionClass(el, isAppear ? appearActiveClass : enterActiveClass);\r\n        done && done();\r\n    };\r\n    const finishLeave = (el, done) => {\r\n        removeTransitionClass(el, leaveToClass);\r\n        removeTransitionClass(el, leaveActiveClass);\r\n        done && done();\r\n    };\r\n    const makeEnterHook = (isAppear) => {\r\n        return (el, done) => {\r\n            const hook = isAppear ? onAppear : onEnter;\r\n            const resolve = () => finishEnter(el, isAppear, done);\r\n            hook && hook(el, resolve);\r\n            nextFrame(() => {\r\n                removeTransitionClass(el, isAppear ? appearFromClass : enterFromClass);\r\n                addTransitionClass(el, isAppear ? appearToClass : enterToClass);\r\n                if (!(hook && hook.length > 1)) {\r\n                    if (enterDuration) {\r\n                        setTimeout(resolve, enterDuration);\r\n                    }\r\n                    else {\r\n                        whenTransitionEnds(el, type, resolve);\r\n                    }\r\n                }\r\n            });\r\n        };\r\n    };\r\n    return extend(baseProps, {\r\n        onBeforeEnter(el) {\r\n            onBeforeEnter && onBeforeEnter(el);\r\n            addTransitionClass(el, enterActiveClass);\r\n            addTransitionClass(el, enterFromClass);\r\n        },\r\n        onBeforeAppear(el) {\r\n            onBeforeAppear && onBeforeAppear(el);\r\n            addTransitionClass(el, appearActiveClass);\r\n            addTransitionClass(el, appearFromClass);\r\n        },\r\n        onEnter: makeEnterHook(false),\r\n        onAppear: makeEnterHook(true),\r\n        onLeave(el, done) {\r\n            const resolve = () => finishLeave(el, done);\r\n            addTransitionClass(el, leaveActiveClass);\r\n            addTransitionClass(el, leaveFromClass);\r\n            nextFrame(() => {\r\n                removeTransitionClass(el, leaveFromClass);\r\n                addTransitionClass(el, leaveToClass);\r\n                if (!(onLeave && onLeave.length > 1)) {\r\n                    if (leaveDuration) {\r\n                        setTimeout(resolve, leaveDuration);\r\n                    }\r\n                    else {\r\n                        whenTransitionEnds(el, type, resolve);\r\n                    }\r\n                }\r\n            });\r\n            onLeave && onLeave(el, resolve);\r\n        },\r\n        onEnterCancelled(el) {\r\n            finishEnter(el, false);\r\n            onEnterCancelled && onEnterCancelled(el);\r\n        },\r\n        onAppearCancelled(el) {\r\n            finishEnter(el, true);\r\n            onAppearCancelled && onAppearCancelled(el);\r\n        },\r\n        onLeaveCancelled(el) {\r\n            finishLeave(el);\r\n            onLeaveCancelled && onLeaveCancelled(el);\r\n        }\r\n    });\r\n}\r\nfunction normalizeDuration(duration) {\r\n    if (duration == null) {\r\n        return null;\r\n    }\r\n    else if (isObject(duration)) {\r\n        return [NumberOf(duration.enter), NumberOf(duration.leave)];\r\n    }\r\n    else {\r\n        const n = NumberOf(duration);\r\n        return [n, n];\r\n    }\r\n}\r\nfunction NumberOf(val) {\r\n    const res = toNumber(val);\r\n    if ((process.env.NODE_ENV !== 'production'))\r\n        validateDuration(res);\r\n    return res;\r\n}\r\nfunction validateDuration(val) {\r\n    if (typeof val !== 'number') {\r\n        warn(`<transition> explicit duration is not a valid number - ` +\r\n            `got ${JSON.stringify(val)}.`);\r\n    }\r\n    else if (isNaN(val)) {\r\n        warn(`<transition> explicit duration is NaN - ` +\r\n            'the duration expression might be incorrect.');\r\n    }\r\n}\r\nfunction addTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.add(c));\r\n    (el._vtc ||\r\n        (el._vtc = new Set())).add(cls);\r\n}\r\nfunction removeTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.remove(c));\r\n    const { _vtc } = el;\r\n    if (_vtc) {\r\n        _vtc.delete(cls);\r\n        if (!_vtc.size) {\r\n            el._vtc = undefined;\r\n        }\r\n    }\r\n}\r\nfunction nextFrame(cb) {\r\n    requestAnimationFrame(() => {\r\n        requestAnimationFrame(cb);\r\n    });\r\n}\r\nfunction whenTransitionEnds(el, expectedType, cb) {\r\n    const { type, timeout, propCount } = getTransitionInfo(el, expectedType);\r\n    if (!type) {\r\n        return cb();\r\n    }\r\n    const endEvent = type + 'end';\r\n    let ended = 0;\r\n    const end = () => {\r\n        el.removeEventListener(endEvent, onEnd);\r\n        cb();\r\n    };\r\n    const onEnd = (e) => {\r\n        if (e.target === el) {\r\n            if (++ended >= propCount) {\r\n                end();\r\n            }\r\n        }\r\n    };\r\n    setTimeout(() => {\r\n        if (ended < propCount) {\r\n            end();\r\n        }\r\n    }, timeout + 1);\r\n    el.addEventListener(endEvent, onEnd);\r\n}\r\nfunction getTransitionInfo(el, expectedType) {\r\n    const styles = window.getComputedStyle(el);\r\n    // JSDOM may return undefined for transition properties\r\n    const getStyleProperties = (key) => (styles[key] || '').split(', ');\r\n    const transitionDelays = getStyleProperties(TRANSITION + 'Delay');\r\n    const transitionDurations = getStyleProperties(TRANSITION + 'Duration');\r\n    const transitionTimeout = getTimeout(transitionDelays, transitionDurations);\r\n    const animationDelays = getStyleProperties(ANIMATION + 'Delay');\r\n    const animationDurations = getStyleProperties(ANIMATION + 'Duration');\r\n    const animationTimeout = getTimeout(animationDelays, animationDurations);\r\n    let type = null;\r\n    let timeout = 0;\r\n    let propCount = 0;\r\n    /* istanbul ignore if */\r\n    if (expectedType === TRANSITION) {\r\n        if (transitionTimeout > 0) {\r\n            type = TRANSITION;\r\n            timeout = transitionTimeout;\r\n            propCount = transitionDurations.length;\r\n        }\r\n    }\r\n    else if (expectedType === ANIMATION) {\r\n        if (animationTimeout > 0) {\r\n            type = ANIMATION;\r\n            timeout = animationTimeout;\r\n            propCount = animationDurations.length;\r\n        }\r\n    }\r\n    else {\r\n        timeout = Math.max(transitionTimeout, animationTimeout);\r\n        type =\r\n            timeout > 0\r\n                ? transitionTimeout > animationTimeout\r\n                    ? TRANSITION\r\n                    : ANIMATION\r\n                : null;\r\n        propCount = type\r\n            ? type === TRANSITION\r\n                ? transitionDurations.length\r\n                : animationDurations.length\r\n            : 0;\r\n    }\r\n    const hasTransform = type === TRANSITION &&\r\n        /\\b(transform|all)(,|$)/.test(styles[TRANSITION + 'Property']);\r\n    return {\r\n        type,\r\n        timeout,\r\n        propCount,\r\n        hasTransform\r\n    };\r\n}\r\nfunction getTimeout(delays, durations) {\r\n    while (delays.length < durations.length) {\r\n        delays = delays.concat(delays);\r\n    }\r\n    return Math.max(...durations.map((d, i) => toMs(d) + toMs(delays[i])));\r\n}\r\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer\r\n// numbers in a locale-dependent way, using a comma instead of a dot.\r\n// If comma is not replaced with a dot, the input will be rounded down\r\n// (i.e. acting as a floor function) causing unexpected behaviors\r\nfunction toMs(s) {\r\n    return Number(s.slice(0, -1).replace(',', '.')) * 1000;\r\n}\n\nfunction toRaw(observed) {\r\n    return ((observed && toRaw(observed[\"__v_raw\" /* RAW */])) || observed);\r\n}\n\nconst positionMap = new WeakMap();\r\nconst newPositionMap = new WeakMap();\r\nconst TransitionGroupImpl = {\r\n    name: 'TransitionGroup',\r\n    props: /*#__PURE__*/ extend({}, TransitionPropsValidators, {\r\n        tag: String,\r\n        moveClass: String\r\n    }),\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        let prevChildren;\r\n        let children;\r\n        onUpdated(() => {\r\n            // children is guaranteed to exist after initial render\r\n            if (!prevChildren.length) {\r\n                return;\r\n            }\r\n            const moveClass = props.moveClass || `${props.name || 'v'}-move`;\r\n            if (!hasCSSTransform(prevChildren[0].el, instance.vnode.el, moveClass)) {\r\n                return;\r\n            }\r\n            // we divide the work into three loops to avoid mixing DOM reads and writes\r\n            // in each iteration - which helps prevent layout thrashing.\r\n            prevChildren.forEach(callPendingCbs);\r\n            prevChildren.forEach(recordPosition);\r\n            const movedChildren = prevChildren.filter(applyTranslation);\r\n            // force reflow to put everything in position\r\n            forceReflow();\r\n            movedChildren.forEach(c => {\r\n                const el = c.el;\r\n                const style = el.style;\r\n                addTransitionClass(el, moveClass);\r\n                style.transform = style.webkitTransform = style.transitionDuration = '';\r\n                const cb = (el._moveCb = (e) => {\r\n                    if (e && e.target !== el) {\r\n                        return;\r\n                    }\r\n                    if (!e || /transform$/.test(e.propertyName)) {\r\n                        el.removeEventListener('transitionend', cb);\r\n                        el._moveCb = null;\r\n                        removeTransitionClass(el, moveClass);\r\n                    }\r\n                });\r\n                el.addEventListener('transitionend', cb);\r\n            });\r\n        });\r\n        return () => {\r\n            const rawProps = toRaw(props);\r\n            const cssTransitionProps = resolveTransitionProps(rawProps);\r\n            const tag = rawProps.tag || Fragment;\r\n            prevChildren = children;\r\n            children = slots.default ? getTransitionRawChildren(slots.default()) : [];\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (child.key != null) {\r\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`<TransitionGroup> children must be keyed.`);\r\n                }\r\n            }\r\n            if (prevChildren) {\r\n                for (let i = 0; i < prevChildren.length; i++) {\r\n                    const child = prevChildren[i];\r\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                    positionMap.set(child, child.el.getBoundingClientRect());\r\n                }\r\n            }\r\n            return createVNode(tag, null, children);\r\n        };\r\n    }\r\n};\r\nconst TransitionGroup = TransitionGroupImpl;\r\nfunction callPendingCbs(c) {\r\n    const el = c.el;\r\n    if (el._moveCb) {\r\n        el._moveCb();\r\n    }\r\n    if (el._enterCb) {\r\n        el._enterCb();\r\n    }\r\n}\r\nfunction recordPosition(c) {\r\n    newPositionMap.set(c, c.el.getBoundingClientRect());\r\n}\r\nfunction applyTranslation(c) {\r\n    const oldPos = positionMap.get(c);\r\n    const newPos = newPositionMap.get(c);\r\n    const dx = oldPos.left - newPos.left;\r\n    const dy = oldPos.top - newPos.top;\r\n    if (dx || dy) {\r\n        const s = c.el.style;\r\n        s.transform = s.webkitTransform = `translate(${dx}px,${dy}px)`;\r\n        s.transitionDuration = '0s';\r\n        return c;\r\n    }\r\n}\r\n// this is put in a dedicated function to avoid the line from being treeshaken\r\nfunction forceReflow() {\r\n    return document.body.offsetHeight;\r\n}\r\nfunction hasCSSTransform(el, root, moveClass) {\r\n    // Detect whether an element with the move class applied has\r\n    // CSS transitions. Since the element may be inside an entering\r\n    // transition at this very moment, we make a clone of it and remove\r\n    // all other transition classes applied to ensure only the move class\r\n    // is applied.\r\n    const clone = el.cloneNode();\r\n    if (el._vtc) {\r\n        el._vtc.forEach(cls => {\r\n            cls.split(/\\s+/).forEach(c => c && clone.classList.remove(c));\r\n        });\r\n    }\r\n    moveClass.split(/\\s+/).forEach(c => c && clone.classList.add(c));\r\n    clone.style.display = 'none';\r\n    const container = (root.nodeType === 1\r\n        ? root\r\n        : root.parentNode);\r\n    container.appendChild(clone);\r\n    const { hasTransform } = getTransitionInfo(clone);\r\n    container.removeChild(clone);\r\n    return hasTransform;\r\n}\n\nconst getModelAssigner = (vnode) => {\r\n    const fn = vnode.props['onUpdate:modelValue'];\r\n    return isArray(fn) ? value => invokeArrayFns(fn, value) : fn;\r\n};\r\nfunction onCompositionStart(e) {\r\n    e.target.composing = true;\r\n}\r\nfunction onCompositionEnd(e) {\r\n    const target = e.target;\r\n    if (target.composing) {\r\n        target.composing = false;\r\n        trigger(target, 'input');\r\n    }\r\n}\r\nfunction trigger(el, type) {\r\n    const e = document.createEvent('HTMLEvents');\r\n    e.initEvent(type, true, true);\r\n    el.dispatchEvent(e);\r\n}\r\n// We are exporting the v-model runtime directly as vnode hooks so that it can\r\n// be tree-shaken in case v-model is never used.\r\nconst vModelText = {\r\n    created(el, { modifiers: { lazy, trim, number } }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        const castToNumber = number || el.type === 'number';\r\n        addEventListener(el, lazy ? 'change' : 'input', e => {\r\n            if (e.target.composing)\r\n                return;\r\n            let domValue = el.value;\r\n            if (trim) {\r\n                domValue = domValue.trim();\r\n            }\r\n            else if (castToNumber) {\r\n                domValue = toNumber(domValue);\r\n            }\r\n            el._assign(domValue);\r\n        });\r\n        if (trim) {\r\n            addEventListener(el, 'change', () => {\r\n                el.value = el.value.trim();\r\n            });\r\n        }\r\n        if (!lazy) {\r\n            addEventListener(el, 'compositionstart', onCompositionStart);\r\n            addEventListener(el, 'compositionend', onCompositionEnd);\r\n            // Safari < 10.2 & UIWebView doesn't fire compositionend when\r\n            // switching focus before confirming composition choice\r\n            // this also fixes the issue where some browsers e.g. iOS Chrome\r\n            // fires \"change\" instead of \"input\" on autocomplete.\r\n            addEventListener(el, 'change', onCompositionEnd);\r\n        }\r\n    },\r\n    // set value on mounted so it's after min/max for type=\"range\"\r\n    mounted(el, { value }) {\r\n        el.value = value == null ? '' : value;\r\n    },\r\n    beforeUpdate(el, { value, modifiers: { trim, number } }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        // avoid clearing unresolved text. #2302\r\n        if (el.composing)\r\n            return;\r\n        if (document.activeElement === el) {\r\n            if (trim && el.value.trim() === value) {\r\n                return;\r\n            }\r\n            if ((number || el.type === 'number') && toNumber(el.value) === value) {\r\n                return;\r\n            }\r\n        }\r\n        const newValue = value == null ? '' : value;\r\n        if (el.value !== newValue) {\r\n            el.value = newValue;\r\n        }\r\n    }\r\n};\r\nconst vModelCheckbox = {\r\n    created(el, binding, vnode) {\r\n        setChecked(el, binding, vnode);\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            const modelValue = el._modelValue;\r\n            const elementValue = getValue(el);\r\n            const checked = el.checked;\r\n            const assign = el._assign;\r\n            if (isArray(modelValue)) {\r\n                const index = looseIndexOf(modelValue, elementValue);\r\n                const found = index !== -1;\r\n                if (checked && !found) {\r\n                    assign(modelValue.concat(elementValue));\r\n                }\r\n                else if (!checked && found) {\r\n                    const filtered = [...modelValue];\r\n                    filtered.splice(index, 1);\r\n                    assign(filtered);\r\n                }\r\n            }\r\n            else if (isSet(modelValue)) {\r\n                if (checked) {\r\n                    modelValue.add(elementValue);\r\n                }\r\n                else {\r\n                    modelValue.delete(elementValue);\r\n                }\r\n            }\r\n            else {\r\n                assign(getCheckboxValue(el, checked));\r\n            }\r\n        });\r\n    },\r\n    beforeUpdate(el, binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        setChecked(el, binding, vnode);\r\n    }\r\n};\r\nfunction setChecked(el, { value, oldValue }, vnode) {\r\n    el._modelValue = value;\r\n    if (isArray(value)) {\r\n        el.checked = looseIndexOf(value, vnode.props.value) > -1;\r\n    }\r\n    else if (isSet(value)) {\r\n        el.checked = value.has(vnode.props.value);\r\n    }\r\n    else if (value !== oldValue) {\r\n        el.checked = looseEqual(value, getCheckboxValue(el, true));\r\n    }\r\n}\r\nconst vModelRadio = {\r\n    created(el, { value }, vnode) {\r\n        el.checked = looseEqual(value, vnode.props.value);\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            el._assign(getValue(el));\r\n        });\r\n    },\r\n    beforeUpdate(el, { value, oldValue }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        if (value !== oldValue) {\r\n            el.checked = looseEqual(value, vnode.props.value);\r\n        }\r\n    }\r\n};\r\nconst vModelSelect = {\r\n    created(el, { modifiers: { number } }, vnode) {\r\n        addEventListener(el, 'change', () => {\r\n            const selectedVal = Array.prototype.filter\r\n                .call(el.options, (o) => o.selected)\r\n                .map((o) => number ? toNumber(getValue(o)) : getValue(o));\r\n            el._assign(el.multiple ? selectedVal : selectedVal[0]);\r\n        });\r\n        el._assign = getModelAssigner(vnode);\r\n    },\r\n    // set value in mounted & updated because <select> relies on its children\r\n    // <option>s.\r\n    mounted(el, { value }) {\r\n        setSelected(el, value);\r\n    },\r\n    beforeUpdate(el, _binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n    },\r\n    updated(el, { value }) {\r\n        setSelected(el, value);\r\n    }\r\n};\r\nfunction setSelected(el, value) {\r\n    const isMultiple = el.multiple;\r\n    if (isMultiple && !isArray(value) && !isSet(value)) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`<select multiple v-model> expects an Array or Set value for its binding, ` +\r\n                `but got ${Object.prototype.toString.call(value).slice(8, -1)}.`);\r\n        return;\r\n    }\r\n    for (let i = 0, l = el.options.length; i < l; i++) {\r\n        const option = el.options[i];\r\n        const optionValue = getValue(option);\r\n        if (isMultiple) {\r\n            if (isArray(value)) {\r\n                option.selected = looseIndexOf(value, optionValue) > -1;\r\n            }\r\n            else {\r\n                option.selected = value.has(optionValue);\r\n            }\r\n        }\r\n        else {\r\n            if (looseEqual(getValue(option), value)) {\r\n                el.selectedIndex = i;\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    if (!isMultiple) {\r\n        el.selectedIndex = -1;\r\n    }\r\n}\r\n// retrieve raw value set via :value bindings\r\nfunction getValue(el) {\r\n    return '_value' in el ? el._value : el.value;\r\n}\r\n// retrieve raw value for true-value and false-value set via :true-value or :false-value bindings\r\nfunction getCheckboxValue(el, checked) {\r\n    const key = checked ? '_trueValue' : '_falseValue';\r\n    return key in el ? el[key] : checked;\r\n}\r\nconst vModelDynamic = {\r\n    created(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'created');\r\n    },\r\n    mounted(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'mounted');\r\n    },\r\n    beforeUpdate(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'beforeUpdate');\r\n    },\r\n    updated(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'updated');\r\n    }\r\n};\r\nfunction callModelHook(el, binding, vnode, prevVNode, hook) {\r\n    let modelToUse;\r\n    switch (el.tagName) {\r\n        case 'SELECT':\r\n            modelToUse = vModelSelect;\r\n            break;\r\n        case 'TEXTAREA':\r\n            modelToUse = vModelText;\r\n            break;\r\n        default:\r\n            switch (vnode.props && vnode.props.type) {\r\n                case 'checkbox':\r\n                    modelToUse = vModelCheckbox;\r\n                    break;\r\n                case 'radio':\r\n                    modelToUse = vModelRadio;\r\n                    break;\r\n                default:\r\n                    modelToUse = vModelText;\r\n            }\r\n    }\r\n    const fn = modelToUse[hook];\r\n    fn && fn(el, binding, vnode, prevVNode);\r\n}\n\nconst systemModifiers = ['ctrl', 'shift', 'alt', 'meta'];\r\nconst modifierGuards = {\r\n    stop: e => e.stopPropagation(),\r\n    prevent: e => e.preventDefault(),\r\n    self: e => e.target !== e.currentTarget,\r\n    ctrl: e => !e.ctrlKey,\r\n    shift: e => !e.shiftKey,\r\n    alt: e => !e.altKey,\r\n    meta: e => !e.metaKey,\r\n    left: e => 'button' in e && e.button !== 0,\r\n    middle: e => 'button' in e && e.button !== 1,\r\n    right: e => 'button' in e && e.button !== 2,\r\n    exact: (e, modifiers) => systemModifiers.some(m => e[`${m}Key`] && !modifiers.includes(m))\r\n};\r\n/**\r\n * @private\r\n */\r\nconst withModifiers = (fn, modifiers) => {\r\n    return (event, ...args) => {\r\n        for (let i = 0; i < modifiers.length; i++) {\r\n            const guard = modifierGuards[modifiers[i]];\r\n            if (guard && guard(event, modifiers))\r\n                return;\r\n        }\r\n        return fn(event, ...args);\r\n    };\r\n};\r\n// Kept for 2.x compat.\r\n// Note: IE11 compat for `spacebar` and `del` is removed for now.\r\nconst keyNames = {\r\n    esc: 'escape',\r\n    space: ' ',\r\n    up: 'arrow-up',\r\n    left: 'arrow-left',\r\n    right: 'arrow-right',\r\n    down: 'arrow-down',\r\n    delete: 'backspace'\r\n};\r\n/**\r\n * @private\r\n */\r\nconst withKeys = (fn, modifiers) => {\r\n    return (event) => {\r\n        if (!('key' in event))\r\n            return;\r\n        const eventKey = hyphenate(event.key);\r\n        if (\r\n        // None of the provided key modifiers match the current event key\r\n        !modifiers.some(k => k === eventKey || keyNames[k] === eventKey)) {\r\n            return;\r\n        }\r\n        return fn(event);\r\n    };\r\n};\n\nconst vShow = {\r\n    beforeMount(el, { value }, { transition }) {\r\n        el._vod = el.style.display === 'none' ? '' : el.style.display;\r\n        if (transition && value) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    mounted(el, { value }, { transition }) {\r\n        if (transition && value) {\r\n            transition.enter(el);\r\n        }\r\n    },\r\n    updated(el, { value, oldValue }, { transition }) {\r\n        if (!value === !oldValue)\r\n            return;\r\n        if (transition) {\r\n            if (value) {\r\n                transition.beforeEnter(el);\r\n                setDisplay(el, true);\r\n                transition.enter(el);\r\n            }\r\n            else {\r\n                transition.leave(el, () => {\r\n                    setDisplay(el, false);\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    beforeUnmount(el, { value }) {\r\n        setDisplay(el, value);\r\n    }\r\n};\r\nfunction setDisplay(el, value) {\r\n    el.style.display = value ? el._vod : 'none';\r\n}\n\nconst rendererOptions = extend({ patchProp, forcePatchProp }, nodeOps);\r\n// lazy create the renderer - this makes core renderer logic tree-shakable\r\n// in case the user only imports reactivity utilities from Vue.\r\nlet renderer;\r\nlet enabledHydration = false;\r\nfunction ensureRenderer() {\r\n    return renderer || (renderer = createRenderer(rendererOptions));\r\n}\r\nfunction ensureHydrationRenderer() {\r\n    renderer = enabledHydration\r\n        ? renderer\r\n        : createHydrationRenderer(rendererOptions);\r\n    enabledHydration = true;\r\n    return renderer;\r\n}\r\n// use explicit type casts here to avoid import() calls in rolled-up d.ts\r\nconst render = ((...args) => {\r\n    ensureRenderer().render(...args);\r\n});\r\nconst hydrate = ((...args) => {\r\n    ensureHydrationRenderer().hydrate(...args);\r\n});\r\nconst createApp = ((...args) => {\r\n    const app = ensureRenderer().createApp(...args);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        injectNativeTagCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (!container)\r\n            return;\r\n        const component = app._component;\r\n        if (!isFunction(component) && !component.render && !component.template) {\r\n            component.template = container.innerHTML;\r\n        }\r\n        // clear content before mounting\r\n        container.innerHTML = '';\r\n        const proxy = mount(container);\r\n        container.removeAttribute('v-cloak');\r\n        container.setAttribute('data-v-app', '');\r\n        return proxy;\r\n    };\r\n    return app;\r\n});\r\nconst createSSRApp = ((...args) => {\r\n    const app = ensureHydrationRenderer().createApp(...args);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        injectNativeTagCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (container) {\r\n            return mount(container, true);\r\n        }\r\n    };\r\n    return app;\r\n});\r\nfunction injectNativeTagCheck(app) {\r\n    // Inject `isNativeTag`\r\n    // this is used for component name validation (dev only)\r\n    Object.defineProperty(app.config, 'isNativeTag', {\r\n        value: (tag) => isHTMLTag(tag) || isSVGTag(tag),\r\n        writable: false\r\n    });\r\n}\r\nfunction normalizeContainer(container) {\r\n    if (isString(container)) {\r\n        const res = document.querySelector(container);\r\n        if ((process.env.NODE_ENV !== 'production') && !res) {\r\n            warn(`Failed to mount app: mount target selector returned null.`);\r\n        }\r\n        return res;\r\n    }\r\n    return container;\r\n}\n\nexport { Transition, TransitionGroup, createApp, createSSRApp, hydrate, render, useCssModule, useCssVars, vModelCheckbox, vModelDynamic, vModelRadio, vModelSelect, vModelText, vShow, withKeys, withModifiers };\n","// @flow\n\nimport { type Options } from \"./options\";\nimport {\n  hasPlugin,\n  validatePlugins,\n  mixinPluginNames,\n  mixinPlugins,\n  type PluginList,\n} from \"./plugin-utils\";\nimport Parser from \"./parser\";\n\nimport { types as tokTypes } from \"./tokenizer/types\";\nimport \"./tokenizer/context\";\n\nimport type { Expression, File } from \"./types\";\n\nexport function parse(input: string, options?: Options): File {\n  if (options?.sourceType === \"unambiguous\") {\n    options = {\n      ...options,\n    };\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        // Top level await introduces code which can be both a valid script and\n        // a valid module, but which produces different ASTs:\n        //    await\n        //    0\n        // can be parsed either as an AwaitExpression, or as two ExpressionStatements.\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch {}\n      } else {\n        // This is both a valid module and a valid script, but\n        // we parse it as a script by default\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\n\nexport function parseExpression(input: string, options?: Options): Expression {\n  const parser = getParser(options, input);\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n  return parser.getExpression();\n}\n\nexport { tokTypes };\n\nfunction getParser(options: ?Options, input: string): Parser {\n  let cls = Parser;\n  if (options?.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache: { [key: string]: Class<Parser> } = {};\n\n/** Get a Parser class with plugins applied. */\nfunction getParserClass(pluginsFromOptions: PluginList): Class<Parser> {\n  const pluginList = mixinPluginNames.filter(name =>\n    hasPlugin(pluginsFromOptions, name),\n  );\n\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n  if (!cls) {\n    cls = Parser;\n    for (const plugin of pluginList) {\n      cls = mixinPlugins[plugin](cls);\n    }\n    parserClassCache[key] = cls;\n  }\n  return cls;\n}\n","// @flow\n\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between regular\n// expressions and divisions. It is set on all token types that can\n// be followed by an expression (thus, a slash after them would be a\n// regular expression).\n\n// The `startsExpr` property is used to determine whether an expression\n// may be the “argument” subexpression of a `yield` expression or\n// `yield` statement. It is set on all token types that may be at the\n// start of a subexpression.\n\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\n\ntype TokenOptions = {\n  keyword?: string,\n  beforeExpr?: boolean,\n  startsExpr?: boolean,\n  rightAssociative?: boolean,\n  isLoop?: boolean,\n  isAssign?: boolean,\n  prefix?: boolean,\n  postfix?: boolean,\n  binop?: ?number,\n};\n\nexport class TokenType {\n  label: string;\n  keyword: ?string;\n  beforeExpr: boolean;\n  startsExpr: boolean;\n  rightAssociative: boolean;\n  isLoop: boolean;\n  isAssign: boolean;\n  prefix: boolean;\n  postfix: boolean;\n  binop: ?number;\n  updateContext: ?(prevType: TokenType) => void;\n\n  constructor(label: string, conf: TokenOptions = {}) {\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    this.updateContext = null;\n  }\n}\n\nexport const keywords = new Map<string, TokenType>();\n\nfunction createKeyword(name: string, options: TokenOptions = {}): TokenType {\n  options.keyword = name;\n  const token = new TokenType(name, options);\n  keywords.set(name, token);\n  return token;\n}\n\nfunction createBinop(name: string, binop: number) {\n  return new TokenType(name, { beforeExpr, binop });\n}\n\nexport const types: { [name: string]: TokenType } = {\n  num: new TokenType(\"num\", { startsExpr }),\n  bigint: new TokenType(\"bigint\", { startsExpr }),\n  decimal: new TokenType(\"decimal\", { startsExpr }),\n  regexp: new TokenType(\"regexp\", { startsExpr }),\n  string: new TokenType(\"string\", { startsExpr }),\n  name: new TokenType(\"name\", { startsExpr }),\n  eof: new TokenType(\"eof\"),\n\n  // Punctuation token types.\n  bracketL: new TokenType(\"[\", { beforeExpr, startsExpr }),\n  bracketHashL: new TokenType(\"#[\", { beforeExpr, startsExpr }),\n  bracketBarL: new TokenType(\"[|\", { beforeExpr, startsExpr }),\n  bracketR: new TokenType(\"]\"),\n  bracketBarR: new TokenType(\"|]\"),\n  braceL: new TokenType(\"{\", { beforeExpr, startsExpr }),\n  braceBarL: new TokenType(\"{|\", { beforeExpr, startsExpr }),\n  braceHashL: new TokenType(\"#{\", { beforeExpr, startsExpr }),\n  braceR: new TokenType(\"}\"),\n  braceBarR: new TokenType(\"|}\"),\n  parenL: new TokenType(\"(\", { beforeExpr, startsExpr }),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", { beforeExpr }),\n  semi: new TokenType(\";\", { beforeExpr }),\n  colon: new TokenType(\":\", { beforeExpr }),\n  doubleColon: new TokenType(\"::\", { beforeExpr }),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", { beforeExpr }),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", { beforeExpr }),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", { beforeExpr }),\n  backQuote: new TokenType(\"`\", { startsExpr }),\n  dollarBraceL: new TokenType(\"${\", { beforeExpr, startsExpr }),\n  at: new TokenType(\"@\"),\n  hash: new TokenType(\"#\", { startsExpr }),\n\n  // Special hashbang token.\n  interpreterDirective: new TokenType(\"#!...\"),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  eq: new TokenType(\"=\", { beforeExpr, isAssign }),\n  assign: new TokenType(\"_=\", { beforeExpr, isAssign }),\n  incDec: new TokenType(\"++/--\", { prefix, postfix, startsExpr }),\n  bang: new TokenType(\"!\", { beforeExpr, prefix, startsExpr }),\n  tilde: new TokenType(\"~\", { beforeExpr, prefix, startsExpr }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", { beforeExpr, binop: 9, prefix, startsExpr }),\n  // startsExpr: required by v8intrinsic plugin\n  modulo: new TokenType(\"%\", { beforeExpr, binop: 10, startsExpr }),\n  // unset `beforeExpr` as it can be `function *`\n  star: new TokenType(\"*\", { binop: 10 }),\n  slash: createBinop(\"/\", 10),\n  exponent: new TokenType(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true,\n  }),\n\n  // Keywords\n  // Don't forget to update packages/babel-helper-validator-identifier/src/keyword.js\n  // when new keywords are added\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", { beforeExpr }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", { beforeExpr }),\n  _do: createKeyword(\"do\", { isLoop, beforeExpr }),\n  _else: createKeyword(\"else\", { beforeExpr }),\n  _finally: createKeyword(\"finally\"),\n  _for: createKeyword(\"for\", { isLoop }),\n  _function: createKeyword(\"function\", { startsExpr }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", { beforeExpr }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", { beforeExpr, prefix, startsExpr }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _while: createKeyword(\"while\", { isLoop }),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", { beforeExpr, startsExpr }),\n  _this: createKeyword(\"this\", { startsExpr }),\n  _super: createKeyword(\"super\", { startsExpr }),\n  _class: createKeyword(\"class\", { startsExpr }),\n  _extends: createKeyword(\"extends\", { beforeExpr }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", { startsExpr }),\n  _null: createKeyword(\"null\", { startsExpr }),\n  _true: createKeyword(\"true\", { startsExpr }),\n  _false: createKeyword(\"false\", { startsExpr }),\n  _in: createKeyword(\"in\", { beforeExpr, binop: 7 }),\n  _instanceof: createKeyword(\"instanceof\", { beforeExpr, binop: 7 }),\n  _typeof: createKeyword(\"typeof\", { beforeExpr, prefix, startsExpr }),\n  _void: createKeyword(\"void\", { beforeExpr, prefix, startsExpr }),\n  _delete: createKeyword(\"delete\", { beforeExpr, prefix, startsExpr }),\n};\n","// @flow\n\n// Each scope gets a bitset that may contain these flags\n// prettier-ignore\nexport const SCOPE_OTHER        = 0b00000000,\n             SCOPE_PROGRAM      = 0b00000001,\n             SCOPE_FUNCTION     = 0b00000010,\n             SCOPE_ARROW        = 0b00000100,\n             SCOPE_SIMPLE_CATCH = 0b00001000,\n             SCOPE_SUPER        = 0b00010000,\n             SCOPE_DIRECT_SUPER = 0b00100000,\n             SCOPE_CLASS        = 0b01000000,\n             SCOPE_TS_MODULE    = 0b10000000,\n             SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\n\nexport type ScopeFlags =\n  | typeof SCOPE_OTHER\n  | typeof SCOPE_PROGRAM\n  | typeof SCOPE_FUNCTION\n  | typeof SCOPE_VAR\n  | typeof SCOPE_ARROW\n  | typeof SCOPE_SIMPLE_CATCH\n  | typeof SCOPE_SUPER\n  | typeof SCOPE_DIRECT_SUPER\n  | typeof SCOPE_CLASS;\n\n// These flags are meant to be _only_ used inside the Scope class (or subclasses).\n// prettier-ignore\nexport const BIND_KIND_VALUE           = 0b00000_0000_01,\n             BIND_KIND_TYPE            = 0b00000_0000_10,\n             // Used in checkLVal and declareName to determine the type of a binding\n             BIND_SCOPE_VAR            = 0b00000_0001_00, // Var-style binding\n             BIND_SCOPE_LEXICAL        = 0b00000_0010_00, // Let- or const-style binding\n             BIND_SCOPE_FUNCTION       = 0b00000_0100_00, // Function declaration\n             BIND_SCOPE_OUTSIDE        = 0b00000_1000_00, // Special case for function names as\n                                                   // bound inside the function\n             // Misc flags\n             BIND_FLAGS_NONE           = 0b00001_0000_00,\n             BIND_FLAGS_CLASS          = 0b00010_0000_00,\n             BIND_FLAGS_TS_ENUM        = 0b00100_0000_00,\n             BIND_FLAGS_TS_CONST_ENUM  = 0b01000_0000_00,\n             BIND_FLAGS_TS_EXPORT_ONLY = 0b10000_0000_00;\n\n// These flags are meant to be _only_ used by Scope consumers\n// prettier-ignore\n/*                              =    is value?    |    is type?    |      scope          |    misc flags    */\nexport const BIND_CLASS         = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL  | BIND_FLAGS_CLASS  ,\n             BIND_LEXICAL       = BIND_KIND_VALUE | 0              | BIND_SCOPE_LEXICAL  | 0                 ,\n             BIND_VAR           = BIND_KIND_VALUE | 0              | BIND_SCOPE_VAR      | 0                 ,\n             BIND_FUNCTION      = BIND_KIND_VALUE | 0              | BIND_SCOPE_FUNCTION | 0                 ,\n             BIND_TS_INTERFACE  = 0               | BIND_KIND_TYPE | 0                   | BIND_FLAGS_CLASS  ,\n             BIND_TS_TYPE       = 0               | BIND_KIND_TYPE | 0                   | 0                 ,\n             BIND_TS_ENUM       = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL  | BIND_FLAGS_TS_ENUM,\n             BIND_TS_AMBIENT    = 0               | 0              | 0            | BIND_FLAGS_TS_EXPORT_ONLY,\n             // These bindings don't introduce anything in the scope. They are used for assignments and\n             // function expressions IDs.\n             BIND_NONE          = 0               | 0              | 0                   | BIND_FLAGS_NONE   ,\n             BIND_OUTSIDE       = BIND_KIND_VALUE | 0              | 0                   | BIND_FLAGS_NONE   ,\n\n             BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n             BIND_TS_NAMESPACE  = 0               | 0              | 0            | BIND_FLAGS_TS_EXPORT_ONLY;\n\nexport type BindingTypes =\n  | typeof BIND_NONE\n  | typeof BIND_OUTSIDE\n  | typeof BIND_VAR\n  | typeof BIND_LEXICAL\n  | typeof BIND_CLASS\n  | typeof BIND_FUNCTION\n  | typeof BIND_TS_INTERFACE\n  | typeof BIND_TS_TYPE\n  | typeof BIND_TS_ENUM\n  | typeof BIND_TS_AMBIENT\n  | typeof BIND_TS_NAMESPACE;\n\n// prettier-ignore\nexport const CLASS_ELEMENT_FLAG_STATIC = 0b1_00,\n             CLASS_ELEMENT_KIND_GETTER = 0b0_10,\n             CLASS_ELEMENT_KIND_SETTER = 0b0_01,\n             CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\n\n// prettier-ignore\nexport const CLASS_ELEMENT_STATIC_GETTER   = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n             CLASS_ELEMENT_STATIC_SETTER   = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n             CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n             CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n             CLASS_ELEMENT_OTHER           = 0;\n\nexport type ClassElementTypes =\n  | typeof CLASS_ELEMENT_STATIC_GETTER\n  | typeof CLASS_ELEMENT_STATIC_SETTER\n  | typeof CLASS_ELEMENT_INSTANCE_GETTER\n  | typeof CLASS_ELEMENT_INSTANCE_SETTER\n  | typeof CLASS_ELEMENT_OTHER;\n","// @flow\n\nimport * as charCodes from \"charcodes\";\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\nexport const lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nexport const lineBreakG = new RegExp(lineBreak.source, \"g\");\n\n// https://tc39.github.io/ecma262/#sec-line-terminators\nexport function isNewLine(code: number): boolean {\n  switch (code) {\n    case charCodes.lineFeed:\n    case charCodes.carriageReturn:\n    case charCodes.lineSeparator:\n    case charCodes.paragraphSeparator:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nexport const skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\n// https://tc39.github.io/ecma262/#sec-white-space\nexport function isWhitespace(code: number): boolean {\n  switch (code) {\n    case 0x0009: // CHARACTER TABULATION\n    case 0x000b: // LINE TABULATION\n    case 0x000c: // FORM FEED\n    case charCodes.space:\n    case charCodes.nonBreakingSpace:\n    case charCodes.oghamSpaceMark:\n    case 0x2000: // EN QUAD\n    case 0x2001: // EM QUAD\n    case 0x2002: // EN SPACE\n    case 0x2003: // EM SPACE\n    case 0x2004: // THREE-PER-EM SPACE\n    case 0x2005: // FOUR-PER-EM SPACE\n    case 0x2006: // SIX-PER-EM SPACE\n    case 0x2007: // FIGURE SPACE\n    case 0x2008: // PUNCTUATION SPACE\n    case 0x2009: // THIN SPACE\n    case 0x200a: // HAIR SPACE\n    case 0x202f: // NARROW NO-BREAK SPACE\n    case 0x205f: // MEDIUM MATHEMATICAL SPACE\n    case 0x3000: // IDEOGRAPHIC SPACE\n    case 0xfeff: // ZERO WIDTH NO-BREAK SPACE\n      return true;\n\n    default:\n      return false;\n  }\n}\n","// @flow\n\nimport { lineBreakG } from \"./whitespace\";\n\nexport type Pos = {\n  start: number,\n};\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nexport class Position {\n  line: number;\n  column: number;\n\n  constructor(line: number, col: number) {\n    this.line = line;\n    this.column = col;\n  }\n}\n\nexport class SourceLocation {\n  start: Position;\n  end: Position;\n  filename: string;\n  identifierName: ?string;\n\n  constructor(start: Position, end?: Position) {\n    this.start = start;\n    // $FlowIgnore (may start as null, but initialized later)\n    this.end = end;\n  }\n}\n\n// The `getLineInfo` function is mostly useful when the\n// `locations` option is off (for performance reasons) and you\n// want to find the line/column position for a given character\n// offset. `input` should be the code string that the offset refers\n// into.\n\nexport function getLineInfo(input: string, offset: number): Position {\n  let line = 1;\n  let lineStart = 0;\n  let match;\n  lineBreakG.lastIndex = 0;\n  while ((match = lineBreakG.exec(input)) && match.index < offset) {\n    line++;\n    lineStart = lineBreakG.lastIndex;\n  }\n\n  return new Position(line, offset - lineStart);\n}\n","// @flow\n\nimport type { Options } from \"../options\";\nimport type State from \"../tokenizer/state\";\nimport type { PluginsMap } from \"./index\";\nimport type ScopeHandler from \"../util/scope\";\nimport type ClassScopeHandler from \"../util/class-scope\";\nimport type ProductionParameterHandler from \"../util/production-parameter\";\n\nexport default class BaseParser {\n  // Properties set by constructor in index.js\n  options: Options;\n  inModule: boolean;\n  scope: ScopeHandler<*>;\n  classScope: ClassScopeHandler;\n  prodParam: ProductionParameterHandler;\n  plugins: PluginsMap;\n  filename: ?string;\n  sawUnambiguousESM: boolean = false;\n  ambiguousScriptDifferentAst: boolean = false;\n\n  // Initialized by Tokenizer\n  state: State;\n  // input and length are not in state as they are constant and we do\n  // not want to ever copy them, which happens if state gets cloned\n  input: string;\n  length: number;\n\n  hasPlugin(name: string): boolean {\n    return this.plugins.has(name);\n  }\n\n  getPluginOption(plugin: string, name: string) {\n    // $FlowIssue\n    if (this.hasPlugin(plugin)) return this.plugins.get(plugin)[name];\n  }\n}\n","// @flow\n\n/**\n * Based on the comment attachment algorithm used in espree and estraverse.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright\n *   notice, this list of conditions and the following disclaimer.\n * * Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport BaseParser from \"./base\";\nimport type { Comment, Node } from \"../types\";\n\nfunction last<T>(stack: $ReadOnlyArray<T>): T {\n  return stack[stack.length - 1];\n}\n\nexport default class CommentsParser extends BaseParser {\n  addComment(comment: Comment): void {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.trailingComments.push(comment);\n    this.state.leadingComments.push(comment);\n  }\n\n  adjustCommentsAfterTrailingComma(\n    node: Node,\n    elements: (Node | null)[],\n    // When the current node is followed by a token which hasn't a respective AST node, we\n    // need to take all the trailing comments to prevent them from being attached to an\n    // unrelated node. e.g. in\n    //     var { x } /* cmt */ = { y }\n    // we don't want /* cmt */ to be attached to { y }.\n    // On the other hand, in\n    //     fn(x) [new line] /* cmt */ [new line] y\n    // /* cmt */ is both a trailing comment of fn(x) and a leading comment of y\n    takeAllComments?: boolean,\n  ) {\n    if (this.state.leadingComments.length === 0) {\n      return;\n    }\n\n    let lastElement = null;\n    let i = elements.length;\n    while (lastElement === null && i > 0) {\n      lastElement = elements[--i];\n    }\n    if (lastElement === null) {\n      return;\n    }\n\n    for (let j = 0; j < this.state.leadingComments.length; j++) {\n      if (\n        this.state.leadingComments[j].end < this.state.commentPreviousNode.end\n      ) {\n        this.state.leadingComments.splice(j, 1);\n        j--;\n      }\n    }\n\n    const newTrailingComments = [];\n    for (let i = 0; i < this.state.leadingComments.length; i++) {\n      const leadingComment = this.state.leadingComments[i];\n      if (leadingComment.end < node.end) {\n        newTrailingComments.push(leadingComment);\n\n        // Perf: we don't need to splice if we are going to reset the array anyway\n        if (!takeAllComments) {\n          this.state.leadingComments.splice(i, 1);\n          i--;\n        }\n      } else {\n        if (node.trailingComments === undefined) {\n          node.trailingComments = [];\n        }\n        node.trailingComments.push(leadingComment);\n      }\n    }\n    if (takeAllComments) this.state.leadingComments = [];\n\n    if (newTrailingComments.length > 0) {\n      lastElement.trailingComments = newTrailingComments;\n    } else if (lastElement.trailingComments !== undefined) {\n      lastElement.trailingComments = [];\n    }\n  }\n\n  processComment(node: Node): void {\n    if (node.type === \"Program\" && node.body.length > 0) return;\n\n    const stack = this.state.commentStack;\n\n    let firstChild, lastChild, trailingComments, i, j;\n\n    if (this.state.trailingComments.length > 0) {\n      // If the first comment in trailingComments comes after the\n      // current node, then we're good - all comments in the array will\n      // come after the node and so it's safe to add them as official\n      // trailingComments.\n      if (this.state.trailingComments[0].start >= node.end) {\n        trailingComments = this.state.trailingComments;\n        this.state.trailingComments = [];\n      } else {\n        // Otherwise, if the first comment doesn't come after the\n        // current node, that means we have a mix of leading and trailing\n        // comments in the array and that leadingComments contains the\n        // same items as trailingComments. Reset trailingComments to\n        // zero items and we'll handle this by evaluating leadingComments\n        // later.\n        this.state.trailingComments.length = 0;\n      }\n    } else if (stack.length > 0) {\n      const lastInStack = last(stack);\n      if (\n        lastInStack.trailingComments &&\n        lastInStack.trailingComments[0].start >= node.end\n      ) {\n        trailingComments = lastInStack.trailingComments;\n        delete lastInStack.trailingComments;\n      }\n    }\n\n    // Eating the stack.\n    if (stack.length > 0 && last(stack).start >= node.start) {\n      firstChild = stack.pop();\n    }\n\n    while (stack.length > 0 && last(stack).start >= node.start) {\n      lastChild = stack.pop();\n    }\n\n    if (!lastChild && firstChild) lastChild = firstChild;\n\n    // Adjust comments that follow a trailing comma on the last element in a\n    // comma separated list of nodes to be the trailing comments on the last\n    // element\n    if (firstChild) {\n      switch (node.type) {\n        case \"ObjectExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties);\n          break;\n        case \"ObjectPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties, true);\n          break;\n        case \"CallExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.arguments);\n          break;\n        case \"ArrayExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements);\n          break;\n        case \"ArrayPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements, true);\n          break;\n      }\n    } else if (\n      this.state.commentPreviousNode &&\n      ((this.state.commentPreviousNode.type === \"ImportSpecifier\" &&\n        node.type !== \"ImportSpecifier\") ||\n        (this.state.commentPreviousNode.type === \"ExportSpecifier\" &&\n          node.type !== \"ExportSpecifier\"))\n    ) {\n      this.adjustCommentsAfterTrailingComma(node, [\n        this.state.commentPreviousNode,\n      ]);\n    }\n\n    if (lastChild) {\n      if (lastChild.leadingComments) {\n        if (\n          lastChild !== node &&\n          lastChild.leadingComments.length > 0 &&\n          last(lastChild.leadingComments).end <= node.start\n        ) {\n          node.leadingComments = lastChild.leadingComments;\n          delete lastChild.leadingComments;\n        } else {\n          // A leading comment for an anonymous class had been stolen by its first ClassMethod,\n          // so this takes back the leading comment.\n          // See also: https://github.com/eslint/espree/issues/158\n          for (i = lastChild.leadingComments.length - 2; i >= 0; --i) {\n            if (lastChild.leadingComments[i].end <= node.start) {\n              node.leadingComments = lastChild.leadingComments.splice(0, i + 1);\n              break;\n            }\n          }\n        }\n      }\n    } else if (this.state.leadingComments.length > 0) {\n      if (last(this.state.leadingComments).end <= node.start) {\n        if (this.state.commentPreviousNode) {\n          for (j = 0; j < this.state.leadingComments.length; j++) {\n            if (\n              this.state.leadingComments[j].end <\n              this.state.commentPreviousNode.end\n            ) {\n              this.state.leadingComments.splice(j, 1);\n              j--;\n            }\n          }\n        }\n        if (this.state.leadingComments.length > 0) {\n          node.leadingComments = this.state.leadingComments;\n          this.state.leadingComments = [];\n        }\n      } else {\n        // https://github.com/eslint/espree/issues/2\n        //\n        // In special cases, such as return (without a value) and\n        // debugger, all comments will end up as leadingComments and\n        // will otherwise be eliminated. This step runs when the\n        // commentStack is empty and there are comments left\n        // in leadingComments.\n        //\n        // This loop figures out the stopping point between the actual\n        // leading and trailing comments by finding the location of the\n        // first comment that comes after the given node.\n        for (i = 0; i < this.state.leadingComments.length; i++) {\n          if (this.state.leadingComments[i].end > node.start) {\n            break;\n          }\n        }\n\n        // Split the array based on the location of the first comment\n        // that comes after the node. Keep in mind that this could\n        // result in an empty array, and if so, the array must be\n        // deleted.\n        const leadingComments = this.state.leadingComments.slice(0, i);\n\n        if (leadingComments.length) {\n          node.leadingComments = leadingComments;\n        }\n\n        // Similarly, trailing comments are attached later. The variable\n        // must be reset to null if there are no trailing comments.\n        trailingComments = this.state.leadingComments.slice(i);\n        if (trailingComments.length === 0) {\n          trailingComments = null;\n        }\n      }\n    }\n\n    this.state.commentPreviousNode = node;\n\n    if (trailingComments) {\n      if (\n        trailingComments.length &&\n        trailingComments[0].start >= node.start &&\n        last(trailingComments).end <= node.end\n      ) {\n        node.innerComments = trailingComments;\n      } else {\n        // TrailingComments maybe contain innerComments\n        const firstTrailingCommentIndex = trailingComments.findIndex(\n          comment => comment.end >= node.end,\n        );\n\n        if (firstTrailingCommentIndex > 0) {\n          node.innerComments = trailingComments.slice(\n            0,\n            firstTrailingCommentIndex,\n          );\n          node.trailingComments = trailingComments.slice(\n            firstTrailingCommentIndex,\n          );\n        } else {\n          node.trailingComments = trailingComments;\n        }\n      }\n    }\n\n    stack.push(node);\n  }\n}\n","// @flow\n/* eslint sort-keys: \"error\" */\n\n// The Errors key follows https://cs.chromium.org/chromium/src/v8/src/common/message-template.h unless it does not exist\nexport const ErrorMessages = Object.freeze({\n  AccessorIsGenerator: \"A %0ter cannot be a generator\",\n  ArgumentsInClass:\n    \"'arguments' is only allowed in functions and class methods\",\n  AsyncFunctionInSingleStatementContext:\n    \"Async functions can only be declared at the top level or inside a block\",\n  AwaitBindingIdentifier:\n    \"Can not use 'await' as identifier inside an async function\",\n  AwaitExpressionFormalParameter:\n    \"await is not allowed in async function parameters\",\n  AwaitNotInAsyncFunction:\n    \"Can not use keyword 'await' outside an async function\",\n  BadGetterArity: \"getter must not have any formal parameters\",\n  BadSetterArity: \"setter must have exactly one formal parameter\",\n  BadSetterRestParameter:\n    \"setter function argument must not be a rest parameter\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'\",\n  ConstructorClassPrivateField:\n    \"Classes may not have a private field named '#constructor'\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor\",\n  ConstructorIsAsync: \"Constructor can't be an async function\",\n  ConstructorIsGenerator: \"Constructor can't be a generator\",\n  DeclarationMissingInitializer: \"%0 require an initialization value\",\n  DecoratorBeforeExport:\n    \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax\",\n  DecoratorConstructor:\n    \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass:\n    \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block\",\n  DeletePrivateField: \"Deleting a private field is not allowed\",\n  DestructureNamedImport:\n    \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport:\n    \"`%0` has already been exported. Exported identifiers must be unique.\",\n  DuplicateProto: \"Redefinition of __proto__ property\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag\",\n  DuplicateStaticBlock: \"Duplicate static block in the same class\",\n  ElementAfterRest: \"Rest element must be last element\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape\",\n  ExportBindingIsString:\n    \"A string literal cannot be used as an exported binding without `from`.\\n- Did you mean `export { %0 as '%1' } from 'some-module'`?\",\n  ExportDefaultFromAsIdentifier:\n    \"'from' is not allowed as an identifier after 'export default'\",\n  ForInOfLoopInitializer:\n    \"%0 loop variable declaration may not have an initializer\",\n  GeneratorInSingleStatementContext:\n    \"Generators can only be declared at the top level or inside a block\",\n  IllegalBreakContinue: \"Unsyntactic %0\",\n  IllegalLanguageModeDirective:\n    \"Illegal 'use strict' directive in function with non-simple parameter list\",\n  IllegalReturn: \"'return' outside of function\",\n  ImportBindingIsString:\n    'A string literal cannot be used as an imported binding.\\n- Did you mean `import { \"%0\" as foo }`?',\n  ImportCallArgumentTrailingComma:\n    \"Trailing comma is disallowed inside import(...) arguments\",\n  ImportCallArity: \"import() requires exactly %0\",\n  ImportCallNotNewExpression: \"Cannot use new with import(...)\",\n  ImportCallSpreadArgument: \"... is not allowed in import()\",\n  ImportMetaOutsideModule: `import.meta may appear only with 'sourceType: \"module\"'`,\n  ImportOutsideModule: `'import' and 'export' may appear only with 'sourceType: \"module\"'`,\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral\",\n  InvalidCodePoint: \"Code point out of bounds\",\n  InvalidDecimal: \"Invalid decimal\",\n  InvalidDigit: \"Expected number in radix %0\",\n  InvalidEscapeSequence: \"Bad character escape sequence\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template\",\n  InvalidEscapedReservedWord: \"Escape sequence in keyword %0\",\n  InvalidIdentifier: \"Invalid identifier %0\",\n  InvalidLhs: \"Invalid left-hand side in %0\",\n  InvalidLhsBinding: \"Binding invalid left-hand side in %0\",\n  InvalidNumber: \"Invalid number\",\n  InvalidOrMissingExponent:\n    \"Floating-point numbers require a valid exponent after the 'e'\",\n  InvalidOrUnexpectedToken: \"Unexpected character '%0'\",\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern\",\n  InvalidPrivateFieldResolution: \"Private name #%0 is not defined\",\n  InvalidPropertyBindingPattern: \"Binding member expression\",\n  InvalidRecordProperty:\n    \"Only properties and spread elements are allowed in record definitions\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument\",\n  LabelRedeclaration: \"Label '%0' is already declared\",\n  LetInLexicalBinding:\n    \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'\",\n  MalformedRegExpFlags: \"Invalid regular expression flag\",\n  MissingClassName: \"A class name is required\",\n  MissingEqInAssignment:\n    \"Only '=' operator can be used for specifying default value.\",\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX\",\n  MixingCoalesceWithLogical:\n    \"Nullish coalescing operator(??) requires parens when mixing with logical operators\",\n  ModuleAttributeDifferentFromType:\n    \"The only accepted module attribute is `type`\",\n  ModuleAttributeInvalidValue:\n    \"Only string literals are allowed as module attribute values\",\n  ModuleAttributesWithDuplicateKeys:\n    'Duplicate key \"%0\" is not allowed in module attributes',\n  ModuleExportNameHasLoneSurrogate:\n    \"An export name cannot include a lone surrogate, found '\\\\u%0'\",\n  ModuleExportUndefined: \"Export '%0' is not defined\",\n  MultipleDefaultsInSwitch: \"Multiple default clauses\",\n  NewlineAfterThrow: \"Illegal newline after throw\",\n  NoCatchOrFinally: \"Missing catch or finally clause\",\n  NumberIdentifier: \"Identifier directly after number\",\n  NumericSeparatorInEscapeSequence:\n    \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences\",\n  ObsoleteAwaitStar:\n    \"await* has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew:\n    \"constructors in/after an Optional Chain are not allowed\",\n  OptionalChainingNoTemplate:\n    \"Tagged Template Literals are not allowed in optionalChain\",\n  ParamDupe: \"Argument name clash\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter\",\n  PatternHasMethod: \"Object pattern can't contain methods\",\n  PipelineBodyNoArrow:\n    'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized',\n  PipelineBodySequenceExpression:\n    \"Pipeline body may not be a comma-separated sequence expression\",\n  PipelineHeadSequenceExpression:\n    \"Pipeline head should not be a comma-separated sequence expression\",\n  PipelineTopicUnused:\n    \"Pipeline is in topic style but does not use topic reference\",\n  PrimaryTopicNotAllowed:\n    \"Topic reference was used in a lexical context without topic binding\",\n  PrimaryTopicRequiresSmartPipeline:\n    \"Primary Topic Reference found but pipelineOperator not passed 'smart' for 'proposal' option.\",\n  PrivateInExpectedIn:\n    \"Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`)\",\n  PrivateNameRedeclaration: \"Duplicate private name #%0\",\n  RecordExpressionBarIncorrectEndSyntaxType:\n    \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  RecordExpressionBarIncorrectStartSyntaxType:\n    \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  RecordExpressionHashIncorrectStartSyntaxType:\n    \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element\",\n  SloppyFunction:\n    \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement\",\n  StaticPrototype: \"Classes may not have static property named prototype\",\n  StrictDelete: \"Deleting local variable in strict mode\",\n  StrictEvalArguments: \"Assigning to '%0' in strict mode\",\n  StrictEvalArgumentsBinding: \"Binding '%0' in strict mode\",\n  StrictFunction:\n    \"In strict mode code, functions can only be declared at top level or inside a block\",\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'\",\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode\",\n  StrictWith: \"'with' in strict mode\",\n  SuperNotAllowed:\n    \"super() is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super\",\n  TrailingDecorator: \"Decorators must be attached to a class element\",\n  TupleExpressionBarIncorrectEndSyntaxType:\n    \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  TupleExpressionBarIncorrectStartSyntaxType:\n    \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  TupleExpressionHashIncorrectStartSyntaxType:\n    \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder\",\n  UnexpectedAwaitAfterPipelineBody:\n    'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token\",\n  UnexpectedImportExport:\n    \"'import' and 'export' may only appear at the top level\",\n  UnexpectedKeyword: \"Unexpected keyword '%0'\",\n  UnexpectedLeadingDecorator:\n    \"Leading decorators must be attached to a class declaration\",\n  UnexpectedLexicalDeclaration:\n    \"Lexical declaration cannot appear in a single-statement context\",\n  UnexpectedNewTarget: \"new.target can only be used in functions\",\n  UnexpectedNumericSeparator:\n    \"A numeric separator is only allowed between two digits\",\n  UnexpectedPrivateField:\n    \"Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\\n or a property of member expression (i.e. this.#p).\",\n  UnexpectedReservedWord: \"Unexpected reserved word '%0'\",\n  UnexpectedSuper: \"super is only allowed in object methods and classes\",\n  UnexpectedToken: \"Unexpected token '%0'\",\n  UnexpectedTokenUnaryExponentiation:\n    \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport:\n    \"A decorated export must export a class declaration\",\n  UnsupportedDefaultExport:\n    \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport: \"import can only be used in import() or import.meta\",\n  UnsupportedMetaProperty: \"The only valid meta property for %0 is %0.%1\",\n  UnsupportedParameterDecorator:\n    \"Decorators cannot be used to decorate parameters\",\n  UnsupportedPropertyDecorator:\n    \"Decorators cannot be used to decorate object literal properties\",\n  UnsupportedSuper:\n    \"super can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop])\",\n  UnterminatedComment: \"Unterminated comment\",\n  UnterminatedRegExp: \"Unterminated regular expression\",\n  UnterminatedString: \"Unterminated string constant\",\n  UnterminatedTemplate: \"Unterminated template\",\n  VarRedeclaration: \"Identifier '%0' has already been declared\",\n  YieldBindingIdentifier:\n    \"Can not use 'yield' as identifier inside a generator\",\n  YieldInParameter: \"yield is not allowed in generator parameters\",\n  ZeroDigitNumericSeparator:\n    \"Numeric separator can not be used after leading 0\",\n});\n","// @flow\n/* eslint sort-keys: \"error\" */\nimport { getLineInfo, type Position } from \"../util/location\";\nimport CommentsParser from \"./comments\";\n\n// This function is used to raise exceptions on parse errors. It\n// takes an offset integer (into the current `input`) to indicate\n// the location of the error, attaches the position to the end\n// of the error message, and then raises a `SyntaxError` with that\n// message.\n\ntype ErrorContext = {\n  pos: number,\n  loc: Position,\n  missingPlugin?: Array<string>,\n  code?: string,\n};\n\nexport { ErrorMessages as Errors } from \"./error-message.js\";\n\nexport default class ParserError extends CommentsParser {\n  // Forward-declaration: defined in tokenizer/index.js\n  /*::\n  +isLookahead: boolean;\n  */\n\n  getLocationForPosition(pos: number): Position {\n    let loc;\n    if (pos === this.state.start) loc = this.state.startLoc;\n    else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;\n    else if (pos === this.state.end) loc = this.state.endLoc;\n    else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;\n    else loc = getLineInfo(this.input, pos);\n\n    return loc;\n  }\n\n  raise(pos: number, errorTemplate: string, ...params: any): Error | empty {\n    return this.raiseWithData(pos, undefined, errorTemplate, ...params);\n  }\n\n  raiseWithData(\n    pos: number,\n    data?: {\n      missingPlugin?: Array<string>,\n      code?: string,\n    },\n    errorTemplate: string,\n    ...params: any\n  ): Error | empty {\n    const loc = this.getLocationForPosition(pos);\n    const message =\n      errorTemplate.replace(/%(\\d+)/g, (_, i: number) => params[i]) +\n      ` (${loc.line}:${loc.column})`;\n    return this._raise(Object.assign(({ loc, pos }: Object), data), message);\n  }\n\n  _raise(errorContext: ErrorContext, message: string): Error | empty {\n    // $FlowIgnore\n    const err: SyntaxError & ErrorContext = new SyntaxError(message);\n    Object.assign(err, errorContext);\n    if (this.options.errorRecovery) {\n      if (!this.isLookahead) this.state.errors.push(err);\n      return err;\n    } else {\n      throw err;\n    }\n  }\n}\n","// @flow\n\nimport { types as tt, TokenType } from \"../tokenizer/types\";\nimport type Parser from \"../parser\";\nimport type { ExpressionErrors } from \"../parser/util\";\nimport * as N from \"../types\";\nimport type { Position } from \"../util/location\";\nimport { type BindingTypes, BIND_NONE } from \"../util/scopeflags\";\nimport { Errors } from \"../parser/error\";\n\nfunction isSimpleProperty(node: N.Node): boolean {\n  return (\n    node != null &&\n    node.type === \"Property\" &&\n    node.kind === \"init\" &&\n    node.method === false\n  );\n}\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    estreeParseRegExpLiteral({ pattern, flags }: N.RegExpLiteral): N.Node {\n      let regex = null;\n      try {\n        regex = new RegExp(pattern, flags);\n      } catch (e) {\n        // In environments that don't support these flags value will\n        // be null as the regex can't be represented natively.\n      }\n      const node = this.estreeParseLiteral(regex);\n      node.regex = { pattern, flags };\n\n      return node;\n    }\n\n    estreeParseBigIntLiteral(value: any): N.Node {\n      // https://github.com/estree/estree/blob/master/es2020.md#bigintliteral\n      // $FlowIgnore\n      const bigInt = typeof BigInt !== \"undefined\" ? BigInt(value) : null;\n      const node = this.estreeParseLiteral(bigInt);\n      node.bigint = String(node.value || value);\n\n      return node;\n    }\n\n    estreeParseDecimalLiteral(value: any): N.Node {\n      // https://github.com/estree/estree/blob/master/experimental/decimal.md\n      // todo: use BigDecimal when node supports it.\n      const decimal = null;\n      const node = this.estreeParseLiteral(decimal);\n      node.decimal = String(node.value || value);\n\n      return node;\n    }\n\n    estreeParseLiteral(value: any): N.Node {\n      return this.parseLiteral(value, \"Literal\");\n    }\n\n    directiveToStmt(directive: N.Directive): N.ExpressionStatement {\n      const directiveLiteral = directive.value;\n\n      const stmt = this.startNodeAt(directive.start, directive.loc.start);\n      const expression = this.startNodeAt(\n        directiveLiteral.start,\n        directiveLiteral.loc.start,\n      );\n\n      expression.value = directiveLiteral.value;\n      expression.raw = directiveLiteral.extra.raw;\n\n      stmt.expression = this.finishNodeAt(\n        expression,\n        \"Literal\",\n        directiveLiteral.end,\n        directiveLiteral.loc.end,\n      );\n      stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n\n      return this.finishNodeAt(\n        stmt,\n        \"ExpressionStatement\",\n        directive.end,\n        directive.loc.end,\n      );\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    initFunction(\n      node: N.BodilessFunctionOrMethodBase,\n      isAsync: ?boolean,\n    ): void {\n      super.initFunction(node, isAsync);\n      node.expression = false;\n    }\n\n    checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n      if (isSimpleProperty(node)) {\n        this.checkDeclaration(((node: any): N.EstreeProperty).value);\n      } else {\n        super.checkDeclaration(node);\n      }\n    }\n\n    getObjectOrClassMethodParams(method: N.ObjectMethod | N.ClassMethod) {\n      return ((method: any): N.EstreeProperty | N.EstreeMethodDefinition).value\n        .params;\n    }\n\n    checkLVal(\n      expr: N.Expression,\n      bindingType: BindingTypes = BIND_NONE,\n      checkClashes: ?{ [key: string]: boolean },\n      contextDescription: string,\n      disallowLetBinding?: boolean,\n    ): void {\n      switch (expr.type) {\n        case \"ObjectPattern\":\n          expr.properties.forEach(prop => {\n            this.checkLVal(\n              prop.type === \"Property\" ? prop.value : prop,\n              bindingType,\n              checkClashes,\n              \"object destructuring pattern\",\n              disallowLetBinding,\n            );\n          });\n          break;\n        default:\n          super.checkLVal(\n            expr,\n            bindingType,\n            checkClashes,\n            contextDescription,\n            disallowLetBinding,\n          );\n      }\n    }\n\n    checkProto(\n      prop: N.ObjectMember | N.SpreadElement,\n      isRecord: boolean,\n      protoRef: { used: boolean },\n      refExpressionErrors: ?ExpressionErrors,\n    ): void {\n      // $FlowIgnore: check prop.method and fallback to super method\n      if (prop.method) {\n        return;\n      }\n      super.checkProto(prop, isRecord, protoRef, refExpressionErrors);\n    }\n\n    isValidDirective(stmt: N.Statement): boolean {\n      return (\n        stmt.type === \"ExpressionStatement\" &&\n        stmt.expression.type === \"Literal\" &&\n        typeof stmt.expression.value === \"string\" &&\n        !stmt.expression.extra?.parenthesized\n      );\n    }\n\n    stmtToDirective(stmt: N.Statement): N.Directive {\n      const directive = super.stmtToDirective(stmt);\n      const value = stmt.expression.value;\n\n      // Reset value to the actual value as in estree mode we want\n      // the stmt to have the real value and not the raw value\n      directive.value.value = value;\n\n      return directive;\n    }\n\n    parseBlockBody(\n      node: N.BlockStatementLike,\n      allowDirectives: ?boolean,\n      topLevel: boolean,\n      end: TokenType,\n    ): void {\n      super.parseBlockBody(node, allowDirectives, topLevel, end);\n\n      const directiveStatements = node.directives.map(d =>\n        this.directiveToStmt(d),\n      );\n      node.body = directiveStatements.concat(node.body);\n      // $FlowIgnore - directives isn't optional in the type definition\n      delete node.directives;\n    }\n\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      this.parseMethod(\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n        \"ClassMethod\",\n        true,\n      );\n      if (method.typeParameters) {\n        // $FlowIgnore\n        method.value.typeParameters = method.typeParameters;\n        delete method.typeParameters;\n      }\n      classBody.body.push(method);\n    }\n\n    parseExprAtom(refExpressionErrors?: ?ExpressionErrors): N.Expression {\n      switch (this.state.type) {\n        case tt.num:\n        case tt.string:\n          return this.estreeParseLiteral(this.state.value);\n\n        case tt.regexp:\n          return this.estreeParseRegExpLiteral(this.state.value);\n\n        case tt.bigint:\n          return this.estreeParseBigIntLiteral(this.state.value);\n\n        case tt.decimal:\n          return this.estreeParseDecimalLiteral(this.state.value);\n\n        case tt._null:\n          return this.estreeParseLiteral(null);\n\n        case tt._true:\n          return this.estreeParseLiteral(true);\n\n        case tt._false:\n          return this.estreeParseLiteral(false);\n\n        default:\n          return super.parseExprAtom(refExpressionErrors);\n      }\n    }\n\n    parseLiteral<T: N.Literal>(\n      value: any,\n      type: /*T[\"kind\"]*/ string,\n      startPos?: number,\n      startLoc?: Position,\n    ): T {\n      const node = super.parseLiteral(value, type, startPos, startLoc);\n      node.raw = node.extra.raw;\n      delete node.extra;\n\n      return node;\n    }\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpression: ?boolean,\n      isMethod?: boolean = false,\n    ): void {\n      super.parseFunctionBody(node, allowExpression, isMethod);\n      node.expression = node.body.type !== \"BlockStatement\";\n    }\n\n    parseMethod<T: N.MethodLike>(\n      node: T,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowDirectSuper: boolean,\n      type: string,\n      inClassScope: boolean = false,\n    ): T {\n      let funcNode = this.startNode();\n      funcNode.kind = node.kind; // provide kind, so super method correctly sets state\n      funcNode = super.parseMethod(\n        funcNode,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowDirectSuper,\n        type,\n        inClassScope,\n      );\n      funcNode.type = \"FunctionExpression\";\n      delete funcNode.kind;\n      // $FlowIgnore\n      node.value = funcNode;\n\n      type = type === \"ClassMethod\" ? \"MethodDefinition\" : type;\n      return this.finishNode(node, type);\n    }\n\n    parseObjectMethod(\n      prop: N.ObjectMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n    ): ?N.ObjectMethod {\n      const node: N.EstreeProperty = (super.parseObjectMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n      ): any);\n\n      if (node) {\n        node.type = \"Property\";\n        if (((node: any): N.ClassMethod).kind === \"method\") node.kind = \"init\";\n        node.shorthand = false;\n      }\n\n      return (node: any);\n    }\n\n    parseObjectProperty(\n      prop: N.ObjectProperty,\n      startPos: ?number,\n      startLoc: ?Position,\n      isPattern: boolean,\n      refExpressionErrors: ?ExpressionErrors,\n    ): ?N.ObjectProperty {\n      const node: N.EstreeProperty = (super.parseObjectProperty(\n        prop,\n        startPos,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      ): any);\n\n      if (node) {\n        node.kind = \"init\";\n        node.type = \"Property\";\n      }\n\n      return (node: any);\n    }\n\n    toAssignable(node: N.Node): N.Node {\n      if (isSimpleProperty(node)) {\n        this.toAssignable(node.value);\n\n        return node;\n      }\n\n      return super.toAssignable(node);\n    }\n\n    toAssignableObjectExpressionProp(prop: N.Node, isLast: boolean) {\n      if (prop.kind === \"get\" || prop.kind === \"set\") {\n        throw this.raise(prop.key.start, Errors.PatternHasAccessor);\n      } else if (prop.method) {\n        throw this.raise(prop.key.start, Errors.PatternHasMethod);\n      } else {\n        super.toAssignableObjectExpressionProp(prop, isLast);\n      }\n    }\n\n    finishCallExpression<T: N.CallExpression | N.OptionalCallExpression>(\n      node: T,\n      optional: boolean,\n    ): N.Expression {\n      super.finishCallExpression(node, optional);\n\n      if (node.callee.type === \"Import\") {\n        ((node: N.Node): N.EstreeImportExpression).type = \"ImportExpression\";\n        ((node: N.Node): N.EstreeImportExpression).source = node.arguments[0];\n        // $FlowIgnore - arguments isn't optional in the type definition\n        delete node.arguments;\n        // $FlowIgnore - callee isn't optional in the type definition\n        delete node.callee;\n      }\n\n      return node;\n    }\n\n    toReferencedListDeep(\n      exprList: $ReadOnlyArray<?N.Expression>,\n      isParenthesizedExpr?: boolean,\n    ): void {\n      // ImportExpressions do not have an arguments array.\n      if (!exprList) {\n        return;\n      }\n\n      super.toReferencedListDeep(exprList, isParenthesizedExpr);\n    }\n\n    parseExport(node: N.Node) {\n      super.parseExport(node);\n\n      switch (node.type) {\n        case \"ExportAllDeclaration\":\n          node.exported = null;\n          break;\n\n        case \"ExportNamedDeclaration\":\n          if (\n            node.specifiers.length === 1 &&\n            node.specifiers[0].type === \"ExportNamespaceSpecifier\"\n          ) {\n            node.type = \"ExportAllDeclaration\";\n            node.exported = node.specifiers[0].exported;\n            delete node.specifiers;\n          }\n\n          break;\n      }\n\n      return node;\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: ?boolean,\n      state: N.ParseSubscriptState,\n    ) {\n      const node = super.parseSubscript(\n        base,\n        startPos,\n        startLoc,\n        noCalls,\n        state,\n      );\n\n      if (state.optionalChainMember) {\n        // https://github.com/estree/estree/blob/master/es2020.md#chainexpression\n        if (\n          node.type === \"OptionalMemberExpression\" ||\n          node.type === \"OptionalCallExpression\"\n        ) {\n          node.type = node.type.substring(8); // strip Optional prefix\n        }\n        if (state.stop) {\n          const chain = this.startNodeAtNode(node);\n          chain.expression = node;\n          return this.finishNode(chain, \"ChainExpression\");\n        }\n      } else if (\n        node.type === \"MemberExpression\" ||\n        node.type === \"CallExpression\"\n      ) {\n        node.optional = false;\n      }\n\n      return node;\n    }\n  };\n","// @flow\n\n// The algorithm used to determine whether a regexp can appear at a\n// given point in the program is loosely based on sweet.js' approach.\n// See https://github.com/mozilla/sweet.js/wiki/design\n\nimport { types as tt } from \"./types\";\n\nexport class TokContext {\n  constructor(\n    token: string,\n    isExpr?: boolean,\n    preserveSpace?: boolean,\n    override?: ?Function, // Takes a Tokenizer as a this-parameter, and returns void.\n  ) {\n    this.token = token;\n    this.isExpr = !!isExpr;\n    this.preserveSpace = !!preserveSpace;\n    this.override = override;\n  }\n\n  token: string;\n  isExpr: boolean;\n  preserveSpace: boolean;\n  override: ?Function;\n}\n\nexport const types: {\n  [key: string]: TokContext,\n} = {\n  braceStatement: new TokContext(\"{\", false),\n  braceExpression: new TokContext(\"{\", true),\n  recordExpression: new TokContext(\"#{\", true),\n  templateQuasi: new TokContext(\"${\", false),\n  parenStatement: new TokContext(\"(\", false),\n  parenExpression: new TokContext(\"(\", true),\n  template: new TokContext(\"`\", true, true, p => p.readTmplToken()),\n  functionExpression: new TokContext(\"function\", true),\n  functionStatement: new TokContext(\"function\", false),\n};\n\n// Token-specific context update code\n\ntt.parenR.updateContext = tt.braceR.updateContext = function () {\n  if (this.state.context.length === 1) {\n    this.state.exprAllowed = true;\n    return;\n  }\n\n  let out = this.state.context.pop();\n  if (out === types.braceStatement && this.curContext().token === \"function\") {\n    out = this.state.context.pop();\n  }\n\n  this.state.exprAllowed = !out.isExpr;\n};\n\ntt.name.updateContext = function (prevType) {\n  let allowed = false;\n  if (prevType !== tt.dot) {\n    if (\n      (this.state.value === \"of\" &&\n        !this.state.exprAllowed &&\n        prevType !== tt._function &&\n        prevType !== tt._class) ||\n      (this.state.value === \"yield\" && this.prodParam.hasYield)\n    ) {\n      allowed = true;\n    }\n  }\n  this.state.exprAllowed = allowed;\n\n  if (this.state.isIterator) {\n    this.state.isIterator = false;\n  }\n};\n\ntt.braceL.updateContext = function (prevType) {\n  this.state.context.push(\n    this.braceIsBlock(prevType) ? types.braceStatement : types.braceExpression,\n  );\n  this.state.exprAllowed = true;\n};\n\ntt.dollarBraceL.updateContext = function () {\n  this.state.context.push(types.templateQuasi);\n  this.state.exprAllowed = true;\n};\n\ntt.parenL.updateContext = function (prevType) {\n  const statementParens =\n    prevType === tt._if ||\n    prevType === tt._for ||\n    prevType === tt._with ||\n    prevType === tt._while;\n  this.state.context.push(\n    statementParens ? types.parenStatement : types.parenExpression,\n  );\n  this.state.exprAllowed = true;\n};\n\ntt.incDec.updateContext = function () {\n  // tokExprAllowed stays unchanged\n};\n\ntt._function.updateContext = tt._class.updateContext = function (prevType) {\n  if (\n    prevType.beforeExpr &&\n    prevType !== tt.semi &&\n    prevType !== tt._else &&\n    !(prevType === tt._return && this.hasPrecedingLineBreak()) &&\n    !(\n      (prevType === tt.colon || prevType === tt.braceL) &&\n      this.curContext() === types.b_stat\n    )\n  ) {\n    this.state.context.push(types.functionExpression);\n  } else {\n    this.state.context.push(types.functionStatement);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntt.backQuote.updateContext = function () {\n  if (this.curContext() === types.template) {\n    this.state.context.pop();\n  } else {\n    this.state.context.push(types.template);\n  }\n  this.state.exprAllowed = false;\n};\n\n// we don't need to update context for tt.braceBarL because we do not pop context for tt.braceBarR\ntt.braceHashL.updateContext = function () {\n  this.state.context.push(types.recordExpression);\n  this.state.exprAllowed = true; /* tt.braceHashL.beforeExpr */\n};\n","// @flow\n\nimport * as charCodes from \"charcodes\";\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point between 0x80 and 0xffff.\n// Generated by `scripts/generate-identifier-regex.js`.\n\n/* prettier-ignore */\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n/* prettier-ignore */\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\nconst nonASCIIidentifierStart = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + \"]\",\n);\nconst nonASCIIidentifier = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\",\n);\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n// These are a run-length and offset-encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by `scripts/generate-identifier-regex.js`.\n/* prettier-ignore */\n/* prettier-ignore */\nconst astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,349,41,7,1,79,28,11,0,9,21,107,20,28,22,13,52,76,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,230,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,35,56,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,190,0,80,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,43,8,8952,286,50,2,18,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,2357,44,11,6,17,0,370,43,1301,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42717,35,4148,12,221,3,5761,15,7472,3104,541,1507,4938];\n/* prettier-ignore */\nconst astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,370,1,154,10,176,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,135,4,60,6,26,9,1014,0,2,54,8,3,82,0,12,1,19628,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,262,6,10,9,419,13,1495,6,110,6,6,9,4759,9,787719,239];\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code: number, set: $ReadOnlyArray<number>): boolean {\n  let pos = 0x10000;\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n  return false;\n}\n\n// Test whether a given character code starts an identifier.\n\nexport function isIdentifierStart(code: number): boolean {\n  if (code < charCodes.uppercaseA) return code === charCodes.dollarSign;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return (\n      code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code))\n    );\n  }\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\n\n// Test whether a given character is part of an identifier.\n\nexport function isIdentifierChar(code: number): boolean {\n  if (code < charCodes.digit0) return code === charCodes.dollarSign;\n  if (code < charCodes.colon) return true;\n  if (code < charCodes.uppercaseA) return false;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n  return (\n    isInAstralSet(code, astralIdentifierStartCodes) ||\n    isInAstralSet(code, astralIdentifierCodes)\n  );\n}\n\n// Test whether a given string is a valid identifier name\n\nexport function isIdentifierName(name: string): boolean {\n  let isFirst = true;\n  for (const char of Array.from(name)) {\n    const cp = char.codePointAt(0);\n    if (isFirst) {\n      if (!isIdentifierStart(cp)) {\n        return false;\n      }\n      isFirst = false;\n    } else if (!isIdentifierChar(cp)) {\n      return false;\n    }\n  }\n  return !isFirst;\n}\n","// @flow\n\nconst reservedWords = {\n  keyword: [\n    \"break\",\n    \"case\",\n    \"catch\",\n    \"continue\",\n    \"debugger\",\n    \"default\",\n    \"do\",\n    \"else\",\n    \"finally\",\n    \"for\",\n    \"function\",\n    \"if\",\n    \"return\",\n    \"switch\",\n    \"throw\",\n    \"try\",\n    \"var\",\n    \"const\",\n    \"while\",\n    \"with\",\n    \"new\",\n    \"this\",\n    \"super\",\n    \"class\",\n    \"extends\",\n    \"export\",\n    \"import\",\n    \"null\",\n    \"true\",\n    \"false\",\n    \"in\",\n    \"instanceof\",\n    \"typeof\",\n    \"void\",\n    \"delete\",\n  ],\n  strict: [\n    \"implements\",\n    \"interface\",\n    \"let\",\n    \"package\",\n    \"private\",\n    \"protected\",\n    \"public\",\n    \"static\",\n    \"yield\",\n  ],\n  strictBind: [\"eval\", \"arguments\"],\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\n\n/**\n * Checks if word is a reserved word in non-strict mode\n */\nexport function isReservedWord(word: string, inModule: boolean): boolean {\n  return (inModule && word === \"await\") || word === \"enum\";\n}\n\n/**\n * Checks if word is a reserved word in non-binding strict mode\n *\n * Includes non-strict reserved words\n */\nexport function isStrictReservedWord(word: string, inModule: boolean): boolean {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode, but it is allowed as\n * a normal identifier.\n */\nexport function isStrictBindOnlyReservedWord(word: string): boolean {\n  return reservedWordsStrictBindSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode\n *\n * Includes non-strict reserved words and non-binding strict reserved words\n */\nexport function isStrictBindReservedWord(\n  word: string,\n  inModule: boolean,\n): boolean {\n  return (\n    isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word)\n  );\n}\n\nexport function isKeyword(word: string): boolean {\n  return keywords.has(word);\n}\n","/* eslint max-len: 0 */\n\n// @flow\n\nimport * as charCodes from \"charcodes\";\n\nexport {\n  isIdentifierStart,\n  isIdentifierChar,\n  isReservedWord,\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n  isStrictReservedWord,\n  isKeyword,\n} from \"@babel/helper-validator-identifier\";\n\nexport const keywordRelationalOperator = /^in(stanceof)?$/;\n\n// Test whether a current state character code and next character code is @\n\nexport function isIteratorStart(current: number, next: number): boolean {\n  return current === charCodes.atSign && next === charCodes.atSign;\n}\n","// @flow\n\n/*:: declare var invariant; */\n\n// Error messages are colocated with the plugin.\n/* eslint-disable @babel/development-internal/dry-error-messages */\n\nimport type Parser from \"../parser\";\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport * as N from \"../types\";\nimport type { Options } from \"../options\";\nimport type { Pos, Position } from \"../util/location\";\nimport type State from \"../tokenizer/state\";\nimport { types as tc } from \"../tokenizer/context\";\nimport * as charCodes from \"charcodes\";\nimport { isIteratorStart } from \"../util/identifier\";\nimport {\n  type BindingTypes,\n  BIND_NONE,\n  BIND_LEXICAL,\n  BIND_VAR,\n  BIND_FUNCTION,\n  SCOPE_ARROW,\n  SCOPE_FUNCTION,\n  SCOPE_OTHER,\n} from \"../util/scopeflags\";\nimport type { ExpressionErrors } from \"../parser/util\";\nimport { Errors } from \"../parser/error\";\n\nconst reservedTypes = new Set([\n  \"_\",\n  \"any\",\n  \"bool\",\n  \"boolean\",\n  \"empty\",\n  \"extends\",\n  \"false\",\n  \"interface\",\n  \"mixed\",\n  \"null\",\n  \"number\",\n  \"static\",\n  \"string\",\n  \"true\",\n  \"typeof\",\n  \"void\",\n]);\n\n/* eslint sort-keys: \"error\" */\n// The Errors key follows https://github.com/facebook/flow/blob/master/src/parser/parse_error.ml unless it does not exist\nconst FlowErrors = Object.freeze({\n  AmbiguousConditionalArrow:\n    \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind:\n    \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module\",\n  AssignReservedType: \"Cannot overwrite reserved type %0\",\n  DeclareClassElement:\n    \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer:\n    \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement\",\n  EnumBooleanMemberNotInitialized:\n    \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\n  EnumDuplicateMemberName:\n    \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\n  EnumInconsistentMemberValues:\n    \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\n  EnumInvalidExplicitType:\n    \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidExplicitTypeUnknownSupplied:\n    \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidMemberInitializerPrimaryType:\n    \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\n  EnumInvalidMemberInitializerSymbolType:\n    \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\n  EnumInvalidMemberInitializerUnknownType:\n    \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\n  EnumInvalidMemberName:\n    \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\n  EnumNumberMemberNotInitialized:\n    \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\n  EnumStringMemberInconsistentlyInitailized:\n    \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\n  ImportTypeShorthandOnlyInPureImport:\n    \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements\",\n  InexactInsideExact:\n    \"Explicit inexact syntax cannot appear inside an explicit exact object type\",\n  InexactInsideNonObject:\n    \"Explicit inexact syntax cannot appear in class or interface definitions\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance\",\n  InvalidNonTypeImportInDeclareModule:\n    \"Imports within a `declare module` body must always be `import type` or `import typeof`\",\n  MissingTypeParamDefault:\n    \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule:\n    \"`declare module` cannot be used inside another `declare module`\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment\",\n  OptionalBindingPattern:\n    \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  SpreadVariance: \"Spread properties cannot have variance\",\n  TypeBeforeInitializer:\n    \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`\",\n  TypeCastInPattern:\n    \"The type cast expression is expected to be wrapped with parenthesis\",\n  UnexpectedExplicitInexactInObject:\n    \"Explicit inexact syntax must appear at the end of an inexact object\",\n  UnexpectedReservedType: \"Unexpected reserved type %0\",\n  UnexpectedReservedUnderscore:\n    \"`_` is only allowed as a type argument to call or new\",\n  UnexpectedSpaceBetweenModuloChecks:\n    \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType:\n    \"Spread operator cannot appear in class or interface definitions\",\n  UnexpectedSubtractionOperand:\n    'Unexpected token, expected \"number\" or \"bigint\"',\n  UnexpectedTokenAfterTypeParameter:\n    \"Expected an arrow function after this type parameter declaration\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction:\n    \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`\",\n  UnsupportedDeclareExportKind:\n    \"`declare export %0` is not supported. Use `%1` instead\",\n  UnsupportedStatementInDeclareModule:\n    \"Only declares and type imports are allowed inside declare module\",\n  UnterminatedFlowComment: \"Unterminated flow-comment\",\n});\n/* eslint-disable sort-keys */\n\nfunction isEsModuleType(bodyElement: N.Node): boolean {\n  return (\n    bodyElement.type === \"DeclareExportAllDeclaration\" ||\n    (bodyElement.type === \"DeclareExportDeclaration\" &&\n      (!bodyElement.declaration ||\n        (bodyElement.declaration.type !== \"TypeAlias\" &&\n          bodyElement.declaration.type !== \"InterfaceDeclaration\")))\n  );\n}\n\nfunction hasTypeImportKind(node: N.Node): boolean {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(state: State): boolean {\n  return (\n    (state.type === tt.name || !!state.type.keyword) && state.value !== \"from\"\n  );\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\",\n};\n\n// Like Array#filter, but returns a tuple [ acceptedElements, discardedElements ]\nfunction partition<T>(\n  list: T[],\n  test: (T, number, T[]) => ?boolean,\n): [T[], T[]] {\n  const list1 = [];\n  const list2 = [];\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\n\n// Flow enums types\ntype EnumExplicitType = null | \"boolean\" | \"number\" | \"string\" | \"symbol\";\ntype EnumContext = {|\n  enumName: string,\n  explicitType: EnumExplicitType,\n  memberName: string,\n|};\ntype EnumMemberInit =\n  | {| type: \"number\", pos: number, value: N.Node |}\n  | {| type: \"string\", pos: number, value: N.Node |}\n  | {| type: \"boolean\", pos: number, value: N.Node |}\n  | {| type: \"invalid\", pos: number |}\n  | {| type: \"none\", pos: number |};\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    // The value of the @flow/@noflow pragma. Initially undefined, transitions\n    // to \"@flow\" or \"@noflow\" if we see a pragma. Transitions to null if we are\n    // past the initial comment.\n    flowPragma: void | null | \"flow\" | \"noflow\";\n\n    constructor(options: ?Options, input: string) {\n      super(options, input);\n      this.flowPragma = undefined;\n    }\n\n    shouldParseTypes(): boolean {\n      return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n    }\n\n    shouldParseEnums(): boolean {\n      return !!this.getPluginOption(\"flow\", \"enums\");\n    }\n\n    finishToken(type: TokenType, val: any): void {\n      if (\n        type !== tt.string &&\n        type !== tt.semi &&\n        type !== tt.interpreterDirective\n      ) {\n        if (this.flowPragma === undefined) {\n          this.flowPragma = null;\n        }\n      }\n      return super.finishToken(type, val);\n    }\n\n    addComment(comment: N.Comment): void {\n      if (this.flowPragma === undefined) {\n        // Try to parse a flow pragma.\n        const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n        if (!matches) {\n          // do nothing\n        } else if (matches[1] === \"flow\") {\n          this.flowPragma = \"flow\";\n        } else if (matches[1] === \"noflow\") {\n          this.flowPragma = \"noflow\";\n        } else {\n          throw new Error(\"Unexpected flow pragma\");\n        }\n      }\n      return super.addComment(comment);\n    }\n\n    flowParseTypeInitialiser(tok?: TokenType): N.FlowType {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tok || tt.colon);\n\n      const type = this.flowParseType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParsePredicate(): N.FlowType {\n      const node = this.startNode();\n      const moduloLoc = this.state.startLoc;\n      const moduloPos = this.state.start;\n      this.expect(tt.modulo);\n      const checksLoc = this.state.startLoc;\n      this.expectContextual(\"checks\");\n      // Force '%' and 'checks' to be adjacent\n      if (\n        moduloLoc.line !== checksLoc.line ||\n        moduloLoc.column !== checksLoc.column - 1\n      ) {\n        this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\n      }\n      if (this.eat(tt.parenL)) {\n        node.value = this.parseExpression();\n        this.expect(tt.parenR);\n        return this.finishNode(node, \"DeclaredPredicate\");\n      } else {\n        return this.finishNode(node, \"InferredPredicate\");\n      }\n    }\n\n    flowParseTypeAndPredicateInitialiser(): [?N.FlowType, ?N.FlowPredicate] {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tt.colon);\n      let type = null;\n      let predicate = null;\n      if (this.match(tt.modulo)) {\n        this.state.inType = oldInType;\n        predicate = this.flowParsePredicate();\n      } else {\n        type = this.flowParseType();\n        this.state.inType = oldInType;\n        if (this.match(tt.modulo)) {\n          predicate = this.flowParsePredicate();\n        }\n      }\n      return [type, predicate];\n    }\n\n    flowParseDeclareClass(node: N.FlowDeclareClass): N.FlowDeclareClass {\n      this.next();\n      this.flowParseInterfaceish(node, /*isClass*/ true);\n      return this.finishNode(node, \"DeclareClass\");\n    }\n\n    flowParseDeclareFunction(\n      node: N.FlowDeclareFunction,\n    ): N.FlowDeclareFunction {\n      this.next();\n\n      const id = (node.id = this.parseIdentifier());\n\n      const typeNode = this.startNode();\n      const typeContainer = this.startNode();\n\n      if (this.isRelational(\"<\")) {\n        typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        typeNode.typeParameters = null;\n      }\n\n      this.expect(tt.parenL);\n      const tmp = this.flowParseFunctionTypeParams();\n      typeNode.params = tmp.params;\n      typeNode.rest = tmp.rest;\n      this.expect(tt.parenR);\n\n      [\n        // $FlowFixMe (destructuring not supported yet)\n        typeNode.returnType,\n        // $FlowFixMe (destructuring not supported yet)\n        node.predicate,\n      ] = this.flowParseTypeAndPredicateInitialiser();\n\n      typeContainer.typeAnnotation = this.finishNode(\n        typeNode,\n        \"FunctionTypeAnnotation\",\n      );\n\n      id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n\n      this.resetEndLocation(id);\n      this.semicolon();\n\n      return this.finishNode(node, \"DeclareFunction\");\n    }\n\n    flowParseDeclare(\n      node: N.FlowDeclare,\n      insideModule?: boolean,\n    ): N.FlowDeclare {\n      if (this.match(tt._class)) {\n        return this.flowParseDeclareClass(node);\n      } else if (this.match(tt._function)) {\n        return this.flowParseDeclareFunction(node);\n      } else if (this.match(tt._var)) {\n        return this.flowParseDeclareVariable(node);\n      } else if (this.eatContextual(\"module\")) {\n        if (this.match(tt.dot)) {\n          return this.flowParseDeclareModuleExports(node);\n        } else {\n          if (insideModule) {\n            this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\n          }\n          return this.flowParseDeclareModule(node);\n        }\n      } else if (this.isContextual(\"type\")) {\n        return this.flowParseDeclareTypeAlias(node);\n      } else if (this.isContextual(\"opaque\")) {\n        return this.flowParseDeclareOpaqueType(node);\n      } else if (this.isContextual(\"interface\")) {\n        return this.flowParseDeclareInterface(node);\n      } else if (this.match(tt._export)) {\n        return this.flowParseDeclareExportDeclaration(node, insideModule);\n      } else {\n        throw this.unexpected();\n      }\n    }\n\n    flowParseDeclareVariable(\n      node: N.FlowDeclareVariable,\n    ): N.FlowDeclareVariable {\n      this.next();\n      node.id = this.flowParseTypeAnnotatableIdentifier(\n        /*allowPrimitiveOverride*/ true,\n      );\n      this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\n      this.semicolon();\n      return this.finishNode(node, \"DeclareVariable\");\n    }\n\n    flowParseDeclareModule(node: N.FlowDeclareModule): N.FlowDeclareModule {\n      this.scope.enter(SCOPE_OTHER);\n\n      if (this.match(tt.string)) {\n        node.id = this.parseExprAtom();\n      } else {\n        node.id = this.parseIdentifier();\n      }\n\n      const bodyNode = (node.body = this.startNode());\n      const body = (bodyNode.body = []);\n      this.expect(tt.braceL);\n      while (!this.match(tt.braceR)) {\n        let bodyNode = this.startNode();\n\n        if (this.match(tt._import)) {\n          this.next();\n          if (!this.isContextual(\"type\") && !this.match(tt._typeof)) {\n            this.raise(\n              this.state.lastTokStart,\n              FlowErrors.InvalidNonTypeImportInDeclareModule,\n            );\n          }\n          this.parseImport(bodyNode);\n        } else {\n          this.expectContextual(\n            \"declare\",\n            FlowErrors.UnsupportedStatementInDeclareModule,\n          );\n\n          bodyNode = this.flowParseDeclare(bodyNode, true);\n        }\n\n        body.push(bodyNode);\n      }\n\n      this.scope.exit();\n\n      this.expect(tt.braceR);\n\n      this.finishNode(bodyNode, \"BlockStatement\");\n\n      let kind = null;\n      let hasModuleExport = false;\n      body.forEach(bodyElement => {\n        if (isEsModuleType(bodyElement)) {\n          if (kind === \"CommonJS\") {\n            this.raise(\n              bodyElement.start,\n              FlowErrors.AmbiguousDeclareModuleKind,\n            );\n          }\n          kind = \"ES\";\n        } else if (bodyElement.type === \"DeclareModuleExports\") {\n          if (hasModuleExport) {\n            this.raise(\n              bodyElement.start,\n              FlowErrors.DuplicateDeclareModuleExports,\n            );\n          }\n          if (kind === \"ES\") {\n            this.raise(\n              bodyElement.start,\n              FlowErrors.AmbiguousDeclareModuleKind,\n            );\n          }\n          kind = \"CommonJS\";\n          hasModuleExport = true;\n        }\n      });\n\n      node.kind = kind || \"CommonJS\";\n      return this.finishNode(node, \"DeclareModule\");\n    }\n\n    flowParseDeclareExportDeclaration(\n      node: N.FlowDeclareExportDeclaration,\n      insideModule: ?boolean,\n    ): N.FlowDeclareExportDeclaration {\n      this.expect(tt._export);\n\n      if (this.eat(tt._default)) {\n        if (this.match(tt._function) || this.match(tt._class)) {\n          // declare export default class ...\n          // declare export default function ...\n          node.declaration = this.flowParseDeclare(this.startNode());\n        } else {\n          // declare export default [type];\n          node.declaration = this.flowParseType();\n          this.semicolon();\n        }\n        node.default = true;\n\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else {\n        if (\n          this.match(tt._const) ||\n          this.isLet() ||\n          ((this.isContextual(\"type\") || this.isContextual(\"interface\")) &&\n            !insideModule)\n        ) {\n          const label = this.state.value;\n          const suggestion = exportSuggestions[label];\n\n          throw this.raise(\n            this.state.start,\n            FlowErrors.UnsupportedDeclareExportKind,\n            label,\n            suggestion,\n          );\n        }\n\n        if (\n          this.match(tt._var) || // declare export var ...\n          this.match(tt._function) || // declare export function ...\n          this.match(tt._class) || // declare export class ...\n          this.isContextual(\"opaque\") // declare export opaque ..\n        ) {\n          node.declaration = this.flowParseDeclare(this.startNode());\n          node.default = false;\n\n          return this.finishNode(node, \"DeclareExportDeclaration\");\n        } else if (\n          this.match(tt.star) || // declare export * from ''\n          this.match(tt.braceL) || // declare export {} ...\n          this.isContextual(\"interface\") || // declare export interface ...\n          this.isContextual(\"type\") || // declare export type ...\n          this.isContextual(\"opaque\") // declare export opaque type ...\n        ) {\n          node = this.parseExport(node);\n          if (node.type === \"ExportNamedDeclaration\") {\n            // flow does not support the ExportNamedDeclaration\n            // $FlowIgnore\n            node.type = \"ExportDeclaration\";\n            // $FlowFixMe\n            node.default = false;\n            delete node.exportKind;\n          }\n\n          // $FlowIgnore\n          node.type = \"Declare\" + node.type;\n\n          return node;\n        }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParseDeclareModuleExports(\n      node: N.FlowDeclareModuleExports,\n    ): N.FlowDeclareModuleExports {\n      this.next();\n      this.expectContextual(\"exports\");\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n      this.semicolon();\n\n      return this.finishNode(node, \"DeclareModuleExports\");\n    }\n\n    flowParseDeclareTypeAlias(\n      node: N.FlowDeclareTypeAlias,\n    ): N.FlowDeclareTypeAlias {\n      this.next();\n      this.flowParseTypeAlias(node);\n      // Don't do finishNode as we don't want to process comments twice\n      node.type = \"DeclareTypeAlias\";\n      return node;\n    }\n\n    flowParseDeclareOpaqueType(\n      node: N.FlowDeclareOpaqueType,\n    ): N.FlowDeclareOpaqueType {\n      this.next();\n      this.flowParseOpaqueType(node, true);\n      // Don't do finishNode as we don't want to process comments twice\n      node.type = \"DeclareOpaqueType\";\n      return node;\n    }\n\n    flowParseDeclareInterface(\n      node: N.FlowDeclareInterface,\n    ): N.FlowDeclareInterface {\n      this.next();\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"DeclareInterface\");\n    }\n\n    // Interfaces\n\n    flowParseInterfaceish(\n      node: N.FlowDeclare,\n      isClass?: boolean = false,\n    ): void {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ !isClass,\n        /* declaration */ true,\n      );\n\n      this.scope.declareName(\n        node.id.name,\n        isClass ? BIND_FUNCTION : BIND_LEXICAL,\n        node.id.start,\n      );\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.extends = [];\n      node.implements = [];\n      node.mixins = [];\n\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (!isClass && this.eat(tt.comma));\n      }\n\n      if (this.isContextual(\"mixins\")) {\n        this.next();\n        do {\n          node.mixins.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      if (this.isContextual(\"implements\")) {\n        this.next();\n        do {\n          node.implements.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: isClass,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: isClass,\n        allowInexact: false,\n      });\n    }\n\n    flowParseInterfaceExtends(): N.FlowInterfaceExtends {\n      const node = this.startNode();\n\n      node.id = this.flowParseQualifiedTypeIdentifier();\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      } else {\n        node.typeParameters = null;\n      }\n\n      return this.finishNode(node, \"InterfaceExtends\");\n    }\n\n    flowParseInterface(node: N.FlowInterface): N.FlowInterface {\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"InterfaceDeclaration\");\n    }\n\n    checkNotUnderscore(word: string) {\n      if (word === \"_\") {\n        this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\n      }\n    }\n\n    checkReservedType(word: string, startLoc: number, declaration?: boolean) {\n      if (!reservedTypes.has(word)) return;\n\n      this.raise(\n        startLoc,\n        declaration\n          ? FlowErrors.AssignReservedType\n          : FlowErrors.UnexpectedReservedType,\n        word,\n      );\n    }\n\n    flowParseRestrictedIdentifier(\n      liberal?: boolean,\n      declaration?: boolean,\n    ): N.Identifier {\n      this.checkReservedType(this.state.value, this.state.start, declaration);\n      return this.parseIdentifier(liberal);\n    }\n\n    // Type aliases\n\n    flowParseTypeAlias(node: N.FlowTypeAlias): N.FlowTypeAlias {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ false,\n        /* declaration */ true,\n      );\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.right = this.flowParseTypeInitialiser(tt.eq);\n      this.semicolon();\n\n      return this.finishNode(node, \"TypeAlias\");\n    }\n\n    flowParseOpaqueType(\n      node: N.FlowOpaqueType,\n      declare: boolean,\n    ): N.FlowOpaqueType {\n      this.expectContextual(\"type\");\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ true,\n        /* declaration */ true,\n      );\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      // Parse the supertype\n      node.supertype = null;\n      if (this.match(tt.colon)) {\n        node.supertype = this.flowParseTypeInitialiser(tt.colon);\n      }\n\n      node.impltype = null;\n      if (!declare) {\n        node.impltype = this.flowParseTypeInitialiser(tt.eq);\n      }\n      this.semicolon();\n\n      return this.finishNode(node, \"OpaqueType\");\n    }\n\n    // Type annotations\n\n    flowParseTypeParameter(requireDefault?: boolean = false): N.TypeParameter {\n      const nodeStart = this.state.start;\n\n      const node = this.startNode();\n\n      const variance = this.flowParseVariance();\n\n      const ident = this.flowParseTypeAnnotatableIdentifier();\n      node.name = ident.name;\n      node.variance = variance;\n      node.bound = ident.typeAnnotation;\n\n      if (this.match(tt.eq)) {\n        this.eat(tt.eq);\n        node.default = this.flowParseType();\n      } else {\n        if (requireDefault) {\n          this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\n        }\n      }\n\n      return this.finishNode(node, \"TypeParameter\");\n    }\n\n    flowParseTypeParameterDeclaration(): N.TypeParameterDeclaration {\n      const oldInType = this.state.inType;\n      const node = this.startNode();\n      node.params = [];\n\n      this.state.inType = true;\n\n      // istanbul ignore else: this condition is already checked at all call sites\n      if (this.isRelational(\"<\") || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      let defaultRequired = false;\n\n      do {\n        const typeParameter = this.flowParseTypeParameter(defaultRequired);\n\n        node.params.push(typeParameter);\n\n        if (typeParameter.default) {\n          defaultRequired = true;\n        }\n\n        if (!this.isRelational(\">\")) {\n          this.expect(tt.comma);\n        }\n      } while (!this.isRelational(\">\"));\n      this.expectRelational(\">\");\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterDeclaration\");\n    }\n\n    flowParseTypeParameterInstantiation(): N.TypeParameterInstantiation {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expectRelational(\"<\");\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = false;\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseType());\n        if (!this.isRelational(\">\")) {\n          this.expect(tt.comma);\n        }\n      }\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      this.expectRelational(\">\");\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseTypeParameterInstantiationCallOrNew(): N.TypeParameterInstantiation {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expectRelational(\"<\");\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseTypeOrImplicitInstantiation());\n        if (!this.isRelational(\">\")) {\n          this.expect(tt.comma);\n        }\n      }\n      this.expectRelational(\">\");\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseInterfaceType(): N.FlowInterfaceType {\n      const node = this.startNode();\n      this.expectContextual(\"interface\");\n\n      node.extends = [];\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: false,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: false,\n        allowInexact: false,\n      });\n\n      return this.finishNode(node, \"InterfaceTypeAnnotation\");\n    }\n\n    flowParseObjectPropertyKey(): N.Expression {\n      return this.match(tt.num) || this.match(tt.string)\n        ? this.parseExprAtom()\n        : this.parseIdentifier(true);\n    }\n\n    flowParseObjectTypeIndexer(\n      node: N.FlowObjectTypeIndexer,\n      isStatic: boolean,\n      variance: ?N.FlowVariance,\n    ): N.FlowObjectTypeIndexer {\n      node.static = isStatic;\n\n      // Note: bracketL has already been consumed\n      if (this.lookahead().type === tt.colon) {\n        node.id = this.flowParseObjectPropertyKey();\n        node.key = this.flowParseTypeInitialiser();\n      } else {\n        node.id = null;\n        node.key = this.flowParseType();\n      }\n      this.expect(tt.bracketR);\n      node.value = this.flowParseTypeInitialiser();\n      node.variance = variance;\n\n      return this.finishNode(node, \"ObjectTypeIndexer\");\n    }\n\n    flowParseObjectTypeInternalSlot(\n      node: N.FlowObjectTypeInternalSlot,\n      isStatic: boolean,\n    ): N.FlowObjectTypeInternalSlot {\n      node.static = isStatic;\n      // Note: both bracketL have already been consumed\n      node.id = this.flowParseObjectPropertyKey();\n      this.expect(tt.bracketR);\n      this.expect(tt.bracketR);\n      if (this.isRelational(\"<\") || this.match(tt.parenL)) {\n        node.method = true;\n        node.optional = false;\n        node.value = this.flowParseObjectTypeMethodish(\n          this.startNodeAt(node.start, node.loc.start),\n        );\n      } else {\n        node.method = false;\n        if (this.eat(tt.question)) {\n          node.optional = true;\n        }\n        node.value = this.flowParseTypeInitialiser();\n      }\n      return this.finishNode(node, \"ObjectTypeInternalSlot\");\n    }\n\n    flowParseObjectTypeMethodish(\n      node: N.FlowFunctionTypeAnnotation,\n    ): N.FlowFunctionTypeAnnotation {\n      node.params = [];\n      node.rest = null;\n      node.typeParameters = null;\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      this.expect(tt.parenL);\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        node.params.push(this.flowParseFunctionTypeParam());\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n\n      if (this.eat(tt.ellipsis)) {\n        node.rest = this.flowParseFunctionTypeParam();\n      }\n      this.expect(tt.parenR);\n      node.returnType = this.flowParseTypeInitialiser();\n\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    flowParseObjectTypeCallProperty(\n      node: N.FlowObjectTypeCallProperty,\n      isStatic: boolean,\n    ): N.FlowObjectTypeCallProperty {\n      const valueNode = this.startNode();\n      node.static = isStatic;\n      node.value = this.flowParseObjectTypeMethodish(valueNode);\n      return this.finishNode(node, \"ObjectTypeCallProperty\");\n    }\n\n    flowParseObjectType({\n      allowStatic,\n      allowExact,\n      allowSpread,\n      allowProto,\n      allowInexact,\n    }: {\n      allowStatic: boolean,\n      allowExact: boolean,\n      allowSpread: boolean,\n      allowProto: boolean,\n      allowInexact: boolean,\n    }): N.FlowObjectTypeAnnotation {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n\n      const nodeStart = this.startNode();\n\n      nodeStart.callProperties = [];\n      nodeStart.properties = [];\n      nodeStart.indexers = [];\n      nodeStart.internalSlots = [];\n\n      let endDelim;\n      let exact;\n      let inexact = false;\n      if (allowExact && this.match(tt.braceBarL)) {\n        this.expect(tt.braceBarL);\n        endDelim = tt.braceBarR;\n        exact = true;\n      } else {\n        this.expect(tt.braceL);\n        endDelim = tt.braceR;\n        exact = false;\n      }\n\n      nodeStart.exact = exact;\n\n      while (!this.match(endDelim)) {\n        let isStatic = false;\n        let protoStart: ?number = null;\n        let inexactStart: ?number = null;\n        const node = this.startNode();\n\n        if (allowProto && this.isContextual(\"proto\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            protoStart = this.state.start;\n            allowStatic = false;\n          }\n        }\n\n        if (allowStatic && this.isContextual(\"static\")) {\n          const lookahead = this.lookahead();\n\n          // static is a valid identifier name\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            isStatic = true;\n          }\n        }\n\n        const variance = this.flowParseVariance();\n\n        if (this.eat(tt.bracketL)) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n          if (this.eat(tt.bracketL)) {\n            if (variance) {\n              this.unexpected(variance.start);\n            }\n            nodeStart.internalSlots.push(\n              this.flowParseObjectTypeInternalSlot(node, isStatic),\n            );\n          } else {\n            nodeStart.indexers.push(\n              this.flowParseObjectTypeIndexer(node, isStatic, variance),\n            );\n          }\n        } else if (this.match(tt.parenL) || this.isRelational(\"<\")) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n          nodeStart.callProperties.push(\n            this.flowParseObjectTypeCallProperty(node, isStatic),\n          );\n        } else {\n          let kind = \"init\";\n\n          if (this.isContextual(\"get\") || this.isContextual(\"set\")) {\n            const lookahead = this.lookahead();\n            if (\n              lookahead.type === tt.name ||\n              lookahead.type === tt.string ||\n              lookahead.type === tt.num\n            ) {\n              kind = this.state.value;\n              this.next();\n            }\n          }\n\n          const propOrInexact = this.flowParseObjectTypeProperty(\n            node,\n            isStatic,\n            protoStart,\n            variance,\n            kind,\n            allowSpread,\n            allowInexact ?? !exact,\n          );\n\n          if (propOrInexact === null) {\n            inexact = true;\n            inexactStart = this.state.lastTokStart;\n          } else {\n            nodeStart.properties.push(propOrInexact);\n          }\n        }\n\n        this.flowObjectTypeSemicolon();\n\n        if (\n          inexactStart &&\n          !this.match(tt.braceR) &&\n          !this.match(tt.braceBarR)\n        ) {\n          this.raise(\n            inexactStart,\n            FlowErrors.UnexpectedExplicitInexactInObject,\n          );\n        }\n      }\n\n      this.expect(endDelim);\n\n      /* The inexact flag should only be added on ObjectTypeAnnotations that\n       * are not the body of an interface, declare interface, or declare class.\n       * Since spreads are only allowed in object types, checking that is\n       * sufficient here.\n       */\n      if (allowSpread) {\n        nodeStart.inexact = inexact;\n      }\n\n      const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n\n      this.state.inType = oldInType;\n\n      return out;\n    }\n\n    flowParseObjectTypeProperty(\n      node: N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty,\n      isStatic: boolean,\n      protoStart: ?number,\n      variance: ?N.FlowVariance,\n      kind: string,\n      allowSpread: boolean,\n      allowInexact: boolean,\n    ): (N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty) | null {\n      if (this.eat(tt.ellipsis)) {\n        const isInexactToken =\n          this.match(tt.comma) ||\n          this.match(tt.semi) ||\n          this.match(tt.braceR) ||\n          this.match(tt.braceBarR);\n\n        if (isInexactToken) {\n          if (!allowSpread) {\n            this.raise(\n              this.state.lastTokStart,\n              FlowErrors.InexactInsideNonObject,\n            );\n          } else if (!allowInexact) {\n            this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\n          }\n          if (variance) {\n            this.raise(variance.start, FlowErrors.InexactVariance);\n          }\n\n          return null;\n        }\n\n        if (!allowSpread) {\n          this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\n        }\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n        if (variance) {\n          this.raise(variance.start, FlowErrors.SpreadVariance);\n        }\n\n        node.argument = this.flowParseType();\n        return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n      } else {\n        node.key = this.flowParseObjectPropertyKey();\n        node.static = isStatic;\n        node.proto = protoStart != null;\n        node.kind = kind;\n\n        let optional = false;\n        if (this.isRelational(\"<\") || this.match(tt.parenL)) {\n          // This is a method property\n          node.method = true;\n\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          node.value = this.flowParseObjectTypeMethodish(\n            this.startNodeAt(node.start, node.loc.start),\n          );\n          if (kind === \"get\" || kind === \"set\") {\n            this.flowCheckGetterSetterParams(node);\n          }\n        } else {\n          if (kind !== \"init\") this.unexpected();\n\n          node.method = false;\n\n          if (this.eat(tt.question)) {\n            optional = true;\n          }\n          node.value = this.flowParseTypeInitialiser();\n          node.variance = variance;\n        }\n\n        node.optional = optional;\n\n        return this.finishNode(node, \"ObjectTypeProperty\");\n      }\n    }\n\n    // This is similar to checkGetterSetterParams, but as\n    // @babel/parser uses non estree properties we cannot reuse it here\n    flowCheckGetterSetterParams(\n      property: N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty,\n    ): void {\n      const paramCount = property.kind === \"get\" ? 0 : 1;\n      const start = property.start;\n      const length =\n        property.value.params.length + (property.value.rest ? 1 : 0);\n      if (length !== paramCount) {\n        if (property.kind === \"get\") {\n          this.raise(start, Errors.BadGetterArity);\n        } else {\n          this.raise(start, Errors.BadSetterArity);\n        }\n      }\n\n      if (property.kind === \"set\" && property.value.rest) {\n        this.raise(start, Errors.BadSetterRestParameter);\n      }\n    }\n\n    flowObjectTypeSemicolon(): void {\n      if (\n        !this.eat(tt.semi) &&\n        !this.eat(tt.comma) &&\n        !this.match(tt.braceR) &&\n        !this.match(tt.braceBarR)\n      ) {\n        this.unexpected();\n      }\n    }\n\n    flowParseQualifiedTypeIdentifier(\n      startPos?: number,\n      startLoc?: Position,\n      id?: N.Identifier,\n    ): N.FlowQualifiedTypeIdentifier {\n      startPos = startPos || this.state.start;\n      startLoc = startLoc || this.state.startLoc;\n      let node = id || this.flowParseRestrictedIdentifier(true);\n\n      while (this.eat(tt.dot)) {\n        const node2 = this.startNodeAt(startPos, startLoc);\n        node2.qualification = node;\n        node2.id = this.flowParseRestrictedIdentifier(true);\n        node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n      }\n\n      return node;\n    }\n\n    flowParseGenericType(\n      startPos: number,\n      startLoc: Position,\n      id: N.Identifier,\n    ): N.FlowGenericTypeAnnotation {\n      const node = this.startNodeAt(startPos, startLoc);\n\n      node.typeParameters = null;\n      node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      return this.finishNode(node, \"GenericTypeAnnotation\");\n    }\n\n    flowParseTypeofType(): N.FlowTypeofTypeAnnotation {\n      const node = this.startNode();\n      this.expect(tt._typeof);\n      node.argument = this.flowParsePrimaryType();\n      return this.finishNode(node, \"TypeofTypeAnnotation\");\n    }\n\n    flowParseTupleType(): N.FlowTupleTypeAnnotation {\n      const node = this.startNode();\n      node.types = [];\n      this.expect(tt.bracketL);\n      // We allow trailing commas\n      while (this.state.pos < this.length && !this.match(tt.bracketR)) {\n        node.types.push(this.flowParseType());\n        if (this.match(tt.bracketR)) break;\n        this.expect(tt.comma);\n      }\n      this.expect(tt.bracketR);\n      return this.finishNode(node, \"TupleTypeAnnotation\");\n    }\n\n    flowParseFunctionTypeParam(): N.FlowFunctionTypeParam {\n      let name = null;\n      let optional = false;\n      let typeAnnotation = null;\n      const node = this.startNode();\n      const lh = this.lookahead();\n      if (lh.type === tt.colon || lh.type === tt.question) {\n        name = this.parseIdentifier();\n        if (this.eat(tt.question)) {\n          optional = true;\n        }\n        typeAnnotation = this.flowParseTypeInitialiser();\n      } else {\n        typeAnnotation = this.flowParseType();\n      }\n      node.name = name;\n      node.optional = optional;\n      node.typeAnnotation = typeAnnotation;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    reinterpretTypeAsFunctionTypeParam(\n      type: N.FlowType,\n    ): N.FlowFunctionTypeParam {\n      const node = this.startNodeAt(type.start, type.loc.start);\n      node.name = null;\n      node.optional = false;\n      node.typeAnnotation = type;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    flowParseFunctionTypeParams(\n      params: N.FlowFunctionTypeParam[] = [],\n    ): { params: N.FlowFunctionTypeParam[], rest: ?N.FlowFunctionTypeParam } {\n      let rest: ?N.FlowFunctionTypeParam = null;\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        params.push(this.flowParseFunctionTypeParam());\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      if (this.eat(tt.ellipsis)) {\n        rest = this.flowParseFunctionTypeParam();\n      }\n      return { params, rest };\n    }\n\n    flowIdentToTypeAnnotation(\n      startPos: number,\n      startLoc: Position,\n      node: N.FlowTypeAnnotation,\n      id: N.Identifier,\n    ): N.FlowTypeAnnotation {\n      switch (id.name) {\n        case \"any\":\n          return this.finishNode(node, \"AnyTypeAnnotation\");\n\n        case \"bool\":\n        case \"boolean\":\n          return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n        case \"mixed\":\n          return this.finishNode(node, \"MixedTypeAnnotation\");\n\n        case \"empty\":\n          return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n        case \"number\":\n          return this.finishNode(node, \"NumberTypeAnnotation\");\n\n        case \"string\":\n          return this.finishNode(node, \"StringTypeAnnotation\");\n\n        case \"symbol\":\n          return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n        default:\n          this.checkNotUnderscore(id.name);\n          return this.flowParseGenericType(startPos, startLoc, id);\n      }\n    }\n\n    // The parsing of types roughly parallels the parsing of expressions, and\n    // primary types are kind of like primary expressions...they're the\n    // primitives with which other types are constructed.\n    flowParsePrimaryType(): N.FlowTypeAnnotation {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.startNode();\n      let tmp;\n      let type;\n      let isGroupedType = false;\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n      switch (this.state.type) {\n        case tt.name:\n          if (this.isContextual(\"interface\")) {\n            return this.flowParseInterfaceType();\n          }\n\n          return this.flowIdentToTypeAnnotation(\n            startPos,\n            startLoc,\n            node,\n            this.parseIdentifier(),\n          );\n\n        case tt.braceL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: false,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: true,\n          });\n\n        case tt.braceBarL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: true,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: false,\n          });\n\n        case tt.bracketL:\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseTupleType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          return type;\n\n        case tt.relational:\n          if (this.state.value === \"<\") {\n            node.typeParameters = this.flowParseTypeParameterDeclaration();\n            this.expect(tt.parenL);\n            tmp = this.flowParseFunctionTypeParams();\n            node.params = tmp.params;\n            node.rest = tmp.rest;\n            this.expect(tt.parenR);\n\n            this.expect(tt.arrow);\n\n            node.returnType = this.flowParseType();\n\n            return this.finishNode(node, \"FunctionTypeAnnotation\");\n          }\n          break;\n\n        case tt.parenL:\n          this.next();\n\n          // Check to see if this is actually a grouped type\n          if (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n            if (this.match(tt.name)) {\n              const token = this.lookahead().type;\n              isGroupedType = token !== tt.question && token !== tt.colon;\n            } else {\n              isGroupedType = true;\n            }\n          }\n\n          if (isGroupedType) {\n            this.state.noAnonFunctionType = false;\n            type = this.flowParseType();\n            this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n            // A `,` or a `) =>` means this is an anonymous function type\n            if (\n              this.state.noAnonFunctionType ||\n              !(\n                this.match(tt.comma) ||\n                (this.match(tt.parenR) && this.lookahead().type === tt.arrow)\n              )\n            ) {\n              this.expect(tt.parenR);\n              return type;\n            } else {\n              // Eat a comma if there is one\n              this.eat(tt.comma);\n            }\n          }\n\n          if (type) {\n            tmp = this.flowParseFunctionTypeParams([\n              this.reinterpretTypeAsFunctionTypeParam(type),\n            ]);\n          } else {\n            tmp = this.flowParseFunctionTypeParams();\n          }\n\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n\n          this.expect(tt.parenR);\n\n          this.expect(tt.arrow);\n\n          node.returnType = this.flowParseType();\n\n          node.typeParameters = null;\n\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n        case tt.string:\n          return this.parseLiteral(\n            this.state.value,\n            \"StringLiteralTypeAnnotation\",\n          );\n\n        case tt._true:\n        case tt._false:\n          node.value = this.match(tt._true);\n          this.next();\n          return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            this.next();\n            if (this.match(tt.num)) {\n              return this.parseLiteral(\n                -this.state.value,\n                \"NumberLiteralTypeAnnotation\",\n                node.start,\n                node.loc.start,\n              );\n            }\n\n            if (this.match(tt.bigint)) {\n              return this.parseLiteral(\n                -this.state.value,\n                \"BigIntLiteralTypeAnnotation\",\n                node.start,\n                node.loc.start,\n              );\n            }\n\n            throw this.raise(\n              this.state.start,\n              FlowErrors.UnexpectedSubtractionOperand,\n            );\n          }\n\n          throw this.unexpected();\n        case tt.num:\n          return this.parseLiteral(\n            this.state.value,\n            \"NumberLiteralTypeAnnotation\",\n          );\n\n        case tt.bigint:\n          return this.parseLiteral(\n            this.state.value,\n            \"BigIntLiteralTypeAnnotation\",\n          );\n\n        case tt._void:\n          this.next();\n          return this.finishNode(node, \"VoidTypeAnnotation\");\n\n        case tt._null:\n          this.next();\n          return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n        case tt._this:\n          this.next();\n          return this.finishNode(node, \"ThisTypeAnnotation\");\n\n        case tt.star:\n          this.next();\n          return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n        default:\n          if (this.state.type.keyword === \"typeof\") {\n            return this.flowParseTypeofType();\n          } else if (this.state.type.keyword) {\n            const label = this.state.type.label;\n            this.next();\n            return super.createIdentifier(node, label);\n          }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParsePostfixType(): N.FlowTypeAnnotation {\n      const startPos = this.state.start,\n        startLoc = this.state.startLoc;\n      let type = this.flowParsePrimaryType();\n      while (this.match(tt.bracketL) && !this.canInsertSemicolon()) {\n        const node = this.startNodeAt(startPos, startLoc);\n        node.elementType = type;\n        this.expect(tt.bracketL);\n        this.expect(tt.bracketR);\n        type = this.finishNode(node, \"ArrayTypeAnnotation\");\n      }\n      return type;\n    }\n\n    flowParsePrefixType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      if (this.eat(tt.question)) {\n        node.typeAnnotation = this.flowParsePrefixType();\n        return this.finishNode(node, \"NullableTypeAnnotation\");\n      } else {\n        return this.flowParsePostfixType();\n      }\n    }\n\n    flowParseAnonFunctionWithoutParens(): N.FlowTypeAnnotation {\n      const param = this.flowParsePrefixType();\n      if (!this.state.noAnonFunctionType && this.eat(tt.arrow)) {\n        // TODO: This should be a type error. Passing in a SourceLocation, and it expects a Position.\n        const node = this.startNodeAt(param.start, param.loc.start);\n        node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n        node.rest = null;\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      }\n      return param;\n    }\n\n    flowParseIntersectionType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      this.eat(tt.bitwiseAND);\n      const type = this.flowParseAnonFunctionWithoutParens();\n      node.types = [type];\n      while (this.eat(tt.bitwiseAND)) {\n        node.types.push(this.flowParseAnonFunctionWithoutParens());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"IntersectionTypeAnnotation\");\n    }\n\n    flowParseUnionType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      this.eat(tt.bitwiseOR);\n      const type = this.flowParseIntersectionType();\n      node.types = [type];\n      while (this.eat(tt.bitwiseOR)) {\n        node.types.push(this.flowParseIntersectionType());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"UnionTypeAnnotation\");\n    }\n\n    flowParseType(): N.FlowTypeAnnotation {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const type = this.flowParseUnionType();\n      this.state.inType = oldInType;\n      // Ensure that a brace after a function generic type annotation is a\n      // statement, except in arrow functions (noAnonFunctionType)\n      this.state.exprAllowed =\n        this.state.exprAllowed || this.state.noAnonFunctionType;\n      return type;\n    }\n\n    flowParseTypeOrImplicitInstantiation(): N.FlowTypeAnnotation {\n      if (this.state.type === tt.name && this.state.value === \"_\") {\n        const startPos = this.state.start;\n        const startLoc = this.state.startLoc;\n        const node = this.parseIdentifier();\n        return this.flowParseGenericType(startPos, startLoc, node);\n      } else {\n        return this.flowParseType();\n      }\n    }\n\n    flowParseTypeAnnotation(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      node.typeAnnotation = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"TypeAnnotation\");\n    }\n\n    flowParseTypeAnnotatableIdentifier(\n      allowPrimitiveOverride?: boolean,\n    ): N.Identifier {\n      const ident = allowPrimitiveOverride\n        ? this.parseIdentifier()\n        : this.flowParseRestrictedIdentifier();\n      if (this.match(tt.colon)) {\n        ident.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(ident);\n      }\n      return ident;\n    }\n\n    typeCastToParameter(node: N.Node): N.Node {\n      node.expression.typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(\n        node.expression,\n        node.typeAnnotation.end,\n        node.typeAnnotation.loc.end,\n      );\n\n      return node.expression;\n    }\n\n    flowParseVariance(): ?N.FlowVariance {\n      let variance = null;\n      if (this.match(tt.plusMin)) {\n        variance = this.startNode();\n        if (this.state.value === \"+\") {\n          variance.kind = \"plus\";\n        } else {\n          variance.kind = \"minus\";\n        }\n        this.next();\n        this.finishNode(variance, \"Variance\");\n      }\n      return variance;\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpressionBody: ?boolean,\n      isMethod?: boolean = false,\n    ): void {\n      if (allowExpressionBody) {\n        return this.forwardNoArrowParamsConversionAt(node, () =>\n          super.parseFunctionBody(node, true, isMethod),\n        );\n      }\n\n      return super.parseFunctionBody(node, false, isMethod);\n    }\n\n    parseFunctionBodyAndFinish(\n      node: N.BodilessFunctionOrMethodBase,\n      type: string,\n      isMethod?: boolean = false,\n    ): void {\n      if (this.match(tt.colon)) {\n        const typeNode = this.startNode();\n\n        [\n          // $FlowFixMe (destructuring not supported yet)\n          typeNode.typeAnnotation,\n          // $FlowFixMe (destructuring not supported yet)\n          node.predicate,\n        ] = this.flowParseTypeAndPredicateInitialiser();\n\n        node.returnType = typeNode.typeAnnotation\n          ? this.finishNode(typeNode, \"TypeAnnotation\")\n          : null;\n      }\n\n      super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    // interfaces and enums\n    parseStatement(context: ?string, topLevel?: boolean): N.Statement {\n      // strict mode handling of `interface` since it's a reserved word\n      if (\n        this.state.strict &&\n        this.match(tt.name) &&\n        this.state.value === \"interface\"\n      ) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseInterface(node);\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      } else {\n        const stmt = super.parseStatement(context, topLevel);\n        // We will parse a flow pragma in any comment before the first statement.\n        if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n          this.flowPragma = null;\n        }\n        return stmt;\n      }\n    }\n\n    // declares, interfaces and type aliases\n    parseExpressionStatement(\n      node: N.ExpressionStatement,\n      expr: N.Expression,\n    ): N.ExpressionStatement {\n      if (expr.type === \"Identifier\") {\n        if (expr.name === \"declare\") {\n          if (\n            this.match(tt._class) ||\n            this.match(tt.name) ||\n            this.match(tt._function) ||\n            this.match(tt._var) ||\n            this.match(tt._export)\n          ) {\n            return this.flowParseDeclare(node);\n          }\n        } else if (this.match(tt.name)) {\n          if (expr.name === \"interface\") {\n            return this.flowParseInterface(node);\n          } else if (expr.name === \"type\") {\n            return this.flowParseTypeAlias(node);\n          } else if (expr.name === \"opaque\") {\n            return this.flowParseOpaqueType(node, false);\n          }\n        }\n      }\n\n      return super.parseExpressionStatement(node, expr);\n    }\n\n    // export type\n    shouldParseExportDeclaration(): boolean {\n      return (\n        this.isContextual(\"type\") ||\n        this.isContextual(\"interface\") ||\n        this.isContextual(\"opaque\") ||\n        (this.shouldParseEnums() && this.isContextual(\"enum\")) ||\n        super.shouldParseExportDeclaration()\n      );\n    }\n\n    isExportDefaultSpecifier(): boolean {\n      if (\n        this.match(tt.name) &&\n        (this.state.value === \"type\" ||\n          this.state.value === \"interface\" ||\n          this.state.value === \"opaque\" ||\n          (this.shouldParseEnums() && this.state.value === \"enum\"))\n      ) {\n        return false;\n      }\n\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseExportDefaultExpression(): N.Expression | N.Declaration {\n      if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n      return super.parseExportDefaultExpression();\n    }\n\n    parseConditional(\n      expr: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      refNeedsArrowPos?: ?Pos,\n    ): N.Expression {\n      if (!this.match(tt.question)) return expr;\n\n      // only use the expensive \"tryParse\" method if there is a question mark\n      // and if we come from inside parens\n      if (refNeedsArrowPos) {\n        const result = this.tryParse(() =>\n          super.parseConditional(expr, startPos, startLoc),\n        );\n\n        if (!result.node) {\n          // $FlowIgnore\n          refNeedsArrowPos.start = result.error.pos || this.state.start;\n          return expr;\n        }\n\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n\n      this.expect(tt.question);\n      const state = this.state.clone();\n      const originalNoArrowAt = this.state.noArrowAt;\n      const node = this.startNodeAt(startPos, startLoc);\n      let { consequent, failed } = this.tryParseConditionalConsequent();\n      let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n      if (failed || invalid.length > 0) {\n        const noArrowAt = [...originalNoArrowAt];\n\n        if (invalid.length > 0) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt;\n\n          for (let i = 0; i < invalid.length; i++) {\n            noArrowAt.push(invalid[i].start);\n          }\n\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n          [valid, invalid] = this.getArrowLikeExpressions(consequent);\n        }\n\n        if (failed && valid.length > 1) {\n          // if there are two or more possible correct ways of parsing, throw an\n          // error.\n          // e.g.   Source: a ? (b): c => (d): e => f\n          //      Result 1: a ? b : (c => ((d): e => f))\n          //      Result 2: a ? ((b): c => d) : (e => f)\n          this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\n        }\n\n        if (failed && valid.length === 1) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt.concat(valid[0].start);\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n        }\n      }\n\n      this.getArrowLikeExpressions(consequent, true);\n\n      this.state.noArrowAt = originalNoArrowAt;\n      this.expect(tt.colon);\n\n      node.test = expr;\n      node.consequent = consequent;\n      node.alternate = this.forwardNoArrowParamsConversionAt(node, () =>\n        this.parseMaybeAssign(undefined, undefined, undefined),\n      );\n\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    tryParseConditionalConsequent(): {\n      consequent: N.Expression,\n      failed: boolean,\n    } {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n\n      const consequent = this.parseMaybeAssignAllowIn();\n      const failed = !this.match(tt.colon);\n\n      this.state.noArrowParamsConversionAt.pop();\n\n      return { consequent, failed };\n    }\n\n    // Given an expression, walks through out its arrow functions whose body is\n    // an expression and through out conditional expressions. It returns every\n    // function which has been parsed with a return type but could have been\n    // parenthesized expressions.\n    // These functions are separated into two arrays: one containing the ones\n    // whose parameters can be converted to assignable lists, one containing the\n    // others.\n    getArrowLikeExpressions(\n      node: N.Expression,\n      disallowInvalid?: boolean,\n    ): [N.ArrowFunctionExpression[], N.ArrowFunctionExpression[]] {\n      const stack = [node];\n      const arrows: N.ArrowFunctionExpression[] = [];\n\n      while (stack.length !== 0) {\n        const node = stack.pop();\n        if (node.type === \"ArrowFunctionExpression\") {\n          if (node.typeParameters || !node.returnType) {\n            // This is an arrow expression without ambiguity, so check its parameters\n            this.finishArrowValidation(node);\n          } else {\n            arrows.push(node);\n          }\n          stack.push(node.body);\n        } else if (node.type === \"ConditionalExpression\") {\n          stack.push(node.consequent);\n          stack.push(node.alternate);\n        }\n      }\n\n      if (disallowInvalid) {\n        arrows.forEach(node => this.finishArrowValidation(node));\n        return [arrows, []];\n      }\n\n      return partition(arrows, node =>\n        node.params.every(param => this.isAssignable(param, true)),\n      );\n    }\n\n    finishArrowValidation(node: N.ArrowFunctionExpression) {\n      this.toAssignableList(\n        // node.params is Expression[] instead of $ReadOnlyArray<Pattern> because it\n        // has not been converted yet.\n        ((node.params: any): N.Expression[]),\n        node.extra?.trailingComma,\n      );\n      // Enter scope, as checkParams defines bindings\n      this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n      // Use super's method to force the parameters to be checked\n      super.checkParams(node, false, true);\n      this.scope.exit();\n    }\n\n    forwardNoArrowParamsConversionAt<T>(node: N.Node, parse: () => T): T {\n      let result: T;\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        this.state.noArrowParamsConversionAt.push(this.state.start);\n        result = parse();\n        this.state.noArrowParamsConversionAt.pop();\n      } else {\n        result = parse();\n      }\n\n      return result;\n    }\n\n    parseParenItem(\n      node: N.Expression,\n      startPos: number,\n      startLoc: Position,\n    ): N.Expression {\n      node = super.parseParenItem(node, startPos, startLoc);\n      if (this.eat(tt.question)) {\n        node.optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode = this.startNodeAt(startPos, startLoc);\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    assertModuleNodeAllowed(node: N.Node) {\n      if (\n        (node.type === \"ImportDeclaration\" &&\n          (node.importKind === \"type\" || node.importKind === \"typeof\")) ||\n        (node.type === \"ExportNamedDeclaration\" &&\n          node.exportKind === \"type\") ||\n        (node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\")\n      ) {\n        // Allow Flowtype imports and exports in all conditions because\n        // Flow itself does not care about 'sourceType'.\n        return;\n      }\n\n      super.assertModuleNodeAllowed(node);\n    }\n\n    parseExport(node: N.Node): N.AnyExport {\n      const decl = super.parseExport(node);\n      if (\n        decl.type === \"ExportNamedDeclaration\" ||\n        decl.type === \"ExportAllDeclaration\"\n      ) {\n        decl.exportKind = decl.exportKind || \"value\";\n      }\n      return decl;\n    }\n\n    parseExportDeclaration(node: N.ExportNamedDeclaration): ?N.Declaration {\n      if (this.isContextual(\"type\")) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n\n        if (this.match(tt.braceL)) {\n          // export type { foo, bar };\n          node.specifiers = this.parseExportSpecifiers();\n          this.parseExportFrom(node);\n          return null;\n        } else {\n          // export type Foo = Bar;\n          return this.flowParseTypeAlias(declarationNode);\n        }\n      } else if (this.isContextual(\"opaque\")) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n        // export opaque type Foo = Bar;\n        return this.flowParseOpaqueType(declarationNode, false);\n      } else if (this.isContextual(\"interface\")) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseInterface(declarationNode);\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        node.exportKind = \"value\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(declarationNode);\n      } else {\n        return super.parseExportDeclaration(node);\n      }\n    }\n\n    eatExportStar(node: N.Node): boolean {\n      if (super.eatExportStar(...arguments)) return true;\n\n      if (this.isContextual(\"type\") && this.lookahead().type === tt.star) {\n        node.exportKind = \"type\";\n        this.next();\n        this.next();\n        return true;\n      }\n\n      return false;\n    }\n\n    maybeParseExportNamespaceSpecifier(node: N.Node): boolean {\n      const pos = this.state.start;\n      const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n      if (hasNamespace && node.exportKind === \"type\") {\n        this.unexpected(pos);\n      }\n      return hasNamespace;\n    }\n\n    parseClassId(node: N.Class, isStatement: boolean, optionalId: ?boolean) {\n      super.parseClassId(node, isStatement, optionalId);\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: N.ParseClassMemberState,\n    ): void {\n      const pos = this.state.start;\n      if (this.isContextual(\"declare\")) {\n        if (this.parseClassMemberFromModifier(classBody, member)) {\n          // 'declare' is a class element name\n          return;\n        }\n\n        member.declare = true;\n      }\n\n      super.parseClassMember(classBody, member, state);\n\n      if (member.declare) {\n        if (\n          member.type !== \"ClassProperty\" &&\n          member.type !== \"ClassPrivateProperty\"\n        ) {\n          this.raise(pos, FlowErrors.DeclareClassElement);\n        } else if (member.value) {\n          this.raise(\n            member.value.start,\n            FlowErrors.DeclareClassFieldInitializer,\n          );\n        }\n      }\n    }\n\n    // ensure that inside flow types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (code === charCodes.leftCurlyBrace && next === charCodes.verticalBar) {\n        return this.finishOp(tt.braceBarL, 2);\n      } else if (\n        this.state.inType &&\n        (code === charCodes.greaterThan || code === charCodes.lessThan)\n      ) {\n        return this.finishOp(tt.relational, 1);\n      } else if (this.state.inType && code === charCodes.questionMark) {\n        // allow double nullable types in Flow: ??string\n        return this.finishOp(tt.question, 1);\n      } else if (isIteratorStart(code, next)) {\n        this.state.isIterator = true;\n        return super.readWord();\n      } else {\n        return super.getTokenFromCode(code);\n      }\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      switch (node.type) {\n        case \"Identifier\":\n        case \"ObjectPattern\":\n        case \"ArrayPattern\":\n        case \"AssignmentPattern\":\n          return true;\n\n        case \"ObjectExpression\": {\n          const last = node.properties.length - 1;\n          return node.properties.every((prop, i) => {\n            return (\n              prop.type !== \"ObjectMethod\" &&\n              (i === last || prop.type === \"SpreadElement\") &&\n              this.isAssignable(prop)\n            );\n          });\n        }\n\n        case \"ObjectProperty\":\n          return this.isAssignable(node.value);\n\n        case \"SpreadElement\":\n          return this.isAssignable(node.argument);\n\n        case \"ArrayExpression\":\n          return node.elements.every(element => this.isAssignable(element));\n\n        case \"AssignmentExpression\":\n          return node.operator === \"=\";\n\n        case \"ParenthesizedExpression\":\n        case \"TypeCastExpression\":\n          return this.isAssignable(node.expression);\n\n        case \"MemberExpression\":\n        case \"OptionalMemberExpression\":\n          return !isBinding;\n\n        default:\n          return false;\n      }\n    }\n\n    toAssignable(node: N.Node): N.Node {\n      if (node.type === \"TypeCastExpression\") {\n        return super.toAssignable(this.typeCastToParameter(node));\n      } else {\n        return super.toAssignable(node);\n      }\n    }\n\n    // turn type casts that we found in function parameter head into type annotated params\n    toAssignableList(\n      exprList: N.Expression[],\n      trailingCommaPos?: ?number,\n    ): $ReadOnlyArray<N.Pattern> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (expr?.type === \"TypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(expr);\n        }\n      }\n      return super.toAssignableList(exprList, trailingCommaPos);\n    }\n\n    // this is a list of nodes, from something like a call expression, we need to filter the\n    // type casts that we've found that are illegal in this context\n    toReferencedList(\n      exprList: $ReadOnlyArray<?N.Expression>,\n      isParenthesizedExpr?: boolean,\n    ): $ReadOnlyArray<?N.Expression> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (\n          expr &&\n          expr.type === \"TypeCastExpression\" &&\n          !expr.extra?.parenthesized &&\n          (exprList.length > 1 || !isParenthesizedExpr)\n        ) {\n          this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\n        }\n      }\n\n      return exprList;\n    }\n\n    checkLVal(\n      expr: N.Expression,\n      bindingType: BindingTypes = BIND_NONE,\n      checkClashes: ?{ [key: string]: boolean },\n      contextDescription: string,\n    ): void {\n      if (expr.type !== \"TypeCastExpression\") {\n        return super.checkLVal(\n          expr,\n          bindingType,\n          checkClashes,\n          contextDescription,\n        );\n      }\n    }\n\n    // parse class property type annotations\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      if (this.match(tt.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      if (this.match(tt.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassPrivateProperty(node);\n    }\n\n    // determine whether or not we're currently in the position where a class method would appear\n    isClassMethod(): boolean {\n      return this.isRelational(\"<\") || super.isClassMethod();\n    }\n\n    // determine whether or not we're currently in the position where a class property would appear\n    isClassProperty(): boolean {\n      return this.match(tt.colon) || super.isClassProperty();\n    }\n\n    isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n      return !this.match(tt.colon) && super.isNonstaticConstructor(method);\n    }\n\n    // parse type parameters for class methods\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      if ((method: $FlowFixMe).variance) {\n        this.unexpected((method: $FlowFixMe).variance.start);\n      }\n      delete (method: $FlowFixMe).variance;\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      if ((method: $FlowFixMe).variance) {\n        this.unexpected((method: $FlowFixMe).variance.start);\n      }\n      delete (method: $FlowFixMe).variance;\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    // parse a the super class type parameters and implements\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      if (node.superClass && this.isRelational(\"<\")) {\n        node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n      }\n      if (this.isContextual(\"implements\")) {\n        this.next();\n        const implemented: N.FlowClassImplements[] = (node.implements = []);\n        do {\n          const node = this.startNode();\n          node.id = this.flowParseRestrictedIdentifier(/*liberal*/ true);\n          if (this.isRelational(\"<\")) {\n            node.typeParameters = this.flowParseTypeParameterInstantiation();\n          } else {\n            node.typeParameters = null;\n          }\n          implemented.push(this.finishNode(node, \"ClassImplements\"));\n        } while (this.eat(tt.comma));\n      }\n    }\n\n    parsePropertyName(\n      node: N.ObjectOrClassMember | N.ClassMember | N.TsNamedTypeElementBase,\n      isPrivateNameAllowed: boolean,\n    ): N.Identifier {\n      const variance = this.flowParseVariance();\n      const key = super.parsePropertyName(node, isPrivateNameAllowed);\n      // $FlowIgnore (\"variance\" not defined on TsNamedTypeElementBase)\n      node.variance = variance;\n      return key;\n    }\n\n    // parse type parameters for object method shorthand\n    parseObjPropValue(\n      prop: N.ObjectMember,\n      startPos: ?number,\n      startLoc: ?Position,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n      refExpressionErrors: ?ExpressionErrors,\n    ): void {\n      if ((prop: $FlowFixMe).variance) {\n        this.unexpected((prop: $FlowFixMe).variance.start);\n      }\n      delete (prop: $FlowFixMe).variance;\n\n      let typeParameters;\n\n      // method shorthand\n      if (this.isRelational(\"<\") && !isAccessor) {\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        if (!this.match(tt.parenL)) this.unexpected();\n      }\n\n      super.parseObjPropValue(\n        prop,\n        startPos,\n        startLoc,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n        refExpressionErrors,\n      );\n\n      // add typeParameters if we found them\n      if (typeParameters) {\n        (prop.value || prop).typeParameters = typeParameters;\n      }\n    }\n\n    parseAssignableListItemTypes(param: N.Pattern): N.Pattern {\n      if (this.eat(tt.question)) {\n        if (param.type !== \"Identifier\") {\n          this.raise(param.start, FlowErrors.OptionalBindingPattern);\n        }\n\n        ((param: any): N.Identifier).optional = true;\n      }\n      if (this.match(tt.colon)) {\n        param.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      this.resetEndLocation(param);\n      return param;\n    }\n\n    parseMaybeDefault(\n      startPos?: ?number,\n      startLoc?: ?Position,\n      left?: ?N.Pattern,\n    ): N.Pattern {\n      const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\n      }\n\n      return node;\n    }\n\n    shouldParseDefaultImport(node: N.ImportDeclaration): boolean {\n      if (!hasTypeImportKind(node)) {\n        return super.shouldParseDefaultImport(node);\n      }\n\n      return isMaybeDefaultImport(this.state);\n    }\n\n    parseImportSpecifierLocal(\n      node: N.ImportDeclaration,\n      specifier: N.Node,\n      type: string,\n      contextDescription: string,\n    ): void {\n      specifier.local = hasTypeImportKind(node)\n        ? this.flowParseRestrictedIdentifier(\n            /* liberal */ true,\n            /* declaration */ true,\n          )\n        : this.parseIdentifier();\n\n      this.checkLVal(\n        specifier.local,\n        BIND_LEXICAL,\n        undefined,\n        contextDescription,\n      );\n      node.specifiers.push(this.finishNode(specifier, type));\n    }\n\n    // parse typeof and type imports\n    maybeParseDefaultImportSpecifier(node: N.ImportDeclaration): boolean {\n      node.importKind = \"value\";\n\n      let kind = null;\n      if (this.match(tt._typeof)) {\n        kind = \"typeof\";\n      } else if (this.isContextual(\"type\")) {\n        kind = \"type\";\n      }\n      if (kind) {\n        const lh = this.lookahead();\n\n        // import type * is not allowed\n        if (kind === \"type\" && lh.type === tt.star) {\n          this.unexpected(lh.start);\n        }\n\n        if (\n          isMaybeDefaultImport(lh) ||\n          lh.type === tt.braceL ||\n          lh.type === tt.star\n        ) {\n          this.next();\n          node.importKind = kind;\n        }\n      }\n\n      return super.maybeParseDefaultImportSpecifier(node);\n    }\n\n    // parse import-type/typeof shorthand\n    parseImportSpecifier(node: N.ImportDeclaration): void {\n      const specifier = this.startNode();\n      const firstIdentLoc = this.state.start;\n      const firstIdent = this.parseIdentifier(true);\n\n      let specifierTypeKind = null;\n      if (firstIdent.name === \"type\") {\n        specifierTypeKind = \"type\";\n      } else if (firstIdent.name === \"typeof\") {\n        specifierTypeKind = \"typeof\";\n      }\n\n      let isBinding = false;\n      if (this.isContextual(\"as\") && !this.isLookaheadContextual(\"as\")) {\n        const as_ident = this.parseIdentifier(true);\n        if (\n          specifierTypeKind !== null &&\n          !this.match(tt.name) &&\n          !this.state.type.keyword\n        ) {\n          // `import {type as ,` or `import {type as }`\n          specifier.imported = as_ident;\n          specifier.importKind = specifierTypeKind;\n          specifier.local = as_ident.__clone();\n        } else {\n          // `import {type as foo`\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n          specifier.local = this.parseIdentifier();\n        }\n      } else if (\n        specifierTypeKind !== null &&\n        (this.match(tt.name) || this.state.type.keyword)\n      ) {\n        // `import {type foo`\n        specifier.imported = this.parseIdentifier(true);\n        specifier.importKind = specifierTypeKind;\n        if (this.eatContextual(\"as\")) {\n          specifier.local = this.parseIdentifier();\n        } else {\n          isBinding = true;\n          specifier.local = specifier.imported.__clone();\n        }\n      } else {\n        isBinding = true;\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = specifier.imported.__clone();\n      }\n\n      const nodeIsTypeImport = hasTypeImportKind(node);\n      const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n      if (nodeIsTypeImport && specifierIsTypeImport) {\n        this.raise(\n          firstIdentLoc,\n          FlowErrors.ImportTypeShorthandOnlyInPureImport,\n        );\n      }\n\n      if (nodeIsTypeImport || specifierIsTypeImport) {\n        this.checkReservedType(\n          specifier.local.name,\n          specifier.local.start,\n          /* declaration */ true,\n        );\n      }\n\n      if (isBinding && !nodeIsTypeImport && !specifierIsTypeImport) {\n        this.checkReservedWord(\n          specifier.local.name,\n          specifier.start,\n          true,\n          true,\n        );\n      }\n\n      this.checkLVal(\n        specifier.local,\n        BIND_LEXICAL,\n        undefined,\n        \"import specifier\",\n      );\n      node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n    }\n\n    // parse function type parameters - function foo<T>() {}\n    parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n      // $FlowFixMe\n      const kind = node.kind;\n      if (kind !== \"get\" && kind !== \"set\" && this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    // parse flow type annotations on variable declarator heads - let foo: string = bar\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (this.match(tt.colon)) {\n        decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        node.returnType = this.flowParseTypeAnnotation();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      }\n\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    // todo description\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    // We need to support type parameter declarations for arrow functions. This\n    // is tricky. There are three situations we need to handle\n    //\n    // 1. This is either JSX or an arrow function. We'll try JSX first. If that\n    //    fails, we'll try an arrow function. If that fails, we'll throw the JSX\n    //    error.\n    // 2. This is an arrow function. We'll parse the type parameter declaration,\n    //    parse the rest, make sure the rest is an arrow function, and go from\n    //    there\n    // 3. This is neither. Just call the super method\n    parseMaybeAssign(\n      refExpressionErrors?: ?ExpressionErrors,\n      afterLeftParse?: Function,\n      refNeedsArrowPos?: ?Pos,\n    ): N.Expression {\n      let state = null;\n\n      let jsx;\n\n      if (\n        this.hasPlugin(\"jsx\") &&\n        (this.match(tt.jsxTagStart) || this.isRelational(\"<\"))\n      ) {\n        state = this.state.clone();\n\n        jsx = this.tryParse(\n          () =>\n            super.parseMaybeAssign(\n              refExpressionErrors,\n              afterLeftParse,\n              refNeedsArrowPos,\n            ),\n          state,\n        );\n        /*:: invariant(!jsx.aborted) */\n\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` and `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        if (context[context.length - 1] === tc.j_oTag) {\n          context.length -= 2;\n        } else if (context[context.length - 1] === tc.j_expr) {\n          context.length -= 1;\n        }\n      }\n\n      if (jsx?.error || this.isRelational(\"<\")) {\n        state = state || this.state.clone();\n\n        let typeParameters;\n\n        const arrow = this.tryParse(abort => {\n          typeParameters = this.flowParseTypeParameterDeclaration();\n\n          const arrowExpression = this.forwardNoArrowParamsConversionAt(\n            typeParameters,\n            () => {\n              const result = super.parseMaybeAssign(\n                refExpressionErrors,\n                afterLeftParse,\n                refNeedsArrowPos,\n              );\n\n              this.resetStartLocationFromNode(result, typeParameters);\n\n              return result;\n            },\n          );\n\n          // <T>(() => {}: any);\n          if (\n            arrowExpression.type !== \"ArrowFunctionExpression\" &&\n            arrowExpression.extra?.parenthesized\n          ) {\n            abort();\n          }\n\n          // The above can return a TypeCastExpression when the arrow\n          // expression is not wrapped in parens. See also `this.parseParenItem`.\n          const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n          expr.typeParameters = typeParameters;\n          this.resetStartLocationFromNode(expr, typeParameters);\n\n          return arrowExpression;\n        }, state);\n\n        let arrowExpression: ?(\n          | N.ArrowFunctionExpression\n          | N.TypeCastExpression\n        ) = null;\n\n        if (\n          arrow.node &&\n          this.maybeUnwrapTypeCastExpression(arrow.node).type ===\n            \"ArrowFunctionExpression\"\n        ) {\n          if (!arrow.error && !arrow.aborted) {\n            // <T> async () => {}\n            if (arrow.node.async) {\n              /*:: invariant(typeParameters) */\n              this.raise(\n                typeParameters.start,\n                FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction,\n              );\n            }\n\n            return arrow.node;\n          }\n\n          arrowExpression = arrow.node;\n        }\n\n        // If we are here, both JSX and Flow parsing attempts failed.\n        // Give the precedence to the JSX error, except if JSX had an\n        // unrecoverable error while Flow didn't.\n        // If the error is recoverable, we can only re-report it if there is\n        // a node we can return.\n\n        if (jsx?.node) {\n          /*:: invariant(jsx.failState) */\n          this.state = jsx.failState;\n          return jsx.node;\n        }\n\n        if (arrowExpression) {\n          /*:: invariant(arrow.failState) */\n          this.state = arrow.failState;\n          return arrowExpression;\n        }\n\n        if (jsx?.thrown) throw jsx.error;\n        if (arrow.thrown) throw arrow.error;\n\n        /*:: invariant(typeParameters) */\n        throw this.raise(\n          typeParameters.start,\n          FlowErrors.UnexpectedTokenAfterTypeParameter,\n        );\n      }\n\n      return super.parseMaybeAssign(\n        refExpressionErrors,\n        afterLeftParse,\n        refNeedsArrowPos,\n      );\n    }\n\n    // handle return types for arrow functions\n    parseArrow(node: N.ArrowFunctionExpression): ?N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        const result = this.tryParse(() => {\n          const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n          this.state.noAnonFunctionType = true;\n\n          const typeNode = this.startNode();\n\n          [\n            // $FlowFixMe (destructuring not supported yet)\n            typeNode.typeAnnotation,\n            // $FlowFixMe (destructuring not supported yet)\n            node.predicate,\n          ] = this.flowParseTypeAndPredicateInitialiser();\n\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.canInsertSemicolon()) this.unexpected();\n          if (!this.match(tt.arrow)) this.unexpected();\n\n          return typeNode;\n        });\n\n        if (result.thrown) return null;\n        /*:: invariant(result.node) */\n\n        if (result.error) this.state = result.failState;\n\n        // assign after it is clear it is an arrow\n        node.returnType = result.node.typeAnnotation\n          ? this.finishNode(result.node, \"TypeAnnotation\")\n          : null;\n      }\n\n      return super.parseArrow(node);\n    }\n\n    shouldParseArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseArrow();\n    }\n\n    setArrowFunctionParameters(\n      node: N.ArrowFunctionExpression,\n      params: N.Expression[],\n    ): void {\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        node.params = params;\n      } else {\n        super.setArrowFunctionParameters(node, params);\n      }\n    }\n\n    checkParams(\n      node: N.Function,\n      allowDuplicates: boolean,\n      isArrowFunction: ?boolean,\n    ): void {\n      if (\n        isArrowFunction &&\n        this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1\n      ) {\n        return;\n      }\n\n      return super.checkParams(...arguments);\n    }\n\n    parseParenAndDistinguishExpression(canBeArrow: boolean): N.Expression {\n      return super.parseParenAndDistinguishExpression(\n        canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1,\n      );\n    }\n\n    parseSubscripts(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls?: ?boolean,\n    ): N.Expression {\n      if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.state.noArrowAt.indexOf(startPos) !== -1\n      ) {\n        this.next();\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n        base = this.finishNode(node, \"CallExpression\");\n      } else if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.isRelational(\"<\")\n      ) {\n        const state = this.state.clone();\n        const arrow = this.tryParse(\n          abort =>\n            this.parseAsyncArrowWithTypeParameters(startPos, startLoc) ||\n            abort(),\n          state,\n        );\n\n        if (!arrow.error && !arrow.aborted) return arrow.node;\n\n        const result = this.tryParse(\n          () => super.parseSubscripts(base, startPos, startLoc, noCalls),\n          state,\n        );\n\n        if (result.node && !result.error) return result.node;\n\n        if (arrow.node) {\n          this.state = arrow.failState;\n          return arrow.node;\n        }\n\n        if (result.node) {\n          this.state = result.failState;\n          return result.node;\n        }\n\n        throw arrow.error || result.error;\n      }\n\n      return super.parseSubscripts(base, startPos, startLoc, noCalls);\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: ?boolean,\n      subscriptState: N.ParseSubscriptState,\n    ): N.Expression {\n      if (this.match(tt.questionDot) && this.isLookaheadToken_lt()) {\n        subscriptState.optionalChainMember = true;\n        if (noCalls) {\n          subscriptState.stop = true;\n          return base;\n        }\n        this.next();\n        const node: N.OptionalCallExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        node.callee = base;\n        node.typeArguments = this.flowParseTypeParameterInstantiation();\n        this.expect(tt.parenL);\n        // $FlowFixMe\n        node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n        node.optional = true;\n        return this.finishCallExpression(node, /* optional */ true);\n      } else if (\n        !noCalls &&\n        this.shouldParseTypes() &&\n        this.isRelational(\"<\")\n      ) {\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n\n        const result = this.tryParse(() => {\n          node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();\n          this.expect(tt.parenL);\n          node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n          if (subscriptState.optionalChainMember) node.optional = false;\n          return this.finishCallExpression(\n            node,\n            subscriptState.optionalChainMember,\n          );\n        });\n\n        if (result.node) {\n          if (result.error) this.state = result.failState;\n          return result.node;\n        }\n      }\n\n      return super.parseSubscript(\n        base,\n        startPos,\n        startLoc,\n        noCalls,\n        subscriptState,\n      );\n    }\n\n    parseNewArguments(node: N.NewExpression): void {\n      let targs = null;\n      if (this.shouldParseTypes() && this.isRelational(\"<\")) {\n        targs = this.tryParse(() =>\n          this.flowParseTypeParameterInstantiationCallOrNew(),\n        ).node;\n      }\n      node.typeArguments = targs;\n\n      super.parseNewArguments(node);\n    }\n\n    parseAsyncArrowWithTypeParameters(\n      startPos: number,\n      startLoc: Position,\n    ): ?N.ArrowFunctionExpression {\n      const node = this.startNodeAt(startPos, startLoc);\n      this.parseFunctionParams(node);\n      if (!this.parseArrow(node)) return;\n      return this.parseArrowExpression(\n        node,\n        /* params */ undefined,\n        /* isAsync */ true,\n      );\n    }\n\n    readToken_mult_modulo(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.asterisk &&\n        next === charCodes.slash &&\n        this.state.hasFlowComment\n      ) {\n        this.state.hasFlowComment = false;\n        this.state.pos += 2;\n        this.nextToken();\n        return;\n      }\n\n      super.readToken_mult_modulo(code);\n    }\n\n    readToken_pipe_amp(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.verticalBar &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        // '|}'\n        this.finishOp(tt.braceBarR, 2);\n        return;\n      }\n\n      super.readToken_pipe_amp(code);\n    }\n\n    parseTopLevel(file: N.File, program: N.Program): N.File {\n      const fileNode = super.parseTopLevel(file, program);\n      if (this.state.hasFlowComment) {\n        this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\n      }\n      return fileNode;\n    }\n\n    skipBlockComment(): void {\n      if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n        if (this.state.hasFlowComment) {\n          this.unexpected(null, FlowErrors.NestedFlowComment);\n        }\n        this.hasFlowCommentCompletion();\n        this.state.pos += this.skipFlowComment();\n        this.state.hasFlowComment = true;\n        return;\n      }\n\n      if (this.state.hasFlowComment) {\n        const end = this.input.indexOf(\"*-/\", (this.state.pos += 2));\n        if (end === -1) {\n          throw this.raise(this.state.pos - 2, Errors.UnterminatedComment);\n        }\n        this.state.pos = end + 3;\n        return;\n      }\n\n      super.skipBlockComment();\n    }\n\n    skipFlowComment(): number | boolean {\n      const { pos } = this.state;\n      let shiftToFirstNonWhiteSpace = 2;\n      while (\n        [charCodes.space, charCodes.tab].includes(\n          this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace),\n        )\n      ) {\n        shiftToFirstNonWhiteSpace++;\n      }\n\n      const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n      const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n      if (ch2 === charCodes.colon && ch3 === charCodes.colon) {\n        return shiftToFirstNonWhiteSpace + 2; // check for /*::\n      }\n      if (\n        this.input.slice(\n          shiftToFirstNonWhiteSpace + pos,\n          shiftToFirstNonWhiteSpace + pos + 12,\n        ) === \"flow-include\"\n      ) {\n        return shiftToFirstNonWhiteSpace + 12; // check for /*flow-include\n      }\n      if (ch2 === charCodes.colon && ch3 !== charCodes.colon) {\n        return shiftToFirstNonWhiteSpace; // check for /*:, advance up to :\n      }\n      return false;\n    }\n\n    hasFlowCommentCompletion(): void {\n      const end = this.input.indexOf(\"*/\", this.state.pos);\n      if (end === -1) {\n        throw this.raise(this.state.pos, Errors.UnterminatedComment);\n      }\n    }\n\n    // Flow enum parsing\n\n    flowEnumErrorBooleanMemberNotInitialized(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      this.raise(\n        pos,\n        FlowErrors.EnumBooleanMemberNotInitialized,\n        memberName,\n        enumName,\n      );\n    }\n\n    flowEnumErrorInvalidMemberName(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      const suggestion = memberName[0].toUpperCase() + memberName.slice(1);\n      this.raise(\n        pos,\n        FlowErrors.EnumInvalidMemberName,\n        memberName,\n        suggestion,\n        enumName,\n      );\n    }\n\n    flowEnumErrorDuplicateMemberName(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\n    }\n\n    flowEnumErrorInconsistentMemberValues(\n      pos: number,\n      { enumName }: { enumName: string },\n    ): void {\n      this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\n    }\n\n    flowEnumErrorInvalidExplicitType(\n      pos: number,\n      {\n        enumName,\n        suppliedType,\n      }: { enumName: string, suppliedType: null | string },\n    ) {\n      return this.raise(\n        pos,\n        suppliedType === null\n          ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied\n          : FlowErrors.EnumInvalidExplicitType,\n        enumName,\n        suppliedType,\n      );\n    }\n\n    flowEnumErrorInvalidMemberInitializer(\n      pos: number,\n      { enumName, explicitType, memberName }: EnumContext,\n    ) {\n      let message = null;\n      switch (explicitType) {\n        case \"boolean\":\n        case \"number\":\n        case \"string\":\n          message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\n          break;\n        case \"symbol\":\n          message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\n          break;\n        default:\n          // null\n          message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\n      }\n      return this.raise(pos, message, enumName, memberName, explicitType);\n    }\n\n    flowEnumErrorNumberMemberNotInitialized(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      this.raise(\n        pos,\n        FlowErrors.EnumNumberMemberNotInitialized,\n        enumName,\n        memberName,\n      );\n    }\n\n    flowEnumErrorStringMemberInconsistentlyInitailized(\n      pos: number,\n      { enumName }: { enumName: string },\n    ): void {\n      this.raise(\n        pos,\n        FlowErrors.EnumStringMemberInconsistentlyInitailized,\n        enumName,\n      );\n    }\n\n    flowEnumMemberInit(): EnumMemberInit {\n      const startPos = this.state.start;\n      const endOfInit = () => this.match(tt.comma) || this.match(tt.braceR);\n      switch (this.state.type) {\n        case tt.num: {\n          const literal = this.parseLiteral(this.state.value, \"NumericLiteral\");\n          if (endOfInit()) {\n            return { type: \"number\", pos: literal.start, value: literal };\n          }\n          return { type: \"invalid\", pos: startPos };\n        }\n        case tt.string: {\n          const literal = this.parseLiteral(this.state.value, \"StringLiteral\");\n          if (endOfInit()) {\n            return { type: \"string\", pos: literal.start, value: literal };\n          }\n          return { type: \"invalid\", pos: startPos };\n        }\n        case tt._true:\n        case tt._false: {\n          const literal = this.parseBooleanLiteral();\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              pos: literal.start,\n              value: literal,\n            };\n          }\n          return { type: \"invalid\", pos: startPos };\n        }\n        default:\n          return { type: \"invalid\", pos: startPos };\n      }\n    }\n\n    flowEnumMemberRaw(): { id: N.Node, init: EnumMemberInit } {\n      const pos = this.state.start;\n      const id = this.parseIdentifier(true);\n      const init = this.eat(tt.eq)\n        ? this.flowEnumMemberInit()\n        : { type: \"none\", pos };\n      return { id, init };\n    }\n\n    flowEnumCheckExplicitTypeMismatch(\n      pos: number,\n      context: EnumContext,\n      expectedType: EnumExplicitType,\n    ): void {\n      const { explicitType } = context;\n      if (explicitType === null) {\n        return;\n      }\n      if (explicitType !== expectedType) {\n        this.flowEnumErrorInvalidMemberInitializer(pos, context);\n      }\n    }\n\n    flowEnumMembers({\n      enumName,\n      explicitType,\n    }: {\n      enumName: string,\n      explicitType: EnumExplicitType,\n    }): {|\n      booleanMembers: Array<N.Node>,\n      numberMembers: Array<N.Node>,\n      stringMembers: Array<N.Node>,\n      defaultedMembers: Array<N.Node>,\n    |} {\n      const seenNames = new Set();\n      const members = {\n        booleanMembers: [],\n        numberMembers: [],\n        stringMembers: [],\n        defaultedMembers: [],\n      };\n      while (!this.match(tt.braceR)) {\n        const memberNode = this.startNode();\n        const { id, init } = this.flowEnumMemberRaw();\n        const memberName = id.name;\n        if (memberName === \"\") {\n          continue;\n        }\n        if (/^[a-z]/.test(memberName)) {\n          this.flowEnumErrorInvalidMemberName(id.start, {\n            enumName,\n            memberName,\n          });\n        }\n        if (seenNames.has(memberName)) {\n          this.flowEnumErrorDuplicateMemberName(id.start, {\n            enumName,\n            memberName,\n          });\n        }\n        seenNames.add(memberName);\n        const context = { enumName, explicitType, memberName };\n        memberNode.id = id;\n        switch (init.type) {\n          case \"boolean\": {\n            this.flowEnumCheckExplicitTypeMismatch(\n              init.pos,\n              context,\n              \"boolean\",\n            );\n            memberNode.init = init.value;\n            members.booleanMembers.push(\n              this.finishNode(memberNode, \"EnumBooleanMember\"),\n            );\n            break;\n          }\n          case \"number\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(\n              this.finishNode(memberNode, \"EnumNumberMember\"),\n            );\n            break;\n          }\n          case \"string\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(\n              this.finishNode(memberNode, \"EnumStringMember\"),\n            );\n            break;\n          }\n          case \"invalid\": {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\n          }\n          case \"none\": {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(\n                  init.pos,\n                  context,\n                );\n                break;\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\n                break;\n              default:\n                members.defaultedMembers.push(\n                  this.finishNode(memberNode, \"EnumDefaultedMember\"),\n                );\n            }\n          }\n        }\n\n        if (!this.match(tt.braceR)) {\n          this.expect(tt.comma);\n        }\n      }\n      return members;\n    }\n\n    flowEnumStringMembers(\n      initializedMembers: Array<N.Node>,\n      defaultedMembers: Array<N.Node>,\n      { enumName }: { enumName: string },\n    ): Array<N.Node> {\n      if (initializedMembers.length === 0) {\n        return defaultedMembers;\n      } else if (defaultedMembers.length === 0) {\n        return initializedMembers;\n      } else if (defaultedMembers.length > initializedMembers.length) {\n        for (const member of initializedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(\n            member.start,\n            { enumName },\n          );\n        }\n        return defaultedMembers;\n      } else {\n        for (const member of defaultedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(\n            member.start,\n            { enumName },\n          );\n        }\n        return initializedMembers;\n      }\n    }\n\n    flowEnumParseExplicitType({\n      enumName,\n    }: {\n      enumName: string,\n    }): EnumExplicitType {\n      if (this.eatContextual(\"of\")) {\n        if (!this.match(tt.name)) {\n          throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: null,\n          });\n        }\n\n        const { value } = this.state;\n        this.next();\n\n        if (\n          value !== \"boolean\" &&\n          value !== \"number\" &&\n          value !== \"string\" &&\n          value !== \"symbol\"\n        ) {\n          this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: value,\n          });\n        }\n\n        return value;\n      }\n      return null;\n    }\n\n    flowEnumBody(node: N.Node, { enumName, nameLoc }): N.Node {\n      const explicitType = this.flowEnumParseExplicitType({ enumName });\n      this.expect(tt.braceL);\n      const members = this.flowEnumMembers({ enumName, explicitType });\n\n      switch (explicitType) {\n        case \"boolean\":\n          node.explicitType = true;\n          node.members = members.booleanMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumBooleanBody\");\n        case \"number\":\n          node.explicitType = true;\n          node.members = members.numberMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumNumberBody\");\n        case \"string\":\n          node.explicitType = true;\n          node.members = this.flowEnumStringMembers(\n            members.stringMembers,\n            members.defaultedMembers,\n            { enumName },\n          );\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumStringBody\");\n        case \"symbol\":\n          node.members = members.defaultedMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumSymbolBody\");\n        default: {\n          // `explicitType` is `null`\n          const empty = () => {\n            node.members = [];\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n          node.explicitType = false;\n\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(\n              members.stringMembers,\n              members.defaultedMembers,\n              { enumName },\n            );\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.booleanMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.numberMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.flowEnumErrorInconsistentMemberValues(nameLoc, { enumName });\n            return empty();\n          }\n        }\n      }\n    }\n\n    flowParseEnumDeclaration(node: N.Node): N.Node {\n      const id = this.parseIdentifier();\n      node.id = id;\n      node.body = this.flowEnumBody(this.startNode(), {\n        enumName: id.name,\n        nameLoc: id.start,\n      });\n      return this.finishNode(node, \"EnumDeclaration\");\n    }\n\n    updateContext(prevType: TokenType): void {\n      if (\n        this.match(tt.name) &&\n        this.state.value === \"of\" &&\n        prevType === tt.name &&\n        this.input.slice(this.state.lastTokStart, this.state.lastTokEnd) ===\n          \"interface\"\n      ) {\n        this.state.exprAllowed = false;\n      } else {\n        super.updateContext(prevType);\n      }\n    }\n\n    // check if the next token is a tt.relation(\"<\")\n    isLookaheadToken_lt(): boolean {\n      const next = this.nextTokenStart();\n      if (this.input.charCodeAt(next) === charCodes.lessThan) {\n        const afterNext = this.input.charCodeAt(next + 1);\n        return (\n          afterNext !== charCodes.lessThan && afterNext !== charCodes.equalsTo\n        );\n      }\n      return false;\n    }\n\n    maybeUnwrapTypeCastExpression(node: N.Node) {\n      return node.type === \"TypeCastExpression\" ? node.expression : node;\n    }\n  };\n","// @flow\n\nconst entities: { [name: string]: string } = {\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\",\n};\nexport default entities;\n","// @flow\n\n// Error messages are colocated with the plugin.\n/* eslint-disable @babel/development-internal/dry-error-messages */\n\nimport * as charCodes from \"charcodes\";\n\nimport XHTMLEntities from \"./xhtml\";\nimport type Parser from \"../../parser\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport { TokenType, types as tt } from \"../../tokenizer/types\";\nimport { TokContext, types as tc } from \"../../tokenizer/context\";\nimport * as N from \"../../types\";\nimport { isIdentifierChar, isIdentifierStart } from \"../../util/identifier\";\nimport type { Position } from \"../../util/location\";\nimport { isNewLine } from \"../../util/whitespace\";\nimport { Errors } from \"../../parser/error\";\n\nconst HEX_NUMBER = /^[\\da-fA-F]+$/;\nconst DECIMAL_NUMBER = /^\\d+$/;\n\nconst JsxErrors = Object.freeze({\n  AttributeIsEmpty:\n    \"JSX attributes must only be assigned a non-empty expression\",\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>\",\n  MissingClosingTagElement: \"Expected corresponding JSX closing tag for <%0>\",\n  UnsupportedJsxValue:\n    \"JSX value should be either an expression or a quoted JSX text\",\n  UnterminatedJsxContent: \"Unterminated JSX contents\",\n  UnwrappedAdjacentJSXElements:\n    \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\",\n});\n\n// Be aware that this file is always executed and not only when the plugin is enabled.\n// Therefore this contexts and tokens do always exist.\ntc.j_oTag = new TokContext(\"<tag\", false);\ntc.j_cTag = new TokContext(\"</tag\", false);\ntc.j_expr = new TokContext(\"<tag>...</tag>\", true, true);\n\ntt.jsxName = new TokenType(\"jsxName\");\ntt.jsxText = new TokenType(\"jsxText\", { beforeExpr: true });\ntt.jsxTagStart = new TokenType(\"jsxTagStart\", { startsExpr: true });\ntt.jsxTagEnd = new TokenType(\"jsxTagEnd\");\n\ntt.jsxTagStart.updateContext = function () {\n  this.state.context.push(tc.j_expr); // treat as beginning of JSX expression\n  this.state.context.push(tc.j_oTag); // start opening tag context\n  this.state.exprAllowed = false;\n};\n\ntt.jsxTagEnd.updateContext = function (prevType) {\n  const out = this.state.context.pop();\n  if ((out === tc.j_oTag && prevType === tt.slash) || out === tc.j_cTag) {\n    this.state.context.pop();\n    this.state.exprAllowed = this.curContext() === tc.j_expr;\n  } else {\n    this.state.exprAllowed = true;\n  }\n};\n\nfunction isFragment(object: ?N.JSXElement): boolean {\n  return object\n    ? object.type === \"JSXOpeningFragment\" ||\n        object.type === \"JSXClosingFragment\"\n    : false;\n}\n\n// Transforms JSX element name to string.\n\nfunction getQualifiedJSXName(\n  object: N.JSXIdentifier | N.JSXNamespacedName | N.JSXMemberExpression,\n): string {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return (\n      getQualifiedJSXName(object.object) +\n      \".\" +\n      getQualifiedJSXName(object.property)\n    );\n  }\n\n  // istanbul ignore next\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    // Reads inline JSX contents token.\n\n    jsxReadToken(): void {\n      let out = \"\";\n      let chunkStart = this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n\n        switch (ch) {\n          case charCodes.lessThan:\n          case charCodes.leftCurlyBrace:\n            if (this.state.pos === this.state.start) {\n              if (ch === charCodes.lessThan && this.state.exprAllowed) {\n                ++this.state.pos;\n                return this.finishToken(tt.jsxTagStart);\n              }\n              return super.getTokenFromCode(ch);\n            }\n            out += this.input.slice(chunkStart, this.state.pos);\n            return this.finishToken(tt.jsxText, out);\n\n          case charCodes.ampersand:\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadEntity();\n            chunkStart = this.state.pos;\n            break;\n\n          default:\n            if (isNewLine(ch)) {\n              out += this.input.slice(chunkStart, this.state.pos);\n              out += this.jsxReadNewLine(true);\n              chunkStart = this.state.pos;\n            } else {\n              ++this.state.pos;\n            }\n        }\n      }\n    }\n\n    jsxReadNewLine(normalizeCRLF: boolean): string {\n      const ch = this.input.charCodeAt(this.state.pos);\n      let out;\n      ++this.state.pos;\n      if (\n        ch === charCodes.carriageReturn &&\n        this.input.charCodeAt(this.state.pos) === charCodes.lineFeed\n      ) {\n        ++this.state.pos;\n        out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n      } else {\n        out = String.fromCharCode(ch);\n      }\n      ++this.state.curLine;\n      this.state.lineStart = this.state.pos;\n\n      return out;\n    }\n\n    jsxReadString(quote: number): void {\n      let out = \"\";\n      let chunkStart = ++this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(this.state.start, Errors.UnterminatedString);\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n        if (ch === quote) break;\n        if (ch === charCodes.ampersand) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n        } else if (isNewLine(ch)) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadNewLine(false);\n          chunkStart = this.state.pos;\n        } else {\n          ++this.state.pos;\n        }\n      }\n      out += this.input.slice(chunkStart, this.state.pos++);\n      return this.finishToken(tt.string, out);\n    }\n\n    jsxReadEntity(): string {\n      let str = \"\";\n      let count = 0;\n      let entity;\n      let ch = this.input[this.state.pos];\n\n      const startPos = ++this.state.pos;\n      while (this.state.pos < this.length && count++ < 10) {\n        ch = this.input[this.state.pos++];\n        if (ch === \";\") {\n          if (str[0] === \"#\") {\n            if (str[1] === \"x\") {\n              str = str.substr(2);\n              if (HEX_NUMBER.test(str)) {\n                entity = String.fromCodePoint(parseInt(str, 16));\n              }\n            } else {\n              str = str.substr(1);\n              if (DECIMAL_NUMBER.test(str)) {\n                entity = String.fromCodePoint(parseInt(str, 10));\n              }\n            }\n          } else {\n            entity = XHTMLEntities[str];\n          }\n          break;\n        }\n        str += ch;\n      }\n      if (!entity) {\n        this.state.pos = startPos;\n        return \"&\";\n      }\n      return entity;\n    }\n\n    // Read a JSX identifier (valid tag or attribute name).\n    //\n    // Optimized version since JSX identifiers can\"t contain\n    // escape characters and so can be read as single slice.\n    // Also assumes that first character was already checked\n    // by isIdentifierStart in readToken.\n\n    jsxReadWord(): void {\n      let ch;\n      const start = this.state.pos;\n      do {\n        ch = this.input.charCodeAt(++this.state.pos);\n      } while (isIdentifierChar(ch) || ch === charCodes.dash);\n      return this.finishToken(\n        tt.jsxName,\n        this.input.slice(start, this.state.pos),\n      );\n    }\n\n    // Parse next token as JSX identifier\n\n    jsxParseIdentifier(): N.JSXIdentifier {\n      const node = this.startNode();\n      if (this.match(tt.jsxName)) {\n        node.name = this.state.value;\n      } else if (this.state.type.keyword) {\n        node.name = this.state.type.keyword;\n      } else {\n        this.unexpected();\n      }\n      this.next();\n      return this.finishNode(node, \"JSXIdentifier\");\n    }\n\n    // Parse namespaced identifier.\n\n    jsxParseNamespacedName(): N.JSXNamespacedName {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const name = this.jsxParseIdentifier();\n      if (!this.eat(tt.colon)) return name;\n\n      const node = this.startNodeAt(startPos, startLoc);\n      node.namespace = name;\n      node.name = this.jsxParseIdentifier();\n      return this.finishNode(node, \"JSXNamespacedName\");\n    }\n\n    // Parses element name in any form - namespaced, member\n    // or single identifier.\n\n    jsxParseElementName():\n      | N.JSXIdentifier\n      | N.JSXNamespacedName\n      | N.JSXMemberExpression {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let node = this.jsxParseNamespacedName();\n      if (node.type === \"JSXNamespacedName\") {\n        return node;\n      }\n      while (this.eat(tt.dot)) {\n        const newNode = this.startNodeAt(startPos, startLoc);\n        newNode.object = node;\n        newNode.property = this.jsxParseIdentifier();\n        node = this.finishNode(newNode, \"JSXMemberExpression\");\n      }\n      return node;\n    }\n\n    // Parses any type of JSX attribute value.\n\n    jsxParseAttributeValue(): N.Expression {\n      let node;\n      switch (this.state.type) {\n        case tt.braceL:\n          node = this.startNode();\n          this.next();\n          node = this.jsxParseExpressionContainer(node);\n          if (node.expression.type === \"JSXEmptyExpression\") {\n            this.raise(node.start, JsxErrors.AttributeIsEmpty);\n          }\n          return node;\n\n        case tt.jsxTagStart:\n        case tt.string:\n          return this.parseExprAtom();\n\n        default:\n          throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);\n      }\n    }\n\n    // JSXEmptyExpression is unique type since it doesn't actually parse anything,\n    // and so it should start at the end of last read token (left brace) and finish\n    // at the beginning of the next one (right brace).\n\n    jsxParseEmptyExpression(): N.JSXEmptyExpression {\n      const node = this.startNodeAt(\n        this.state.lastTokEnd,\n        this.state.lastTokEndLoc,\n      );\n      return this.finishNodeAt(\n        node,\n        \"JSXEmptyExpression\",\n        this.state.start,\n        this.state.startLoc,\n      );\n    }\n\n    // Parse JSX spread child\n\n    jsxParseSpreadChild(node: N.JSXSpreadChild): N.JSXSpreadChild {\n      this.next(); // ellipsis\n      node.expression = this.parseExpression();\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"JSXSpreadChild\");\n    }\n\n    // Parses JSX expression enclosed into curly brackets.\n\n    jsxParseExpressionContainer(\n      node: N.JSXExpressionContainer,\n    ): N.JSXExpressionContainer {\n      if (this.match(tt.braceR)) {\n        node.expression = this.jsxParseEmptyExpression();\n      } else {\n        node.expression = this.parseExpression();\n      }\n      this.expect(tt.braceR);\n      return this.finishNode(node, \"JSXExpressionContainer\");\n    }\n\n    // Parses following JSX attribute name-value pair.\n\n    jsxParseAttribute(): N.JSXAttribute {\n      const node = this.startNode();\n      if (this.eat(tt.braceL)) {\n        this.expect(tt.ellipsis);\n        node.argument = this.parseMaybeAssignAllowIn();\n        this.expect(tt.braceR);\n        return this.finishNode(node, \"JSXSpreadAttribute\");\n      }\n      node.name = this.jsxParseNamespacedName();\n      node.value = this.eat(tt.eq) ? this.jsxParseAttributeValue() : null;\n      return this.finishNode(node, \"JSXAttribute\");\n    }\n\n    // Parses JSX opening tag starting after \"<\".\n\n    jsxParseOpeningElementAt(\n      startPos: number,\n      startLoc: Position,\n    ): N.JSXOpeningElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      if (this.match(tt.jsxTagEnd)) {\n        this.expect(tt.jsxTagEnd);\n        return this.finishNode(node, \"JSXOpeningFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      return this.jsxParseOpeningElementAfterName(node);\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: N.JSXOpeningElement,\n    ): N.JSXOpeningElement {\n      const attributes: N.JSXAttribute[] = [];\n      while (!this.match(tt.slash) && !this.match(tt.jsxTagEnd)) {\n        attributes.push(this.jsxParseAttribute());\n      }\n      node.attributes = attributes;\n      node.selfClosing = this.eat(tt.slash);\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningElement\");\n    }\n\n    // Parses JSX closing tag starting after \"</\".\n\n    jsxParseClosingElementAt(\n      startPos: number,\n      startLoc: Position,\n    ): N.JSXClosingElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      if (this.match(tt.jsxTagEnd)) {\n        this.expect(tt.jsxTagEnd);\n        return this.finishNode(node, \"JSXClosingFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingElement\");\n    }\n\n    // Parses entire JSX element, including it\"s opening tag\n    // (starting after \"<\"), attributes, contents and closing tag.\n\n    jsxParseElementAt(startPos: number, startLoc: Position): N.JSXElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      const children = [];\n      const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n      let closingElement = null;\n\n      if (!openingElement.selfClosing) {\n        contents: for (;;) {\n          switch (this.state.type) {\n            case tt.jsxTagStart:\n              startPos = this.state.start;\n              startLoc = this.state.startLoc;\n              this.next();\n              if (this.eat(tt.slash)) {\n                closingElement = this.jsxParseClosingElementAt(\n                  startPos,\n                  startLoc,\n                );\n                break contents;\n              }\n              children.push(this.jsxParseElementAt(startPos, startLoc));\n              break;\n\n            case tt.jsxText:\n              children.push(this.parseExprAtom());\n              break;\n\n            case tt.braceL: {\n              const node = this.startNode();\n              this.next();\n              if (this.match(tt.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node));\n              }\n\n              break;\n            }\n            // istanbul ignore next - should never happen\n            default:\n              throw this.unexpected();\n          }\n        }\n\n        if (isFragment(openingElement) && !isFragment(closingElement)) {\n          this.raise(\n            // $FlowIgnore\n            closingElement.start,\n            JsxErrors.MissingClosingTagFragment,\n          );\n        } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n          this.raise(\n            // $FlowIgnore\n            closingElement.start,\n            JsxErrors.MissingClosingTagElement,\n            getQualifiedJSXName(openingElement.name),\n          );\n        } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n          if (\n            // $FlowIgnore\n            getQualifiedJSXName(closingElement.name) !==\n            getQualifiedJSXName(openingElement.name)\n          ) {\n            this.raise(\n              // $FlowIgnore\n              closingElement.start,\n              JsxErrors.MissingClosingTagElement,\n              getQualifiedJSXName(openingElement.name),\n            );\n          }\n        }\n      }\n\n      if (isFragment(openingElement)) {\n        node.openingFragment = openingElement;\n        node.closingFragment = closingElement;\n      } else {\n        node.openingElement = openingElement;\n        node.closingElement = closingElement;\n      }\n      node.children = children;\n      if (this.isRelational(\"<\")) {\n        throw this.raise(\n          this.state.start,\n          JsxErrors.UnwrappedAdjacentJSXElements,\n        );\n      }\n\n      return isFragment(openingElement)\n        ? this.finishNode(node, \"JSXFragment\")\n        : this.finishNode(node, \"JSXElement\");\n    }\n\n    // Parses entire JSX element from current position.\n\n    jsxParseElement(): N.JSXElement {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      this.next();\n      return this.jsxParseElementAt(startPos, startLoc);\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseExprAtom(refExpressionErrors: ?ExpressionErrors): N.Expression {\n      if (this.match(tt.jsxText)) {\n        return this.parseLiteral(this.state.value, \"JSXText\");\n      } else if (this.match(tt.jsxTagStart)) {\n        return this.jsxParseElement();\n      } else if (\n        this.isRelational(\"<\") &&\n        this.input.charCodeAt(this.state.pos) !== charCodes.exclamationMark\n      ) {\n        // In case we encounter an lt token here it will always be the start of\n        // jsx as the lt sign is not allowed in places that expect an expression\n        this.finishToken(tt.jsxTagStart);\n        return this.jsxParseElement();\n      } else {\n        return super.parseExprAtom(refExpressionErrors);\n      }\n    }\n\n    getTokenFromCode(code: number): void {\n      if (this.state.inPropertyName) return super.getTokenFromCode(code);\n\n      const context = this.curContext();\n\n      if (context === tc.j_expr) {\n        return this.jsxReadToken();\n      }\n\n      if (context === tc.j_oTag || context === tc.j_cTag) {\n        if (isIdentifierStart(code)) {\n          return this.jsxReadWord();\n        }\n\n        if (code === charCodes.greaterThan) {\n          ++this.state.pos;\n          return this.finishToken(tt.jsxTagEnd);\n        }\n\n        if (\n          (code === charCodes.quotationMark || code === charCodes.apostrophe) &&\n          context === tc.j_oTag\n        ) {\n          return this.jsxReadString(code);\n        }\n      }\n\n      if (\n        code === charCodes.lessThan &&\n        this.state.exprAllowed &&\n        this.input.charCodeAt(this.state.pos + 1) !== charCodes.exclamationMark\n      ) {\n        ++this.state.pos;\n        return this.finishToken(tt.jsxTagStart);\n      }\n\n      return super.getTokenFromCode(code);\n    }\n\n    updateContext(prevType: TokenType): void {\n      if (this.match(tt.braceL)) {\n        const curContext = this.curContext();\n        if (curContext === tc.j_oTag) {\n          this.state.context.push(tc.braceExpression);\n        } else if (curContext === tc.j_expr) {\n          this.state.context.push(tc.templateQuasi);\n        } else {\n          super.updateContext(prevType);\n        }\n        this.state.exprAllowed = true;\n      } else if (this.match(tt.slash) && prevType === tt.jsxTagStart) {\n        this.state.context.length -= 2; // do not consider JSX expr -> JSX open tag -> ... anymore\n        this.state.context.push(tc.j_cTag); // reconsider as closing tag context\n        this.state.exprAllowed = false;\n      } else {\n        return super.updateContext(prevType);\n      }\n    }\n  };\n","// @flow\nimport {\n  SCOPE_ARROW,\n  SCOPE_DIRECT_SUPER,\n  SCOPE_FUNCTION,\n  SCOPE_SIMPLE_CATCH,\n  SCOPE_SUPER,\n  SCOPE_PROGRAM,\n  SCOPE_VAR,\n  SCOPE_CLASS,\n  BIND_SCOPE_FUNCTION,\n  BIND_SCOPE_VAR,\n  BIND_SCOPE_LEXICAL,\n  BIND_KIND_VALUE,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"./scopeflags\";\nimport * as N from \"../types\";\nimport { Errors } from \"../parser/error\";\n\n// Start an AST node, attaching a start offset.\nexport class Scope {\n  flags: ScopeFlags;\n  // A list of var-declared names in the current lexical scope\n  var: string[] = [];\n  // A list of lexically-declared names in the current lexical scope\n  lexical: string[] = [];\n  // A list of lexically-declared FunctionDeclaration names in the current lexical scope\n  functions: string[] = [];\n\n  constructor(flags: ScopeFlags) {\n    this.flags = flags;\n  }\n}\n\ntype raiseFunction = (number, string, ...any) => void;\n\n// The functions in this module keep track of declared variables in the\n// current scope in order to detect duplicate variable names.\nexport default class ScopeHandler<IScope: Scope = Scope> {\n  scopeStack: Array<IScope> = [];\n  raise: raiseFunction;\n  inModule: boolean;\n  undefinedExports: Map<string, number> = new Map();\n  undefinedPrivateNames: Map<string, number> = new Map();\n\n  constructor(raise: raiseFunction, inModule: boolean) {\n    this.raise = raise;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0;\n  }\n  get allowSuper() {\n    return (this.currentThisScope().flags & SCOPE_SUPER) > 0;\n  }\n  get allowDirectSuper() {\n    return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0;\n  }\n  get inClass() {\n    return (this.currentThisScope().flags & SCOPE_CLASS) > 0;\n  }\n  get inNonArrowFunction() {\n    return (this.currentThisScope().flags & SCOPE_FUNCTION) > 0;\n  }\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags: ScopeFlags): Scope {\n    return new Scope(flags);\n  }\n  // This method will be overwritten by subclasses\n  /*:: +createScope: (flags: ScopeFlags) => IScope; */\n\n  enter(flags: ScopeFlags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  // The spec says:\n  // > At the top level of a function, or script, function declarations are\n  // > treated like var declarations rather than like lexical declarations.\n  treatFunctionsAsVarInScope(scope: IScope): boolean {\n    return !!(\n      scope.flags & SCOPE_FUNCTION ||\n      (!this.inModule && scope.flags & SCOPE_PROGRAM)\n    );\n  }\n\n  declareName(name: string, bindingType: BindingTypes, pos: number) {\n    let scope = this.currentScope();\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.push(name);\n      } else {\n        scope.lexical.push(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        scope.var.push(name);\n        this.maybeExportDefined(scope, name);\n\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope: IScope, name: string) {\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingTypes,\n    pos: number,\n  ) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.raise(pos, Errors.VarRedeclaration, name);\n    }\n  }\n\n  isRedeclaredInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return (\n        scope.lexical.indexOf(name) > -1 ||\n        scope.functions.indexOf(name) > -1 ||\n        scope.var.indexOf(name) > -1\n      );\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return (\n        scope.lexical.indexOf(name) > -1 ||\n        (!this.treatFunctionsAsVarInScope(scope) &&\n          scope.var.indexOf(name) > -1)\n      );\n    }\n\n    return (\n      (scope.lexical.indexOf(name) > -1 &&\n        !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical[0] === name)) ||\n      (!this.treatFunctionsAsVarInScope(scope) &&\n        scope.functions.indexOf(name) > -1)\n    );\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    if (\n      this.scopeStack[0].lexical.indexOf(id.name) === -1 &&\n      this.scopeStack[0].var.indexOf(id.name) === -1 &&\n      // In strict mode, scope.functions will always be empty.\n      // Modules are strict by default, but the `scriptMode` option\n      // can overwrite this behavior.\n      this.scopeStack[0].functions.indexOf(id.name) === -1\n    ) {\n      this.undefinedExports.set(id.name, id.start);\n    }\n  }\n\n  currentScope(): IScope {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  // $FlowIgnore\n  currentVarScope(): IScope {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const scope = this.scopeStack[i];\n      if (scope.flags & SCOPE_VAR) {\n        return scope;\n      }\n    }\n  }\n\n  // Could be useful for `arguments`, `this`, `new.target`, `super()`, `super.property`, and `super[property]`.\n  // $FlowIgnore\n  currentThisScope(): IScope {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const scope = this.scopeStack[i];\n      if (\n        (scope.flags & SCOPE_VAR || scope.flags & SCOPE_CLASS) &&\n        !(scope.flags & SCOPE_ARROW)\n      ) {\n        return scope;\n      }\n    }\n  }\n}\n","// @flow\n\nimport ScopeHandler, { Scope } from \"../../util/scope\";\nimport {\n  BIND_KIND_TYPE,\n  BIND_FLAGS_TS_ENUM,\n  BIND_FLAGS_TS_CONST_ENUM,\n  BIND_FLAGS_TS_EXPORT_ONLY,\n  BIND_KIND_VALUE,\n  BIND_FLAGS_CLASS,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"../../util/scopeflags\";\nimport * as N from \"../../types\";\n\nclass TypeScriptScope extends Scope {\n  types: string[] = [];\n\n  // enums (which are also in .types)\n  enums: string[] = [];\n\n  // const enums (which are also in .enums and .types)\n  constEnums: string[] = [];\n\n  // classes (which are also in .lexical) and interface (which are also in .types)\n  classes: string[] = [];\n\n  // namespaces and ambient functions (or classes) are too difficult to track,\n  // especially without type analysis.\n  // We need to track them anyway, to avoid \"X is not defined\" errors\n  // when exporting them.\n  exportOnlyBindings: string[] = [];\n}\n\n// See https://github.com/babel/babel/pull/9766#discussion_r268920730 for an\n// explanation of how typescript handles scope.\n\nexport default class TypeScriptScopeHandler extends ScopeHandler<TypeScriptScope> {\n  createScope(flags: ScopeFlags): TypeScriptScope {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name: string, bindingType: BindingTypes, pos: number) {\n    const scope = this.currentScope();\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.push(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        // \"Value\" bindings have already been registered by the superclass.\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        this.maybeExportDefined(scope, name);\n      }\n      scope.types.push(name);\n    }\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.push(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.push(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.push(name);\n  }\n\n  isRedeclaredInScope(\n    scope: TypeScriptScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (scope.enums.indexOf(name) > -1) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        // Enums can be merged with other enums if they are both\n        //  const or both non-const.\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.indexOf(name) > -1;\n        return isConst !== wasConst;\n      }\n      return true;\n    }\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.indexOf(name) > -1) {\n      if (scope.lexical.indexOf(name) > -1) {\n        // Classes can be merged with interfaces\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        // Interface can be merged with other classes or interfaces\n        return false;\n      }\n    }\n    if (bindingType & BIND_KIND_TYPE && scope.types.indexOf(name) > -1) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(...arguments);\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    if (\n      this.scopeStack[0].types.indexOf(id.name) === -1 &&\n      this.scopeStack[0].exportOnlyBindings.indexOf(id.name) === -1\n    ) {\n      super.checkLocalExport(id);\n    }\n  }\n}\n","// @flow\nexport const PARAM = 0b0000, // Initial Parameter flags\n  PARAM_YIELD = 0b0001, // track [Yield] production parameter\n  PARAM_AWAIT = 0b0010, // track [Await] production parameter\n  PARAM_RETURN = 0b0100, // track [Return] production parameter\n  PARAM_IN = 0b1000; // track [In] production parameter\n\n// ProductionParameterHandler is a stack fashioned production parameter tracker\n// https://tc39.es/ecma262/#sec-grammar-notation\n// The tracked parameters are defined above.\n//\n// Whenever [+Await]/[+Yield] appears in the right-hand sides of a production,\n// we must enter a new tracking stack. For example when parsing\n//\n// AsyncFunctionDeclaration [Yield, Await]:\n//   async [no LineTerminator here] function BindingIdentifier[?Yield, ?Await]\n//     ( FormalParameters[~Yield, +Await] ) { AsyncFunctionBody }\n//\n// we must follow such process:\n//\n// 1. parse async keyword\n// 2. parse function keyword\n// 3. parse bindingIdentifier <= inherit current parameters: [?Await]\n// 4. enter new stack with (PARAM_AWAIT)\n// 5. parse formal parameters <= must have [Await] parameter [+Await]\n// 6. parse function body\n// 7. exit current stack\n\nexport type ParamKind = typeof PARAM | typeof PARAM_AWAIT | typeof PARAM_YIELD;\n\nexport default class ProductionParameterHandler {\n  stacks: Array<ParamKind> = [];\n  enter(flags: ParamKind) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags(): ParamKind {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait(): boolean {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield(): boolean {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn(): boolean {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn(): boolean {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n}\n\nexport function functionFlags(\n  isAsync: boolean,\n  isGenerator: boolean,\n): ParamKind {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n","// @flow\n\n/*:: declare var invariant; */\n\n// Error messages are colocated with the plugin.\n/* eslint-disable @babel/development-internal/dry-error-messages */\n\nimport type { TokenType } from \"../../tokenizer/types\";\nimport type State from \"../../tokenizer/state\";\nimport { types as tt } from \"../../tokenizer/types\";\nimport { types as ct } from \"../../tokenizer/context\";\nimport * as N from \"../../types\";\nimport type { Pos, Position } from \"../../util/location\";\nimport type Parser from \"../../parser\";\nimport {\n  type BindingTypes,\n  BIND_NONE,\n  SCOPE_TS_MODULE,\n  SCOPE_OTHER,\n  BIND_TS_ENUM,\n  BIND_TS_CONST_ENUM,\n  BIND_TS_TYPE,\n  BIND_TS_INTERFACE,\n  BIND_TS_AMBIENT,\n  BIND_TS_NAMESPACE,\n  BIND_CLASS,\n  BIND_LEXICAL,\n} from \"../../util/scopeflags\";\nimport TypeScriptScopeHandler from \"./scope\";\nimport * as charCodes from \"charcodes\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport { PARAM } from \"../../util/production-parameter\";\nimport { Errors } from \"../../parser/error\";\n\ntype TsModifier =\n  | \"readonly\"\n  | \"abstract\"\n  | \"declare\"\n  | \"static\"\n  | \"public\"\n  | \"private\"\n  | \"protected\";\n\nfunction nonNull<T>(x: ?T): T {\n  if (x == null) {\n    // $FlowIgnore\n    throw new Error(`Unexpected ${x} value.`);\n  }\n  return x;\n}\n\nfunction assert(x: boolean): void {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\ntype ParsingContext =\n  | \"EnumMembers\"\n  | \"HeritageClauseElement\"\n  | \"TupleElementTypes\"\n  | \"TypeMembers\"\n  | \"TypeParametersOrArguments\";\n\nconst TSErrors = Object.freeze({\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier\",\n  ConstructorHasTypeParameters:\n    \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareClassFieldHasInitializer:\n    \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation:\n    \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateModifier: \"Duplicate modifier: '%0'\",\n  EmptyHeritageClauseType: \"'%0' list cannot be empty.\",\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  IndexSignatureHasAbstract:\n    \"Index signatures cannot have the 'abstract' modifier\",\n  IndexSignatureHasAccessibility:\n    \"Index signatures cannot have an accessibility modifier ('%0')\",\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier\",\n  IndexSignatureHasDeclare:\n    \"Index signatures cannot have the 'declare' modifier\",\n  InvalidTupleMemberLabel:\n    \"Tuple members must be labeled with a simple identifier.\",\n  MixedLabeledAndUnlabeledElements:\n    \"Tuple members must all have names or all not have names.\",\n  OptionalTypeBeforeRequired:\n    \"A required element cannot follow an optional element.\",\n  PatternIsOptional:\n    \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract:\n    \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility:\n    \"Private elements cannot have an accessibility modifier ('%0')\",\n  TypeAnnotationAfterAssign:\n    \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`\",\n  UnexpectedParameterModifier:\n    \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly:\n    \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument:\n    \"Argument in a type import must be a string literal\",\n  UnsupportedParameterPropertyKind:\n    \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind:\n    \"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0\",\n});\n\n// Doesn't handle \"void\" or \"null\" because those are keywords, not identifiers.\n// It also doesn't handle \"intrinsic\", since usually it's not a keyword.\nfunction keywordTypeFromName(\n  value: string,\n): N.TsKeywordTypeType | typeof undefined {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n    case \"never\":\n      return \"TSNeverKeyword\";\n    case \"number\":\n      return \"TSNumberKeyword\";\n    case \"object\":\n      return \"TSObjectKeyword\";\n    case \"string\":\n      return \"TSStringKeyword\";\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n    default:\n      return undefined;\n  }\n}\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    getScopeHandler(): Class<TypeScriptScopeHandler> {\n      return TypeScriptScopeHandler;\n    }\n\n    tsIsIdentifier(): boolean {\n      // TODO: actually a bit more complex in TypeScript, but shouldn't matter.\n      // See https://github.com/Microsoft/TypeScript/issues/15008\n      return this.match(tt.name);\n    }\n\n    tsNextTokenCanFollowModifier() {\n      // Note: TypeScript's implementation is much more complicated because\n      // more things are considered modifiers there.\n      // This implementation only handles modifiers not handled by @babel/parser itself. And \"static\".\n      // TODO: Would be nice to avoid lookahead. Want a hasLineBreakUpNext() method...\n      this.next();\n      return (\n        !this.hasPrecedingLineBreak() &&\n        !this.match(tt.parenL) &&\n        !this.match(tt.parenR) &&\n        !this.match(tt.colon) &&\n        !this.match(tt.eq) &&\n        !this.match(tt.question) &&\n        !this.match(tt.bang)\n      );\n    }\n\n    /** Parses a modifier matching one the given modifier names. */\n    tsParseModifier<T: TsModifier>(allowedModifiers: T[]): ?T {\n      if (!this.match(tt.name)) {\n        return undefined;\n      }\n\n      const modifier = this.state.value;\n      if (\n        allowedModifiers.indexOf(modifier) !== -1 &&\n        this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))\n      ) {\n        return modifier;\n      }\n      return undefined;\n    }\n\n    /** Parses a list of modifiers, in any order.\n     *  If you need a specific order, you must call this function multiple times:\n     *    this.tsParseModifiers(node, [\"public\"]);\n     *    this.tsParseModifiers(node, [\"abstract\", \"readonly\"]);\n     */\n    tsParseModifiers<T: TsModifier>(\n      modified: { [key: TsModifier]: ?true },\n      allowedModifiers: T[],\n    ): void {\n      for (;;) {\n        const startPos = this.state.start;\n        const modifier: ?T = this.tsParseModifier(allowedModifiers);\n\n        if (!modifier) break;\n\n        if (Object.hasOwnProperty.call(modified, modifier)) {\n          this.raise(startPos, TSErrors.DuplicateModifier, modifier);\n        }\n        modified[modifier] = true;\n      }\n    }\n\n    tsIsListTerminator(kind: ParsingContext): boolean {\n      switch (kind) {\n        case \"EnumMembers\":\n        case \"TypeMembers\":\n          return this.match(tt.braceR);\n        case \"HeritageClauseElement\":\n          return this.match(tt.braceL);\n        case \"TupleElementTypes\":\n          return this.match(tt.bracketR);\n        case \"TypeParametersOrArguments\":\n          return this.isRelational(\">\");\n      }\n\n      throw new Error(\"Unreachable\");\n    }\n\n    tsParseList<T: N.Node>(kind: ParsingContext, parseElement: () => T): T[] {\n      const result: T[] = [];\n      while (!this.tsIsListTerminator(kind)) {\n        // Skipping \"parseListElement\" from the TS source since that's just for error handling.\n        result.push(parseElement());\n      }\n      return result;\n    }\n\n    tsParseDelimitedList<T: N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n    ): T[] {\n      return nonNull(\n        this.tsParseDelimitedListWorker(\n          kind,\n          parseElement,\n          /* expectSuccess */ true,\n        ),\n      );\n    }\n\n    /**\n     * If !expectSuccess, returns undefined instead of failing to parse.\n     * If expectSuccess, parseElement should always return a defined value.\n     */\n    tsParseDelimitedListWorker<T: N.Node>(\n      kind: ParsingContext,\n      parseElement: () => ?T,\n      expectSuccess: boolean,\n    ): ?(T[]) {\n      const result = [];\n\n      for (;;) {\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n\n        const element = parseElement();\n        if (element == null) {\n          return undefined;\n        }\n        result.push(element);\n\n        if (this.eat(tt.comma)) {\n          continue;\n        }\n\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n\n        if (expectSuccess) {\n          // This will fail with an error about a missing comma\n          this.expect(tt.comma);\n        }\n        return undefined;\n      }\n\n      return result;\n    }\n\n    tsParseBracketedList<T: N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n      bracket: boolean,\n      skipFirstToken: boolean,\n    ): T[] {\n      if (!skipFirstToken) {\n        if (bracket) {\n          this.expect(tt.bracketL);\n        } else {\n          this.expectRelational(\"<\");\n        }\n      }\n\n      const result = this.tsParseDelimitedList(kind, parseElement);\n\n      if (bracket) {\n        this.expect(tt.bracketR);\n      } else {\n        this.expectRelational(\">\");\n      }\n\n      return result;\n    }\n\n    tsParseImportType(): N.TsImportType {\n      const node: N.TsImportType = this.startNode();\n      this.expect(tt._import);\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);\n      }\n\n      // For compatibility to estree we cannot call parseLiteral directly here\n      node.argument = this.parseExprAtom();\n      this.expect(tt.parenR);\n\n      if (this.eat(tt.dot)) {\n        node.qualifier = this.tsParseEntityName(/* allowReservedWords */ true);\n      }\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSImportType\");\n    }\n\n    tsParseEntityName(allowReservedWords: boolean): N.TsEntityName {\n      let entity: N.TsEntityName = this.parseIdentifier();\n      while (this.eat(tt.dot)) {\n        const node: N.TsQualifiedName = this.startNodeAtNode(entity);\n        node.left = entity;\n        node.right = this.parseIdentifier(allowReservedWords);\n        entity = this.finishNode(node, \"TSQualifiedName\");\n      }\n      return entity;\n    }\n\n    tsParseTypeReference(): N.TsTypeReference {\n      const node: N.TsTypeReference = this.startNode();\n      node.typeName = this.tsParseEntityName(/* allowReservedWords */ false);\n      if (!this.hasPrecedingLineBreak() && this.isRelational(\"<\")) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSTypeReference\");\n    }\n\n    tsParseThisTypePredicate(lhs: N.TsThisType): N.TsTypePredicate {\n      this.next();\n      const node: N.TsTypePredicate = this.startNodeAtNode(lhs);\n      node.parameterName = lhs;\n      node.typeAnnotation = this.tsParseTypeAnnotation(/* eatColon */ false);\n      return this.finishNode(node, \"TSTypePredicate\");\n    }\n\n    tsParseThisTypeNode(): N.TsThisType {\n      const node: N.TsThisType = this.startNode();\n      this.next();\n      return this.finishNode(node, \"TSThisType\");\n    }\n\n    tsParseTypeQuery(): N.TsTypeQuery {\n      const node: N.TsTypeQuery = this.startNode();\n      this.expect(tt._typeof);\n      if (this.match(tt._import)) {\n        node.exprName = this.tsParseImportType();\n      } else {\n        node.exprName = this.tsParseEntityName(/* allowReservedWords */ true);\n      }\n      return this.finishNode(node, \"TSTypeQuery\");\n    }\n\n    tsParseTypeParameter(): N.TsTypeParameter {\n      const node: N.TsTypeParameter = this.startNode();\n      node.name = this.parseIdentifierName(node.start);\n      node.constraint = this.tsEatThenParseType(tt._extends);\n      node.default = this.tsEatThenParseType(tt.eq);\n      return this.finishNode(node, \"TSTypeParameter\");\n    }\n\n    tsTryParseTypeParameters(): ?N.TsTypeParameterDeclaration {\n      if (this.isRelational(\"<\")) {\n        return this.tsParseTypeParameters();\n      }\n    }\n\n    tsParseTypeParameters() {\n      const node: N.TsTypeParameterDeclaration = this.startNode();\n\n      if (this.isRelational(\"<\") || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      node.params = this.tsParseBracketedList(\n        \"TypeParametersOrArguments\",\n        this.tsParseTypeParameter.bind(this),\n        /* bracket */ false,\n        /* skipFirstToken */ true,\n      );\n      if (node.params.length === 0) {\n        this.raise(node.start, TSErrors.EmptyTypeParameters);\n      }\n      return this.finishNode(node, \"TSTypeParameterDeclaration\");\n    }\n\n    tsTryNextParseConstantContext(): ?N.TsTypeReference {\n      if (this.lookahead().type === tt._const) {\n        this.next();\n        return this.tsParseTypeReference();\n      }\n      return null;\n    }\n\n    // Note: In TypeScript implementation we must provide `yieldContext` and `awaitContext`,\n    // but here it's always false, because this is only used for types.\n    tsFillSignature(\n      returnToken: TokenType,\n      signature: N.TsSignatureDeclaration,\n    ): void {\n      // Arrow fns *must* have return token (`=>`). Normal functions can omit it.\n      const returnTokenRequired = returnToken === tt.arrow;\n      signature.typeParameters = this.tsTryParseTypeParameters();\n      this.expect(tt.parenL);\n      signature.parameters = this.tsParseBindingListForSignature();\n      if (returnTokenRequired) {\n        signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(\n          returnToken,\n        );\n      } else if (this.match(returnToken)) {\n        signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(\n          returnToken,\n        );\n      }\n    }\n\n    tsParseBindingListForSignature(): $ReadOnlyArray<\n      N.Identifier | N.RestElement | N.ObjectPattern | N.ArrayPattern,\n    > {\n      return this.parseBindingList(tt.parenR, charCodes.rightParenthesis).map(\n        pattern => {\n          if (\n            pattern.type !== \"Identifier\" &&\n            pattern.type !== \"RestElement\" &&\n            pattern.type !== \"ObjectPattern\" &&\n            pattern.type !== \"ArrayPattern\"\n          ) {\n            this.raise(\n              pattern.start,\n              TSErrors.UnsupportedSignatureParameterKind,\n              pattern.type,\n            );\n          }\n          return (pattern: any);\n        },\n      );\n    }\n\n    tsParseTypeMemberSemicolon(): void {\n      if (!this.eat(tt.comma)) {\n        this.semicolon();\n      }\n    }\n\n    tsParseSignatureMember(\n      kind: \"TSCallSignatureDeclaration\" | \"TSConstructSignatureDeclaration\",\n      node: N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration,\n    ): N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration {\n      this.tsFillSignature(tt.colon, node);\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, kind);\n    }\n\n    tsIsUnambiguouslyIndexSignature() {\n      this.next(); // Skip '{'\n      return this.eat(tt.name) && this.match(tt.colon);\n    }\n\n    tsTryParseIndexSignature(node: N.Node): ?N.TsIndexSignature {\n      if (\n        !(\n          this.match(tt.bracketL) &&\n          this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this))\n        )\n      ) {\n        return undefined;\n      }\n\n      this.expect(tt.bracketL);\n      const id = this.parseIdentifier();\n      id.typeAnnotation = this.tsParseTypeAnnotation();\n      this.resetEndLocation(id); // set end position to end of type\n\n      this.expect(tt.bracketR);\n      node.parameters = [id];\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, \"TSIndexSignature\");\n    }\n\n    tsParsePropertyOrMethodSignature(\n      node: N.TsPropertySignature | N.TsMethodSignature,\n      readonly: boolean,\n    ): N.TsPropertySignature | N.TsMethodSignature {\n      if (this.eat(tt.question)) node.optional = true;\n      const nodeAny: any = node;\n\n      if (!readonly && (this.match(tt.parenL) || this.isRelational(\"<\"))) {\n        const method: N.TsMethodSignature = nodeAny;\n        this.tsFillSignature(tt.colon, method);\n        this.tsParseTypeMemberSemicolon();\n        return this.finishNode(method, \"TSMethodSignature\");\n      } else {\n        const property: N.TsPropertySignature = nodeAny;\n        if (readonly) property.readonly = true;\n        const type = this.tsTryParseTypeAnnotation();\n        if (type) property.typeAnnotation = type;\n        this.tsParseTypeMemberSemicolon();\n        return this.finishNode(property, \"TSPropertySignature\");\n      }\n    }\n\n    tsParseTypeMember(): N.TsTypeElement {\n      const node: any = this.startNode();\n\n      if (this.match(tt.parenL) || this.isRelational(\"<\")) {\n        return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n      }\n\n      if (this.match(tt._new)) {\n        const id: N.Identifier = this.startNode();\n        this.next();\n        if (this.match(tt.parenL) || this.isRelational(\"<\")) {\n          return this.tsParseSignatureMember(\n            \"TSConstructSignatureDeclaration\",\n            node,\n          );\n        } else {\n          node.key = this.createIdentifier(id, \"new\");\n          return this.tsParsePropertyOrMethodSignature(node, false);\n        }\n      }\n\n      const readonly = !!this.tsParseModifier([\"readonly\"]);\n\n      const idx = this.tsTryParseIndexSignature(node);\n      if (idx) {\n        if (readonly) node.readonly = true;\n        return idx;\n      }\n\n      this.parsePropertyName(node, /* isPrivateNameAllowed */ false);\n      return this.tsParsePropertyOrMethodSignature(node, readonly);\n    }\n\n    tsParseTypeLiteral(): N.TsTypeLiteral {\n      const node: N.TsTypeLiteral = this.startNode();\n      node.members = this.tsParseObjectTypeMembers();\n      return this.finishNode(node, \"TSTypeLiteral\");\n    }\n\n    tsParseObjectTypeMembers(): $ReadOnlyArray<N.TsTypeElement> {\n      this.expect(tt.braceL);\n      const members = this.tsParseList(\n        \"TypeMembers\",\n        this.tsParseTypeMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return members;\n    }\n\n    tsIsStartOfMappedType(): boolean {\n      this.next();\n      if (this.eat(tt.plusMin)) {\n        return this.isContextual(\"readonly\");\n      }\n      if (this.isContextual(\"readonly\")) {\n        this.next();\n      }\n      if (!this.match(tt.bracketL)) {\n        return false;\n      }\n      this.next();\n      if (!this.tsIsIdentifier()) {\n        return false;\n      }\n      this.next();\n      return this.match(tt._in);\n    }\n\n    tsParseMappedTypeParameter(): N.TsTypeParameter {\n      const node: N.TsTypeParameter = this.startNode();\n      node.name = this.parseIdentifierName(node.start);\n      node.constraint = this.tsExpectThenParseType(tt._in);\n      return this.finishNode(node, \"TSTypeParameter\");\n    }\n\n    tsParseMappedType(): N.TsMappedType {\n      const node: N.TsMappedType = this.startNode();\n\n      this.expect(tt.braceL);\n\n      if (this.match(tt.plusMin)) {\n        node.readonly = this.state.value;\n        this.next();\n        this.expectContextual(\"readonly\");\n      } else if (this.eatContextual(\"readonly\")) {\n        node.readonly = true;\n      }\n\n      this.expect(tt.bracketL);\n      node.typeParameter = this.tsParseMappedTypeParameter();\n      node.nameType = this.eatContextual(\"as\") ? this.tsParseType() : null;\n\n      this.expect(tt.bracketR);\n\n      if (this.match(tt.plusMin)) {\n        node.optional = this.state.value;\n        this.next();\n        this.expect(tt.question);\n      } else if (this.eat(tt.question)) {\n        node.optional = true;\n      }\n\n      node.typeAnnotation = this.tsTryParseType();\n      this.semicolon();\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"TSMappedType\");\n    }\n\n    tsParseTupleType(): N.TsTupleType {\n      const node: N.TsTupleType = this.startNode();\n      node.elementTypes = this.tsParseBracketedList(\n        \"TupleElementTypes\",\n        this.tsParseTupleElementType.bind(this),\n        /* bracket */ true,\n        /* skipFirstToken */ false,\n      );\n\n      // Validate the elementTypes to ensure that no mandatory elements\n      // follow optional elements\n      let seenOptionalElement = false;\n      let labeledElements = null;\n      node.elementTypes.forEach(elementNode => {\n        let { type } = elementNode;\n\n        if (\n          seenOptionalElement &&\n          type !== \"TSRestType\" &&\n          type !== \"TSOptionalType\" &&\n          !(type === \"TSNamedTupleMember\" && elementNode.optional)\n        ) {\n          this.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);\n        }\n\n        // Flow doesn't support ||=\n        seenOptionalElement =\n          seenOptionalElement ||\n          (type === \"TSNamedTupleMember\" && elementNode.optional) ||\n          type === \"TSOptionalType\";\n\n        // When checking labels, check the argument of the spread operator\n        if (type === \"TSRestType\") {\n          elementNode = elementNode.typeAnnotation;\n          type = elementNode.type;\n        }\n\n        const isLabeled = type === \"TSNamedTupleMember\";\n        // Flow doesn't support ??=\n        labeledElements = labeledElements ?? isLabeled;\n        if (labeledElements !== isLabeled) {\n          this.raise(\n            elementNode.start,\n            TSErrors.MixedLabeledAndUnlabeledElements,\n          );\n        }\n      });\n\n      return this.finishNode(node, \"TSTupleType\");\n    }\n\n    tsParseTupleElementType(): N.TsType | N.TsNamedTupleMember {\n      // parses `...TsType[]`\n\n      const { start: startPos, startLoc } = this.state;\n\n      const rest = this.eat(tt.ellipsis);\n      let type = this.tsParseType();\n      const optional = this.eat(tt.question);\n      const labeled = this.eat(tt.colon);\n\n      if (labeled) {\n        const labeledNode: N.TsNamedTupleMember = this.startNodeAtNode(type);\n        labeledNode.optional = optional;\n\n        if (\n          type.type === \"TSTypeReference\" &&\n          !type.typeParameters &&\n          type.typeName.type === \"Identifier\"\n        ) {\n          labeledNode.label = (type.typeName: N.Identifier);\n        } else {\n          this.raise(type.start, TSErrors.InvalidTupleMemberLabel);\n          // This produces an invalid AST, but at least we don't drop\n          // nodes representing the invalid source.\n          // $FlowIgnore\n          labeledNode.label = type;\n        }\n\n        labeledNode.elementType = this.tsParseType();\n        type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n      } else if (optional) {\n        const optionalTypeNode: N.TsOptionalType = this.startNodeAtNode(type);\n        optionalTypeNode.typeAnnotation = type;\n        type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n      }\n\n      if (rest) {\n        const restNode: N.TsRestType = this.startNodeAt(startPos, startLoc);\n        restNode.typeAnnotation = type;\n        type = this.finishNode(restNode, \"TSRestType\");\n      }\n\n      return type;\n    }\n\n    tsParseParenthesizedType(): N.TsParenthesizedType {\n      const node = this.startNode();\n      this.expect(tt.parenL);\n      node.typeAnnotation = this.tsParseType();\n      this.expect(tt.parenR);\n      return this.finishNode(node, \"TSParenthesizedType\");\n    }\n\n    tsParseFunctionOrConstructorType(\n      type: \"TSFunctionType\" | \"TSConstructorType\",\n    ): N.TsFunctionOrConstructorType {\n      const node: N.TsFunctionOrConstructorType = this.startNode();\n      if (type === \"TSConstructorType\") {\n        this.expect(tt._new);\n      }\n      this.tsFillSignature(tt.arrow, node);\n      return this.finishNode(node, type);\n    }\n\n    tsParseLiteralTypeNode(): N.TsLiteralType {\n      const node: N.TsLiteralType = this.startNode();\n      node.literal = (() => {\n        switch (this.state.type) {\n          case tt.num:\n          case tt.bigint:\n          case tt.string:\n          case tt._true:\n          case tt._false:\n            // For compatibility to estree we cannot call parseLiteral directly here\n            return this.parseExprAtom();\n          default:\n            throw this.unexpected();\n        }\n      })();\n      return this.finishNode(node, \"TSLiteralType\");\n    }\n\n    tsParseTemplateLiteralType(): N.TsType {\n      const node: N.TsLiteralType = this.startNode();\n      node.literal = this.parseTemplate(false);\n      return this.finishNode(node, \"TSLiteralType\");\n    }\n\n    parseTemplateSubstitution(): N.TsType {\n      if (this.state.inType) return this.tsParseType();\n      return super.parseTemplateSubstitution();\n    }\n\n    tsParseThisTypeOrThisTypePredicate(): N.TsThisType | N.TsTypePredicate {\n      const thisKeyword = this.tsParseThisTypeNode();\n      if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n        return this.tsParseThisTypePredicate(thisKeyword);\n      } else {\n        return thisKeyword;\n      }\n    }\n\n    tsParseNonArrayType(): N.TsType {\n      switch (this.state.type) {\n        case tt.name:\n        case tt._void:\n        case tt._null: {\n          const type = this.match(tt._void)\n            ? \"TSVoidKeyword\"\n            : this.match(tt._null)\n            ? \"TSNullKeyword\"\n            : keywordTypeFromName(this.state.value);\n          if (\n            type !== undefined &&\n            this.lookaheadCharCode() !== charCodes.dot\n          ) {\n            const node: N.TsKeywordType = this.startNode();\n            this.next();\n            return this.finishNode(node, type);\n          }\n          return this.tsParseTypeReference();\n        }\n        case tt.string:\n        case tt.num:\n        case tt.bigint:\n        case tt._true:\n        case tt._false:\n          return this.tsParseLiteralTypeNode();\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            const node: N.TsLiteralType = this.startNode();\n            const nextToken = this.lookahead();\n            if (nextToken.type !== tt.num && nextToken.type !== tt.bigint) {\n              throw this.unexpected();\n            }\n            node.literal = this.parseMaybeUnary();\n            return this.finishNode(node, \"TSLiteralType\");\n          }\n          break;\n        case tt._this:\n          return this.tsParseThisTypeOrThisTypePredicate();\n        case tt._typeof:\n          return this.tsParseTypeQuery();\n        case tt._import:\n          return this.tsParseImportType();\n        case tt.braceL:\n          return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this))\n            ? this.tsParseMappedType()\n            : this.tsParseTypeLiteral();\n        case tt.bracketL:\n          return this.tsParseTupleType();\n        case tt.parenL:\n          return this.tsParseParenthesizedType();\n        case tt.backQuote:\n          return this.tsParseTemplateLiteralType();\n      }\n\n      throw this.unexpected();\n    }\n\n    tsParseArrayTypeOrHigher(): N.TsType {\n      let type = this.tsParseNonArrayType();\n      while (!this.hasPrecedingLineBreak() && this.eat(tt.bracketL)) {\n        if (this.match(tt.bracketR)) {\n          const node: N.TsArrayType = this.startNodeAtNode(type);\n          node.elementType = type;\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSArrayType\");\n        } else {\n          const node: N.TsIndexedAccessType = this.startNodeAtNode(type);\n          node.objectType = type;\n          node.indexType = this.tsParseType();\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSIndexedAccessType\");\n        }\n      }\n      return type;\n    }\n\n    tsParseTypeOperator(\n      operator: \"keyof\" | \"unique\" | \"readonly\",\n    ): N.TsTypeOperator {\n      const node: N.TsTypeOperator = this.startNode();\n      this.expectContextual(operator);\n      node.operator = operator;\n      node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n      if (operator === \"readonly\") {\n        this.tsCheckTypeAnnotationForReadOnly(node);\n      }\n\n      return this.finishNode(node, \"TSTypeOperator\");\n    }\n\n    tsCheckTypeAnnotationForReadOnly(node: N.Node) {\n      switch (node.typeAnnotation.type) {\n        case \"TSTupleType\":\n        case \"TSArrayType\":\n          return;\n        default:\n          this.raise(node.start, TSErrors.UnexpectedReadonly);\n      }\n    }\n\n    tsParseInferType(): N.TsInferType {\n      const node = this.startNode();\n      this.expectContextual(\"infer\");\n      const typeParameter = this.startNode();\n      typeParameter.name = this.parseIdentifierName(typeParameter.start);\n      node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n      return this.finishNode(node, \"TSInferType\");\n    }\n\n    tsParseTypeOperatorOrHigher(): N.TsType {\n      const operator = [\"keyof\", \"unique\", \"readonly\"].find(kw =>\n        this.isContextual(kw),\n      );\n      return operator\n        ? this.tsParseTypeOperator(operator)\n        : this.isContextual(\"infer\")\n        ? this.tsParseInferType()\n        : this.tsParseArrayTypeOrHigher();\n    }\n\n    tsParseUnionOrIntersectionType(\n      kind: \"TSUnionType\" | \"TSIntersectionType\",\n      parseConstituentType: () => N.TsType,\n      operator: TokenType,\n    ): N.TsType {\n      this.eat(operator);\n      let type = parseConstituentType();\n      if (this.match(operator)) {\n        const types = [type];\n        while (this.eat(operator)) {\n          types.push(parseConstituentType());\n        }\n        const node: N.TsUnionType | N.TsIntersectionType = this.startNodeAtNode(\n          type,\n        );\n        node.types = types;\n        type = this.finishNode(node, kind);\n      }\n      return type;\n    }\n\n    tsParseIntersectionTypeOrHigher(): N.TsType {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSIntersectionType\",\n        this.tsParseTypeOperatorOrHigher.bind(this),\n        tt.bitwiseAND,\n      );\n    }\n\n    tsParseUnionTypeOrHigher() {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSUnionType\",\n        this.tsParseIntersectionTypeOrHigher.bind(this),\n        tt.bitwiseOR,\n      );\n    }\n\n    tsIsStartOfFunctionType() {\n      if (this.isRelational(\"<\")) {\n        return true;\n      }\n      return (\n        this.match(tt.parenL) &&\n        this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this))\n      );\n    }\n\n    tsSkipParameterStart(): boolean {\n      if (this.match(tt.name) || this.match(tt._this)) {\n        this.next();\n        return true;\n      }\n\n      if (this.match(tt.braceL)) {\n        let braceStackCounter = 1;\n        this.next();\n\n        while (braceStackCounter > 0) {\n          if (this.match(tt.braceL)) {\n            ++braceStackCounter;\n          } else if (this.match(tt.braceR)) {\n            --braceStackCounter;\n          }\n          this.next();\n        }\n        return true;\n      }\n\n      if (this.match(tt.bracketL)) {\n        let braceStackCounter = 1;\n        this.next();\n\n        while (braceStackCounter > 0) {\n          if (this.match(tt.bracketL)) {\n            ++braceStackCounter;\n          } else if (this.match(tt.bracketR)) {\n            --braceStackCounter;\n          }\n          this.next();\n        }\n        return true;\n      }\n\n      return false;\n    }\n\n    tsIsUnambiguouslyStartOfFunctionType(): boolean {\n      this.next();\n      if (this.match(tt.parenR) || this.match(tt.ellipsis)) {\n        // ( )\n        // ( ...\n        return true;\n      }\n      if (this.tsSkipParameterStart()) {\n        if (\n          this.match(tt.colon) ||\n          this.match(tt.comma) ||\n          this.match(tt.question) ||\n          this.match(tt.eq)\n        ) {\n          // ( xxx :\n          // ( xxx ,\n          // ( xxx ?\n          // ( xxx =\n          return true;\n        }\n        if (this.match(tt.parenR)) {\n          this.next();\n          if (this.match(tt.arrow)) {\n            // ( xxx ) =>\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n\n    tsParseTypeOrTypePredicateAnnotation(\n      returnToken: TokenType,\n    ): N.TsTypeAnnotation {\n      return this.tsInType(() => {\n        const t: N.TsTypeAnnotation = this.startNode();\n        this.expect(returnToken);\n\n        const asserts = !!this.tsTryParse(\n          this.tsParseTypePredicateAsserts.bind(this),\n        );\n\n        if (asserts && this.match(tt._this)) {\n          // When asserts is false, thisKeyword is handled by tsParseNonArrayType\n          // : asserts this is type\n          let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n          // if it turns out to be a `TSThisType`, wrap it with `TSTypePredicate`\n          // : asserts this\n          if (thisTypePredicate.type === \"TSThisType\") {\n            const node: N.TsTypePredicate = this.startNodeAtNode(t);\n            node.parameterName = (thisTypePredicate: N.TsThisType);\n            node.asserts = true;\n            thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n          } else {\n            (thisTypePredicate: N.TsTypePredicate).asserts = true;\n          }\n          t.typeAnnotation = thisTypePredicate;\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        const typePredicateVariable =\n          this.tsIsIdentifier() &&\n          this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n        if (!typePredicateVariable) {\n          if (!asserts) {\n            // : type\n            return this.tsParseTypeAnnotation(/* eatColon */ false, t);\n          }\n\n          const node: N.TsTypePredicate = this.startNodeAtNode(t);\n          // : asserts foo\n          node.parameterName = this.parseIdentifier();\n          node.asserts = asserts;\n          t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        // : asserts foo is type\n        const type = this.tsParseTypeAnnotation(/* eatColon */ false);\n        const node = this.startNodeAtNode(t);\n        node.parameterName = typePredicateVariable;\n        node.typeAnnotation = type;\n        node.asserts = asserts;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      });\n    }\n\n    tsTryParseTypeOrTypePredicateAnnotation(): ?N.TsTypeAnnotation {\n      return this.match(tt.colon)\n        ? this.tsParseTypeOrTypePredicateAnnotation(tt.colon)\n        : undefined;\n    }\n\n    tsTryParseTypeAnnotation(): ?N.TsTypeAnnotation {\n      return this.match(tt.colon) ? this.tsParseTypeAnnotation() : undefined;\n    }\n\n    tsTryParseType(): ?N.TsType {\n      return this.tsEatThenParseType(tt.colon);\n    }\n\n    tsParseTypePredicatePrefix(): ?N.Identifier {\n      const id = this.parseIdentifier();\n      if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n        this.next();\n        return id;\n      }\n    }\n\n    tsParseTypePredicateAsserts(): boolean {\n      if (\n        !this.match(tt.name) ||\n        this.state.value !== \"asserts\" ||\n        this.hasPrecedingLineBreak()\n      ) {\n        return false;\n      }\n      const containsEsc = this.state.containsEsc;\n      this.next();\n      if (!this.match(tt.name) && !this.match(tt._this)) {\n        return false;\n      }\n\n      if (containsEsc) {\n        this.raise(\n          this.state.lastTokStart,\n          Errors.InvalidEscapedReservedWord,\n          \"asserts\",\n        );\n      }\n\n      return true;\n    }\n\n    tsParseTypeAnnotation(\n      eatColon = true,\n      t: N.TsTypeAnnotation = this.startNode(),\n    ): N.TsTypeAnnotation {\n      this.tsInType(() => {\n        if (eatColon) this.expect(tt.colon);\n        t.typeAnnotation = this.tsParseType();\n      });\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    }\n\n    /** Be sure to be in a type context before calling this, using `tsInType`. */\n    tsParseType(): N.TsType {\n      // Need to set `state.inType` so that we don't parse JSX in a type context.\n      assert(this.state.inType);\n      const type = this.tsParseNonConditionalType();\n      if (this.hasPrecedingLineBreak() || !this.eat(tt._extends)) {\n        return type;\n      }\n      const node: N.TsConditionalType = this.startNodeAtNode(type);\n      node.checkType = type;\n      node.extendsType = this.tsParseNonConditionalType();\n      this.expect(tt.question);\n      node.trueType = this.tsParseType();\n      this.expect(tt.colon);\n      node.falseType = this.tsParseType();\n      return this.finishNode(node, \"TSConditionalType\");\n    }\n\n    tsParseNonConditionalType(): N.TsType {\n      if (this.tsIsStartOfFunctionType()) {\n        return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n      }\n      if (this.match(tt._new)) {\n        // As in `new () => Date`\n        return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n      }\n      return this.tsParseUnionTypeOrHigher();\n    }\n\n    tsParseTypeAssertion(): N.TsTypeAssertion {\n      const node: N.TsTypeAssertion = this.startNode();\n      const _const = this.tsTryNextParseConstantContext();\n      node.typeAnnotation = _const || this.tsNextThenParseType();\n      this.expectRelational(\">\");\n      node.expression = this.parseMaybeUnary();\n      return this.finishNode(node, \"TSTypeAssertion\");\n    }\n\n    tsParseHeritageClause(\n      descriptor: string,\n    ): $ReadOnlyArray<N.TsExpressionWithTypeArguments> {\n      const originalStart = this.state.start;\n\n      const delimitedList = this.tsParseDelimitedList(\n        \"HeritageClauseElement\",\n        this.tsParseExpressionWithTypeArguments.bind(this),\n      );\n\n      if (!delimitedList.length) {\n        this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);\n      }\n\n      return delimitedList;\n    }\n\n    tsParseExpressionWithTypeArguments(): N.TsExpressionWithTypeArguments {\n      const node: N.TsExpressionWithTypeArguments = this.startNode();\n      // Note: TS uses parseLeftHandSideExpressionOrHigher,\n      // then has grammar errors later if it's not an EntityName.\n      node.expression = this.tsParseEntityName(/* allowReservedWords */ false);\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n\n      return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n    }\n\n    tsParseInterfaceDeclaration(\n      node: N.TsInterfaceDeclaration,\n    ): N.TsInterfaceDeclaration {\n      node.id = this.parseIdentifier();\n      this.checkLVal(\n        node.id,\n        BIND_TS_INTERFACE,\n        undefined,\n        \"typescript interface declaration\",\n      );\n      node.typeParameters = this.tsTryParseTypeParameters();\n      if (this.eat(tt._extends)) {\n        node.extends = this.tsParseHeritageClause(\"extends\");\n      }\n      const body: N.TSInterfaceBody = this.startNode();\n      body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n      node.body = this.finishNode(body, \"TSInterfaceBody\");\n      return this.finishNode(node, \"TSInterfaceDeclaration\");\n    }\n\n    tsParseTypeAliasDeclaration(\n      node: N.TsTypeAliasDeclaration,\n    ): N.TsTypeAliasDeclaration {\n      node.id = this.parseIdentifier();\n      this.checkLVal(node.id, BIND_TS_TYPE, undefined, \"typescript type alias\");\n\n      node.typeParameters = this.tsTryParseTypeParameters();\n      node.typeAnnotation = this.tsInType(() => {\n        this.expect(tt.eq);\n\n        if (\n          this.isContextual(\"intrinsic\") &&\n          this.lookahead().type !== tt.dot\n        ) {\n          const node: N.TsKeywordType = this.startNode();\n          this.next();\n          return this.finishNode(node, \"TSIntrinsicKeyword\");\n        }\n\n        return this.tsParseType();\n      });\n\n      this.semicolon();\n      return this.finishNode(node, \"TSTypeAliasDeclaration\");\n    }\n\n    tsInNoContext<T>(cb: () => T): T {\n      const oldContext = this.state.context;\n      this.state.context = [oldContext[0]];\n      try {\n        return cb();\n      } finally {\n        this.state.context = oldContext;\n      }\n    }\n\n    /**\n     * Runs `cb` in a type context.\n     * This should be called one token *before* the first type token,\n     * so that the call to `next()` is run in type context.\n     */\n    tsInType<T>(cb: () => T): T {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      try {\n        return cb();\n      } finally {\n        this.state.inType = oldInType;\n      }\n    }\n\n    tsEatThenParseType(token: TokenType): N.TsType | typeof undefined {\n      return !this.match(token) ? undefined : this.tsNextThenParseType();\n    }\n\n    tsExpectThenParseType(token: TokenType): N.TsType {\n      return this.tsDoThenParseType(() => this.expect(token));\n    }\n\n    tsNextThenParseType(): N.TsType {\n      return this.tsDoThenParseType(() => this.next());\n    }\n\n    tsDoThenParseType(cb: () => void): N.TsType {\n      return this.tsInType(() => {\n        cb();\n        return this.tsParseType();\n      });\n    }\n\n    tsParseEnumMember(): N.TsEnumMember {\n      const node: N.TsEnumMember = this.startNode();\n      // Computed property names are grammar errors in an enum, so accept just string literal or identifier.\n      node.id = this.match(tt.string)\n        ? this.parseExprAtom()\n        : this.parseIdentifier(/* liberal */ true);\n      if (this.eat(tt.eq)) {\n        node.initializer = this.parseMaybeAssignAllowIn();\n      }\n      return this.finishNode(node, \"TSEnumMember\");\n    }\n\n    tsParseEnumDeclaration(\n      node: N.TsEnumDeclaration,\n      isConst: boolean,\n    ): N.TsEnumDeclaration {\n      if (isConst) node.const = true;\n      node.id = this.parseIdentifier();\n      this.checkLVal(\n        node.id,\n        isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM,\n        undefined,\n        \"typescript enum declaration\",\n      );\n\n      this.expect(tt.braceL);\n      node.members = this.tsParseDelimitedList(\n        \"EnumMembers\",\n        this.tsParseEnumMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return this.finishNode(node, \"TSEnumDeclaration\");\n    }\n\n    tsParseModuleBlock(): N.TsModuleBlock {\n      const node: N.TsModuleBlock = this.startNode();\n      this.scope.enter(SCOPE_OTHER);\n\n      this.expect(tt.braceL);\n      // Inside of a module block is considered \"top-level\", meaning it can have imports and exports.\n      this.parseBlockOrModuleBlockBody(\n        (node.body = []),\n        /* directives */ undefined,\n        /* topLevel */ true,\n        /* end */ tt.braceR,\n      );\n      this.scope.exit();\n      return this.finishNode(node, \"TSModuleBlock\");\n    }\n\n    tsParseModuleOrNamespaceDeclaration(\n      node: N.TsModuleDeclaration,\n      nested?: boolean = false,\n    ): N.TsModuleDeclaration {\n      node.id = this.parseIdentifier();\n\n      if (!nested) {\n        this.checkLVal(\n          node.id,\n          BIND_TS_NAMESPACE,\n          null,\n          \"module or namespace declaration\",\n        );\n      }\n\n      if (this.eat(tt.dot)) {\n        const inner = this.startNode();\n        this.tsParseModuleOrNamespaceDeclaration(inner, true);\n        node.body = inner;\n      } else {\n        this.scope.enter(SCOPE_TS_MODULE);\n        this.prodParam.enter(PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      }\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseAmbientExternalModuleDeclaration(\n      node: N.TsModuleDeclaration,\n    ): N.TsModuleDeclaration {\n      if (this.isContextual(\"global\")) {\n        node.global = true;\n        node.id = this.parseIdentifier();\n      } else if (this.match(tt.string)) {\n        node.id = this.parseExprAtom();\n      } else {\n        this.unexpected();\n      }\n      if (this.match(tt.braceL)) {\n        this.scope.enter(SCOPE_TS_MODULE);\n        this.prodParam.enter(PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      } else {\n        this.semicolon();\n      }\n\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseImportEqualsDeclaration(\n      node: N.TsImportEqualsDeclaration,\n      isExport?: boolean,\n    ): N.TsImportEqualsDeclaration {\n      node.isExport = isExport || false;\n      node.id = this.parseIdentifier();\n      this.checkLVal(\n        node.id,\n        BIND_LEXICAL,\n        undefined,\n        \"import equals declaration\",\n      );\n      this.expect(tt.eq);\n      node.moduleReference = this.tsParseModuleReference();\n      this.semicolon();\n      return this.finishNode(node, \"TSImportEqualsDeclaration\");\n    }\n\n    tsIsExternalModuleReference(): boolean {\n      return (\n        this.isContextual(\"require\") &&\n        this.lookaheadCharCode() === charCodes.leftParenthesis\n      );\n    }\n\n    tsParseModuleReference(): N.TsModuleReference {\n      return this.tsIsExternalModuleReference()\n        ? this.tsParseExternalModuleReference()\n        : this.tsParseEntityName(/* allowReservedWords */ false);\n    }\n\n    tsParseExternalModuleReference(): N.TsExternalModuleReference {\n      const node: N.TsExternalModuleReference = this.startNode();\n      this.expectContextual(\"require\");\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        throw this.unexpected();\n      }\n      // For compatibility to estree we cannot call parseLiteral directly here\n      node.expression = this.parseExprAtom();\n      this.expect(tt.parenR);\n      return this.finishNode(node, \"TSExternalModuleReference\");\n    }\n\n    // Utilities\n\n    tsLookAhead<T>(f: () => T): T {\n      const state = this.state.clone();\n      const res = f();\n      this.state = state;\n      return res;\n    }\n\n    tsTryParseAndCatch<T: ?N.NodeBase>(f: () => T): ?T {\n      const result = this.tryParse(abort => f() || abort());\n\n      if (result.aborted || !result.node) return undefined;\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    tsTryParse<T>(f: () => ?T): ?T {\n      const state = this.state.clone();\n      const result = f();\n      if (result !== undefined && result !== false) {\n        return result;\n      } else {\n        this.state = state;\n        return undefined;\n      }\n    }\n\n    tsTryParseDeclare(nany: any): ?N.Declaration {\n      if (this.isLineTerminator()) {\n        return;\n      }\n      let starttype = this.state.type;\n      let kind;\n\n      if (this.isContextual(\"let\")) {\n        starttype = tt._var;\n        kind = \"let\";\n      }\n\n      return this.tsInDeclareContext(() => {\n        switch (starttype) {\n          case tt._function:\n            nany.declare = true;\n            return this.parseFunctionStatement(\n              nany,\n              /* async */ false,\n              /* declarationPosition */ true,\n            );\n          case tt._class:\n            // While this is also set by tsParseExpressionStatement, we need to set it\n            // before parsing the class declaration to now how to register it in the scope.\n            nany.declare = true;\n            return this.parseClass(\n              nany,\n              /* isStatement */ true,\n              /* optionalId */ false,\n            );\n          case tt._const:\n            if (this.match(tt._const) && this.isLookaheadContextual(\"enum\")) {\n              // `const enum = 0;` not allowed because \"enum\" is a strict mode reserved word.\n              this.expect(tt._const);\n              this.expectContextual(\"enum\");\n              return this.tsParseEnumDeclaration(nany, /* isConst */ true);\n            }\n          // falls through\n          case tt._var:\n            kind = kind || this.state.value;\n            return this.parseVarStatement(nany, kind);\n          case tt.name: {\n            const value = this.state.value;\n            if (value === \"global\") {\n              return this.tsParseAmbientExternalModuleDeclaration(nany);\n            } else {\n              return this.tsParseDeclaration(nany, value, /* next */ true);\n            }\n          }\n        }\n      });\n    }\n\n    // Note: this won't be called unless the keyword is allowed in `shouldParseExportDeclaration`.\n    tsTryParseExportDeclaration(): ?N.Declaration {\n      return this.tsParseDeclaration(\n        this.startNode(),\n        this.state.value,\n        /* next */ true,\n      );\n    }\n\n    tsParseExpressionStatement(node: any, expr: N.Identifier): ?N.Declaration {\n      switch (expr.name) {\n        case \"declare\": {\n          const declaration = this.tsTryParseDeclare(node);\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n          break;\n        }\n        case \"global\":\n          // `global { }` (with no `declare`) may appear inside an ambient module declaration.\n          // Would like to use tsParseAmbientExternalModuleDeclaration here, but already ran past \"global\".\n          if (this.match(tt.braceL)) {\n            this.scope.enter(SCOPE_TS_MODULE);\n            this.prodParam.enter(PARAM);\n            const mod: N.TsModuleDeclaration = node;\n            mod.global = true;\n            mod.id = expr;\n            mod.body = this.tsParseModuleBlock();\n            this.scope.exit();\n            this.prodParam.exit();\n            return this.finishNode(mod, \"TSModuleDeclaration\");\n          }\n          break;\n\n        default:\n          return this.tsParseDeclaration(node, expr.name, /* next */ false);\n      }\n    }\n\n    // Common to tsTryParseDeclare, tsTryParseExportDeclaration, and tsParseExpressionStatement.\n    tsParseDeclaration(\n      node: any,\n      value: string,\n      next: boolean,\n    ): ?N.Declaration {\n      switch (value) {\n        case \"abstract\":\n          if (this.tsCheckLineTerminatorAndMatch(tt._class, next)) {\n            const cls: N.ClassDeclaration = node;\n            cls.abstract = true;\n            if (next) {\n              this.next();\n              if (!this.match(tt._class)) {\n                this.unexpected(null, tt._class);\n              }\n            }\n            return this.parseClass(\n              cls,\n              /* isStatement */ true,\n              /* optionalId */ false,\n            );\n          }\n          break;\n\n        case \"enum\":\n          if (next || this.match(tt.name)) {\n            if (next) this.next();\n            return this.tsParseEnumDeclaration(node, /* isConst */ false);\n          }\n          break;\n\n        case \"interface\":\n          if (this.tsCheckLineTerminatorAndMatch(tt.name, next)) {\n            if (next) this.next();\n            return this.tsParseInterfaceDeclaration(node);\n          }\n          break;\n\n        case \"module\":\n          if (next) this.next();\n          if (this.match(tt.string)) {\n            return this.tsParseAmbientExternalModuleDeclaration(node);\n          } else if (this.tsCheckLineTerminatorAndMatch(tt.name, next)) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n          break;\n\n        case \"namespace\":\n          if (this.tsCheckLineTerminatorAndMatch(tt.name, next)) {\n            if (next) this.next();\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n          break;\n\n        case \"type\":\n          if (this.tsCheckLineTerminatorAndMatch(tt.name, next)) {\n            if (next) this.next();\n            return this.tsParseTypeAliasDeclaration(node);\n          }\n          break;\n      }\n    }\n\n    tsCheckLineTerminatorAndMatch(tokenType: TokenType, next: boolean) {\n      return (next || this.match(tokenType)) && !this.isLineTerminator();\n    }\n\n    tsTryParseGenericAsyncArrowFunction(\n      startPos: number,\n      startLoc: Position,\n    ): ?N.ArrowFunctionExpression {\n      if (!this.isRelational(\"<\")) {\n        return undefined;\n      }\n\n      const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n      const oldYieldPos = this.state.yieldPos;\n      const oldAwaitPos = this.state.awaitPos;\n      this.state.maybeInArrowParameters = true;\n      this.state.yieldPos = -1;\n      this.state.awaitPos = -1;\n\n      const res: ?N.ArrowFunctionExpression = this.tsTryParseAndCatch(() => {\n        const node: N.ArrowFunctionExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        node.typeParameters = this.tsParseTypeParameters();\n        // Don't use overloaded parseFunctionParams which would look for \"<\" again.\n        super.parseFunctionParams(node);\n        node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n        this.expect(tt.arrow);\n        return node;\n      });\n\n      this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n      this.state.yieldPos = oldYieldPos;\n      this.state.awaitPos = oldAwaitPos;\n\n      if (!res) {\n        return undefined;\n      }\n\n      return this.parseArrowExpression(\n        res,\n        /* params are already set */ null,\n        /* async */ true,\n      );\n    }\n\n    tsParseTypeArguments(): N.TsTypeParameterInstantiation {\n      const node = this.startNode();\n      node.params = this.tsInType(() =>\n        // Temporarily remove a JSX parsing context, which makes us scan different tokens.\n        this.tsInNoContext(() => {\n          this.expectRelational(\"<\");\n          return this.tsParseDelimitedList(\n            \"TypeParametersOrArguments\",\n            this.tsParseType.bind(this),\n          );\n        }),\n      );\n      if (node.params.length === 0) {\n        this.raise(node.start, TSErrors.EmptyTypeArguments);\n      }\n      // This reads the next token after the `>` too, so do this in the enclosing context.\n      // But be sure not to parse a regex in the jsx expression `<C<number> />`, so set exprAllowed = false\n      this.state.exprAllowed = false;\n      this.expectRelational(\">\");\n      return this.finishNode(node, \"TSTypeParameterInstantiation\");\n    }\n\n    tsIsDeclarationStart(): boolean {\n      if (this.match(tt.name)) {\n        switch (this.state.value) {\n          case \"abstract\":\n          case \"declare\":\n          case \"enum\":\n          case \"interface\":\n          case \"module\":\n          case \"namespace\":\n          case \"type\":\n            return true;\n        }\n      }\n\n      return false;\n    }\n\n    // ======================================================\n    // OVERRIDES\n    // ======================================================\n\n    isExportDefaultSpecifier(): boolean {\n      if (this.tsIsDeclarationStart()) return false;\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseAssignableListItem(\n      allowModifiers: ?boolean,\n      decorators: N.Decorator[],\n    ): N.Pattern | N.TSParameterProperty {\n      // Store original location/position to include modifiers in range\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n\n      let accessibility: ?N.Accessibility;\n      let readonly = false;\n      if (allowModifiers !== undefined) {\n        accessibility = this.parseAccessModifier();\n        readonly = !!this.tsParseModifier([\"readonly\"]);\n        if (allowModifiers === false && (accessibility || readonly)) {\n          this.raise(startPos, TSErrors.UnexpectedParameterModifier);\n        }\n      }\n\n      const left = this.parseMaybeDefault();\n      this.parseAssignableListItemTypes(left);\n      const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n      if (accessibility || readonly) {\n        const pp: N.TSParameterProperty = this.startNodeAt(startPos, startLoc);\n        if (decorators.length) {\n          pp.decorators = decorators;\n        }\n        if (accessibility) pp.accessibility = accessibility;\n        if (readonly) pp.readonly = readonly;\n        if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n          this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);\n        }\n        pp.parameter = ((elt: any): N.Identifier | N.AssignmentPattern);\n        return this.finishNode(pp, \"TSParameterProperty\");\n      }\n\n      if (decorators.length) {\n        left.decorators = decorators;\n      }\n\n      return elt;\n    }\n\n    parseFunctionBodyAndFinish(\n      node: N.BodilessFunctionOrMethodBase,\n      type: string,\n      isMethod?: boolean = false,\n    ): void {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeOrTypePredicateAnnotation(tt.colon);\n      }\n\n      const bodilessType =\n        type === \"FunctionDeclaration\"\n          ? \"TSDeclareFunction\"\n          : type === \"ClassMethod\"\n          ? \"TSDeclareMethod\"\n          : undefined;\n      if (bodilessType && !this.match(tt.braceL) && this.isLineTerminator()) {\n        this.finishNode(node, bodilessType);\n        return;\n      }\n      if (bodilessType === \"TSDeclareFunction\" && this.state.isDeclareContext) {\n        this.raise(node.start, TSErrors.DeclareFunctionHasImplementation);\n        if (\n          // $FlowIgnore\n          node.declare\n        ) {\n          super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n          return;\n        }\n      }\n\n      super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    registerFunctionStatementId(node: N.Function): void {\n      if (!node.body && node.id) {\n        // Function ids are validated after parsing their body.\n        // For bodyless function, we need to do it here.\n        this.checkLVal(node.id, BIND_TS_AMBIENT, null, \"function name\");\n      } else {\n        super.registerFunctionStatementId(...arguments);\n      }\n    }\n\n    tsCheckForInvalidTypeCasts(items: $ReadOnlyArray<?N.Expression>) {\n      items.forEach(node => {\n        if (node?.type === \"TSTypeCastExpression\") {\n          this.raise(\n            node.typeAnnotation.start,\n            TSErrors.UnexpectedTypeAnnotation,\n          );\n        }\n      });\n    }\n\n    toReferencedList(\n      exprList: $ReadOnlyArray<?N.Expression>,\n      isInParens?: boolean, // eslint-disable-line no-unused-vars\n    ): $ReadOnlyArray<?N.Expression> {\n      // Handles invalid scenarios like: `f(a:b)`, `(a:b);`, and `(a:b,c:d)`.\n      //\n      // Note that `f<T>(a:b)` goes through a different path and is handled\n      // in `parseSubscript` directly.\n      this.tsCheckForInvalidTypeCasts(exprList);\n      return exprList;\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: ?boolean,\n      state: N.ParseSubscriptState,\n    ): N.Expression {\n      if (!this.hasPrecedingLineBreak() && this.match(tt.bang)) {\n        this.state.exprAllowed = false;\n        this.next();\n\n        const nonNullExpression: N.TsNonNullExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        nonNullExpression.expression = base;\n        return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n      }\n\n      if (this.isRelational(\"<\")) {\n        // tsTryParseAndCatch is expensive, so avoid if not necessary.\n        // There are number of things we are going to \"maybe\" parse, like type arguments on\n        // tagged template expressions. If any of them fail, walk it back and continue.\n        const result = this.tsTryParseAndCatch(() => {\n          if (!noCalls && this.atPossibleAsyncArrow(base)) {\n            // Almost certainly this is a generic async function `async <T>() => ...\n            // But it might be a call with a type argument `async<T>();`\n            const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(\n              startPos,\n              startLoc,\n            );\n            if (asyncArrowFn) {\n              return asyncArrowFn;\n            }\n          }\n\n          const node: N.CallExpression = this.startNodeAt(startPos, startLoc);\n          node.callee = base;\n\n          const typeArguments = this.tsParseTypeArguments();\n\n          if (typeArguments) {\n            if (!noCalls && this.eat(tt.parenL)) {\n              // possibleAsync always false here, because we would have handled it above.\n              // $FlowIgnore (won't be any undefined arguments)\n              node.arguments = this.parseCallExpressionArguments(\n                tt.parenR,\n                /* possibleAsync */ false,\n              );\n\n              // Handles invalid case: `f<T>(a:b)`\n              this.tsCheckForInvalidTypeCasts(node.arguments);\n\n              node.typeParameters = typeArguments;\n              return this.finishCallExpression(node, state.optionalChainMember);\n            } else if (this.match(tt.backQuote)) {\n              const result = this.parseTaggedTemplateExpression(\n                base,\n                startPos,\n                startLoc,\n                state,\n              );\n              result.typeParameters = typeArguments;\n              return result;\n            }\n          }\n\n          this.unexpected();\n        });\n\n        if (result) return result;\n      }\n\n      return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n    }\n\n    parseNewArguments(node: N.NewExpression): void {\n      if (this.isRelational(\"<\")) {\n        // tsTryParseAndCatch is expensive, so avoid if not necessary.\n        // 99% certain this is `new C<T>();`. But may be `new C < T;`, which is also legal.\n        const typeParameters = this.tsTryParseAndCatch(() => {\n          const args = this.tsParseTypeArguments();\n          if (!this.match(tt.parenL)) this.unexpected();\n          return args;\n        });\n        if (typeParameters) {\n          node.typeParameters = typeParameters;\n        }\n      }\n\n      super.parseNewArguments(node);\n    }\n\n    parseExprOp(\n      left: N.Expression,\n      leftStartPos: number,\n      leftStartLoc: Position,\n      minPrec: number,\n    ) {\n      if (\n        nonNull(tt._in.binop) > minPrec &&\n        !this.hasPrecedingLineBreak() &&\n        this.isContextual(\"as\")\n      ) {\n        const node: N.TsAsExpression = this.startNodeAt(\n          leftStartPos,\n          leftStartLoc,\n        );\n        node.expression = left;\n        const _const = this.tsTryNextParseConstantContext();\n        if (_const) {\n          node.typeAnnotation = _const;\n        } else {\n          node.typeAnnotation = this.tsNextThenParseType();\n        }\n        this.finishNode(node, \"TSAsExpression\");\n        // rescan `<`, `>` because they were scanned when this.state.inType was true\n        this.reScan_lt_gt();\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n\n      return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    checkReservedWord(\n      word: string, // eslint-disable-line no-unused-vars\n      startLoc: number, // eslint-disable-line no-unused-vars\n      checkKeywords: boolean, // eslint-disable-line no-unused-vars\n      // eslint-disable-next-line no-unused-vars\n      isBinding: boolean,\n    ): void {\n      // Don't bother checking for TypeScript code.\n      // Strict mode words may be allowed as in `declare namespace N { const static: number; }`.\n      // And we have a type checker anyway, so don't bother having the parser do it.\n    }\n\n    /*\n    Don't bother doing this check in TypeScript code because:\n    1. We may have a nested export statement with the same name:\n      export const x = 0;\n      export namespace N {\n        export const x = 1;\n      }\n    2. We have a type checker to warn us about this sort of thing.\n    */\n    checkDuplicateExports() {}\n\n    parseImport(node: N.Node): N.AnyImport {\n      if (this.match(tt.name) || this.match(tt.star) || this.match(tt.braceL)) {\n        const ahead = this.lookahead();\n\n        if (this.match(tt.name) && ahead.type === tt.eq) {\n          return this.tsParseImportEqualsDeclaration(node);\n        }\n\n        if (\n          this.isContextual(\"type\") &&\n          // import type, { a } from \"b\";\n          ahead.type !== tt.comma &&\n          // import type from \"a\";\n          !(ahead.type === tt.name && ahead.value === \"from\")\n        ) {\n          node.importKind = \"type\";\n          this.next();\n        } else {\n          node.importKind = \"value\";\n        }\n      }\n\n      const importNode = super.parseImport(node);\n      /*:: invariant(importNode.type !== \"TSImportEqualsDeclaration\") */\n\n      // `import type` can only be used on imports with named imports or with a\n      // default import - but not both\n      if (\n        importNode.importKind === \"type\" &&\n        importNode.specifiers.length > 1 &&\n        importNode.specifiers[0].type === \"ImportDefaultSpecifier\"\n      ) {\n        this.raise(\n          importNode.start,\n          \"A type-only import can specify a default import or named bindings, but not both.\",\n        );\n      }\n\n      return importNode;\n    }\n\n    parseExport(node: N.Node): N.AnyExport {\n      if (this.match(tt._import)) {\n        // `export import A = B;`\n        this.expect(tt._import);\n        return this.tsParseImportEqualsDeclaration(node, /* isExport */ true);\n      } else if (this.eat(tt.eq)) {\n        // `export = x;`\n        const assign: N.TsExportAssignment = node;\n        assign.expression = this.parseExpression();\n        this.semicolon();\n        return this.finishNode(assign, \"TSExportAssignment\");\n      } else if (this.eatContextual(\"as\")) {\n        // `export as namespace A;`\n        const decl: N.TsNamespaceExportDeclaration = node;\n        // See `parseNamespaceExportDeclaration` in TypeScript's own parser\n        this.expectContextual(\"namespace\");\n        decl.id = this.parseIdentifier();\n        this.semicolon();\n        return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n      } else {\n        if (this.isContextual(\"type\") && this.lookahead().type === tt.braceL) {\n          this.next();\n          node.exportKind = \"type\";\n        } else {\n          node.exportKind = \"value\";\n        }\n\n        return super.parseExport(node);\n      }\n    }\n\n    isAbstractClass(): boolean {\n      return (\n        this.isContextual(\"abstract\") && this.lookahead().type === tt._class\n      );\n    }\n\n    parseExportDefaultExpression(): N.Expression | N.Declaration {\n      if (this.isAbstractClass()) {\n        const cls = this.startNode();\n        this.next(); // Skip \"abstract\"\n        this.parseClass(cls, true, true);\n        cls.abstract = true;\n        return cls;\n      }\n\n      // export default interface allowed in:\n      // https://github.com/Microsoft/TypeScript/pull/16040\n      if (this.state.value === \"interface\") {\n        const result = this.tsParseDeclaration(\n          this.startNode(),\n          this.state.value,\n          true,\n        );\n\n        if (result) return result;\n      }\n\n      return super.parseExportDefaultExpression();\n    }\n\n    parseStatementContent(context: ?string, topLevel: ?boolean): N.Statement {\n      if (this.state.type === tt._const) {\n        const ahead = this.lookahead();\n        if (ahead.type === tt.name && ahead.value === \"enum\") {\n          const node: N.TsEnumDeclaration = this.startNode();\n          this.expect(tt._const);\n          this.expectContextual(\"enum\");\n          return this.tsParseEnumDeclaration(node, /* isConst */ true);\n        }\n      }\n      return super.parseStatementContent(context, topLevel);\n    }\n\n    parseAccessModifier(): ?N.Accessibility {\n      return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: N.ParseClassMemberState,\n    ): void {\n      this.tsParseModifiers(member, [\"declare\"]);\n      const accessibility = this.parseAccessModifier();\n      if (accessibility) member.accessibility = accessibility;\n      this.tsParseModifiers(member, [\"declare\"]);\n\n      const callParseClassMember = () => {\n        super.parseClassMember(classBody, member, state);\n      };\n      if (member.declare) {\n        this.tsInDeclareContext(callParseClassMember);\n      } else {\n        callParseClassMember();\n      }\n    }\n\n    parseClassMemberWithIsStatic(\n      classBody: N.ClassBody,\n      member: N.ClassMember | N.TsIndexSignature,\n      state: N.ParseClassMemberState,\n      isStatic: boolean,\n    ): void {\n      this.tsParseModifiers(member, [\"abstract\", \"readonly\", \"declare\"]);\n\n      const idx = this.tsTryParseIndexSignature(member);\n      if (idx) {\n        classBody.body.push(idx);\n\n        if ((member: any).abstract) {\n          this.raise(member.start, TSErrors.IndexSignatureHasAbstract);\n        }\n        if (isStatic) {\n          this.raise(member.start, TSErrors.IndexSignatureHasStatic);\n        }\n        if ((member: any).accessibility) {\n          this.raise(\n            member.start,\n            TSErrors.IndexSignatureHasAccessibility,\n            (member: any).accessibility,\n          );\n        }\n        if ((member: any).declare) {\n          this.raise(member.start, TSErrors.IndexSignatureHasDeclare);\n        }\n\n        return;\n      }\n\n      /*:: invariant(member.type !== \"TSIndexSignature\") */\n\n      super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n    }\n\n    parsePostMemberNameModifiers(\n      methodOrProp: N.ClassMethod | N.ClassProperty | N.ClassPrivateProperty,\n    ): void {\n      const optional = this.eat(tt.question);\n      if (optional) methodOrProp.optional = true;\n\n      if ((methodOrProp: any).readonly && this.match(tt.parenL)) {\n        this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);\n      }\n\n      if ((methodOrProp: any).declare && this.match(tt.parenL)) {\n        this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);\n      }\n    }\n\n    // Note: The reason we do this in `parseExpressionStatement` and not `parseStatement`\n    // is that e.g. `type()` is valid JS, so we must try parsing that first.\n    // If it's really a type, we will parse `type` as the statement, and can correct it here\n    // by parsing the rest.\n    parseExpressionStatement(\n      node: N.ExpressionStatement,\n      expr: N.Expression,\n    ): N.Statement {\n      const decl =\n        expr.type === \"Identifier\"\n          ? this.tsParseExpressionStatement(node, expr)\n          : undefined;\n      return decl || super.parseExpressionStatement(node, expr);\n    }\n\n    // export type\n    // Should be true for anything parsed by `tsTryParseExportDeclaration`.\n    shouldParseExportDeclaration(): boolean {\n      if (this.tsIsDeclarationStart()) return true;\n      return super.shouldParseExportDeclaration();\n    }\n\n    // An apparent conditional expression could actually be an optional parameter in an arrow function.\n    parseConditional(\n      expr: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      refNeedsArrowPos?: ?Pos,\n    ): N.Expression {\n      // only do the expensive clone if there is a question mark\n      // and if we come from inside parens\n      if (!refNeedsArrowPos || !this.match(tt.question)) {\n        return super.parseConditional(\n          expr,\n          startPos,\n          startLoc,\n          refNeedsArrowPos,\n        );\n      }\n\n      const result = this.tryParse(() =>\n        super.parseConditional(expr, startPos, startLoc),\n      );\n\n      if (!result.node) {\n        // $FlowIgnore\n        refNeedsArrowPos.start = result.error.pos || this.state.start;\n        return expr;\n      }\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    // Note: These \"type casts\" are *not* valid TS expressions.\n    // But we parse them here and change them when completing the arrow function.\n    parseParenItem(\n      node: N.Expression,\n      startPos: number,\n      startLoc: Position,\n    ): N.Expression {\n      node = super.parseParenItem(node, startPos, startLoc);\n      if (this.eat(tt.question)) {\n        node.optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode: N.TsTypeCastExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    parseExportDeclaration(node: N.ExportNamedDeclaration): ?N.Declaration {\n      // Store original location/position\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n\n      // \"export declare\" is equivalent to just \"export\".\n      const isDeclare = this.eatContextual(\"declare\");\n\n      let declaration: ?N.Declaration;\n\n      if (this.match(tt.name)) {\n        declaration = this.tsTryParseExportDeclaration();\n      }\n      if (!declaration) {\n        declaration = super.parseExportDeclaration(node);\n      }\n      if (\n        declaration &&\n        (declaration.type === \"TSInterfaceDeclaration\" ||\n          declaration.type === \"TSTypeAliasDeclaration\" ||\n          isDeclare)\n      ) {\n        node.exportKind = \"type\";\n      }\n\n      if (declaration && isDeclare) {\n        // Reset location to include `declare` in range\n        this.resetStartLocation(declaration, startPos, startLoc);\n\n        declaration.declare = true;\n      }\n\n      return declaration;\n    }\n\n    parseClassId(\n      node: N.Class,\n      isStatement: boolean,\n      optionalId: ?boolean,\n    ): void {\n      if ((!isStatement || optionalId) && this.isContextual(\"implements\")) {\n        return;\n      }\n\n      super.parseClassId(\n        node,\n        isStatement,\n        optionalId,\n        (node: any).declare ? BIND_TS_AMBIENT : BIND_CLASS,\n      );\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) node.typeParameters = typeParameters;\n    }\n\n    parseClassPropertyAnnotation(\n      node: N.ClassProperty | N.ClassPrivateProperty,\n    ): void {\n      if (!node.optional && this.eat(tt.bang)) {\n        node.definite = true;\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n    }\n\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      this.parseClassPropertyAnnotation(node);\n\n      if (this.state.isDeclareContext && this.match(tt.eq)) {\n        this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);\n      }\n\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      // $FlowIgnore\n      if (node.abstract) {\n        this.raise(node.start, TSErrors.PrivateElementHasAbstract);\n      }\n\n      // $FlowIgnore\n      if (node.accessibility) {\n        this.raise(\n          node.start,\n          TSErrors.PrivateElementHasAccessibility,\n          node.accessibility,\n        );\n      }\n\n      this.parseClassPropertyAnnotation(node);\n      return super.parseClassPrivateProperty(node);\n    }\n\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters && isConstructor) {\n        this.raise(typeParameters.start, TSErrors.ConstructorHasTypeParameters);\n      }\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      if (node.superClass && this.isRelational(\"<\")) {\n        node.superTypeParameters = this.tsParseTypeArguments();\n      }\n      if (this.eatContextual(\"implements\")) {\n        node.implements = this.tsParseHeritageClause(\"implements\");\n      }\n    }\n\n    parseObjPropValue(prop: N.ObjectMember, ...args): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) prop.typeParameters = typeParameters;\n\n      super.parseObjPropValue(prop, ...args);\n    }\n\n    parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) node.typeParameters = typeParameters;\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    // `let x: number;`\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (decl.id.type === \"Identifier\" && this.eat(tt.bang)) {\n        decl.definite = true;\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) {\n        decl.id.typeAnnotation = type;\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeAnnotation();\n      }\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    parseMaybeAssign(...args): N.Expression {\n      // Note: When the JSX plugin is on, type assertions (`<T> x`) aren't valid syntax.\n\n      let state: ?State;\n      let jsx;\n      let typeCast;\n\n      if (this.match(tt.jsxTagStart)) {\n        // Prefer to parse JSX if possible. But may be an arrow fn.\n        state = this.state.clone();\n\n        jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n        /*:: invariant(!jsx.aborted) */\n\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` and `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        if (context[context.length - 1] === ct.j_oTag) {\n          context.length -= 2;\n        } else if (context[context.length - 1] === ct.j_expr) {\n          context.length -= 1;\n        }\n      }\n\n      if (!jsx?.error && !this.isRelational(\"<\")) {\n        return super.parseMaybeAssign(...args);\n      }\n\n      // Either way, we're looking at a '<': tt.jsxTagStart or relational.\n\n      let typeParameters: N.TsTypeParameterDeclaration;\n      state = state || this.state.clone();\n\n      const arrow = this.tryParse(abort => {\n        // This is similar to TypeScript's `tryParseParenthesizedArrowFunctionExpression`.\n        typeParameters = this.tsParseTypeParameters();\n        const expr = super.parseMaybeAssign(...args);\n\n        if (\n          expr.type !== \"ArrowFunctionExpression\" ||\n          (expr.extra && expr.extra.parenthesized)\n        ) {\n          abort();\n        }\n\n        // Correct TypeScript code should have at least 1 type parameter, but don't crash on bad code.\n        if (typeParameters?.params.length !== 0) {\n          this.resetStartLocationFromNode(expr, typeParameters);\n        }\n        expr.typeParameters = typeParameters;\n        return expr;\n      }, state);\n\n      if (!arrow.error && !arrow.aborted) return arrow.node;\n\n      if (!jsx) {\n        // Try parsing a type cast instead of an arrow function.\n        // This will never happen outside of JSX.\n        // (Because in JSX the '<' should be a jsxTagStart and not a relational.\n        assert(!this.hasPlugin(\"jsx\"));\n\n        // This will start with a type assertion (via parseMaybeUnary).\n        // But don't directly call `this.tsParseTypeAssertion` because we want to handle any binary after it.\n        typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n        /*:: invariant(!typeCast.aborted) */\n        if (!typeCast.error) return typeCast.node;\n      }\n\n      if (jsx?.node) {\n        /*:: invariant(jsx.failState) */\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n\n      if (arrow.node) {\n        /*:: invariant(arrow.failState) */\n        this.state = arrow.failState;\n        return arrow.node;\n      }\n\n      if (typeCast?.node) {\n        /*:: invariant(typeCast.failState) */\n        this.state = typeCast.failState;\n        return typeCast.node;\n      }\n\n      if (jsx?.thrown) throw jsx.error;\n      if (arrow.thrown) throw arrow.error;\n      if (typeCast?.thrown) throw typeCast.error;\n\n      throw jsx?.error || arrow.error || typeCast?.error;\n    }\n\n    // Handle type assertions\n    parseMaybeUnary(refExpressionErrors?: ?ExpressionErrors): N.Expression {\n      if (!this.hasPlugin(\"jsx\") && this.isRelational(\"<\")) {\n        return this.tsParseTypeAssertion();\n      } else {\n        return super.parseMaybeUnary(refExpressionErrors);\n      }\n    }\n\n    parseArrow(node: N.ArrowFunctionExpression): ?N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        // This is different from how the TS parser does it.\n        // TS uses lookahead. The Babel Parser parses it as a parenthesized expression and converts.\n\n        const result = this.tryParse(abort => {\n          const returnType = this.tsParseTypeOrTypePredicateAnnotation(\n            tt.colon,\n          );\n          if (this.canInsertSemicolon() || !this.match(tt.arrow)) abort();\n          return returnType;\n        });\n\n        if (result.aborted) return;\n\n        if (!result.thrown) {\n          if (result.error) this.state = result.failState;\n          node.returnType = result.node;\n        }\n      }\n\n      return super.parseArrow(node);\n    }\n\n    // Allow type annotations inside of a parameter list.\n    parseAssignableListItemTypes(param: N.Pattern) {\n      if (this.eat(tt.question)) {\n        if (param.type !== \"Identifier\" && !this.state.isDeclareContext) {\n          this.raise(param.start, TSErrors.PatternIsOptional);\n        }\n\n        ((param: any): N.Identifier).optional = true;\n      }\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) param.typeAnnotation = type;\n      this.resetEndLocation(param);\n\n      return param;\n    }\n\n    toAssignable(node: N.Node): N.Node {\n      switch (node.type) {\n        case \"TSTypeCastExpression\":\n          return super.toAssignable(this.typeCastToParameter(node));\n        case \"TSParameterProperty\":\n          return super.toAssignable(node);\n        case \"TSAsExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n          node.expression = this.toAssignable(node.expression);\n          return node;\n        default:\n          return super.toAssignable(node);\n      }\n    }\n\n    checkLVal(\n      expr: N.Expression,\n      bindingType: BindingTypes = BIND_NONE,\n      checkClashes: ?{ [key: string]: boolean },\n      contextDescription: string,\n    ): void {\n      switch (expr.type) {\n        case \"TSTypeCastExpression\":\n          // Allow \"typecasts\" to appear on the left of assignment expressions,\n          // because it may be in an arrow function.\n          // e.g. `const f = (foo: number = 0) => foo;`\n          return;\n        case \"TSParameterProperty\":\n          this.checkLVal(\n            expr.parameter,\n            bindingType,\n            checkClashes,\n            \"parameter property\",\n          );\n          return;\n        case \"TSAsExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n          this.checkLVal(\n            expr.expression,\n            bindingType,\n            checkClashes,\n            contextDescription,\n          );\n          return;\n        default:\n          super.checkLVal(expr, bindingType, checkClashes, contextDescription);\n          return;\n      }\n    }\n\n    parseBindingAtom(): N.Pattern {\n      switch (this.state.type) {\n        case tt._this:\n          // \"this\" may be the name of a parameter, so allow it.\n          return this.parseIdentifier(/* liberal */ true);\n        default:\n          return super.parseBindingAtom();\n      }\n    }\n\n    parseMaybeDecoratorArguments(expr: N.Expression): N.Expression {\n      if (this.isRelational(\"<\")) {\n        const typeArguments = this.tsParseTypeArguments();\n\n        if (this.match(tt.parenL)) {\n          const call = super.parseMaybeDecoratorArguments(expr);\n          call.typeParameters = typeArguments;\n          return call;\n        }\n\n        this.unexpected(this.state.start, tt.parenL);\n      }\n\n      return super.parseMaybeDecoratorArguments(expr);\n    }\n\n    // === === === === === === === === === === === === === === === ===\n    // Note: All below methods are duplicates of something in flow.js.\n    // Not sure what the best way to combine these is.\n    // === === === === === === === === === === === === === === === ===\n\n    isClassMethod(): boolean {\n      return this.isRelational(\"<\") || super.isClassMethod();\n    }\n\n    isClassProperty(): boolean {\n      return (\n        this.match(tt.bang) || this.match(tt.colon) || super.isClassProperty()\n      );\n    }\n\n    parseMaybeDefault(...args): N.Pattern {\n      const node = super.parseMaybeDefault(...args);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(\n          node.typeAnnotation.start,\n          TSErrors.TypeAnnotationAfterAssign,\n        );\n      }\n\n      return node;\n    }\n\n    // ensure that inside types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      if (\n        this.state.inType &&\n        (code === charCodes.greaterThan || code === charCodes.lessThan)\n      ) {\n        return this.finishOp(tt.relational, 1);\n      } else {\n        return super.getTokenFromCode(code);\n      }\n    }\n\n    // used after we have finished parsing types\n    reScan_lt_gt() {\n      if (this.match(tt.relational)) {\n        const code = this.input.charCodeAt(this.state.start);\n        if (code === charCodes.lessThan || code === charCodes.greaterThan) {\n          this.state.pos -= 1;\n          this.readToken_lt_gt(code);\n        }\n      }\n    }\n\n    toAssignableList(exprList: N.Expression[]): $ReadOnlyArray<N.Pattern> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (!expr) continue;\n        switch (expr.type) {\n          case \"TSTypeCastExpression\":\n            exprList[i] = this.typeCastToParameter(expr);\n            break;\n          case \"TSAsExpression\":\n          case \"TSTypeAssertion\":\n            if (!this.state.maybeInArrowParameters) {\n              exprList[i] = this.typeCastToParameter(expr);\n            } else {\n              this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);\n            }\n            break;\n        }\n      }\n      return super.toAssignableList(...arguments);\n    }\n\n    typeCastToParameter(node: N.TsTypeCastExpression): N.Node {\n      node.expression.typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(\n        node.expression,\n        node.typeAnnotation.end,\n        node.typeAnnotation.loc.end,\n      );\n\n      return node.expression;\n    }\n\n    shouldParseArrow() {\n      return this.match(tt.colon) || super.shouldParseArrow();\n    }\n\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    canHaveLeadingDecorator() {\n      // Avoid unnecessary lookahead in checking for abstract class unless needed!\n      return super.canHaveLeadingDecorator() || this.isAbstractClass();\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: N.JSXOpeningElement,\n    ): N.JSXOpeningElement {\n      if (this.isRelational(\"<\")) {\n        const typeArguments = this.tsTryParseAndCatch(() =>\n          this.tsParseTypeArguments(),\n        );\n        if (typeArguments) node.typeParameters = typeArguments;\n      }\n      return super.jsxParseOpeningElementAfterName(node);\n    }\n\n    getGetterSetterExpectedParamCount(\n      method: N.ObjectMethod | N.ClassMethod,\n    ): number {\n      const baseCount = super.getGetterSetterExpectedParamCount(method);\n      const firstParam = method.params[0];\n      const hasContextParam =\n        firstParam &&\n        firstParam.type === \"Identifier\" &&\n        firstParam.name === \"this\";\n\n      return hasContextParam ? baseCount + 1 : baseCount;\n    }\n\n    parseCatchClauseParam(): N.Pattern {\n      const param = super.parseCatchClauseParam();\n      const type = this.tsTryParseTypeAnnotation();\n\n      if (type) {\n        param.typeAnnotation = type;\n        this.resetEndLocation(param);\n      }\n\n      return param;\n    }\n\n    tsInDeclareContext<T>(cb: () => T): T {\n      const oldIsDeclareContext = this.state.isDeclareContext;\n      this.state.isDeclareContext = true;\n      try {\n        return cb();\n      } finally {\n        this.state.isDeclareContext = oldIsDeclareContext;\n      }\n    }\n  };\n","// @flow\n\nimport * as charCodes from \"charcodes\";\n\nimport { types as tt, TokenType } from \"../tokenizer/types\";\nimport type Parser from \"../parser\";\nimport * as N from \"../types\";\n\ntt.placeholder = new TokenType(\"%%\", { startsExpr: true });\n\nexport type PlaceholderTypes =\n  | \"Identifier\"\n  | \"StringLiteral\"\n  | \"Expression\"\n  | \"Statement\"\n  | \"Declaration\"\n  | \"BlockStatement\"\n  | \"ClassBody\"\n  | \"Pattern\";\n\n// $PropertyType doesn't support enums. Use a fake \"switch\" (GetPlaceholderNode)\n//type MaybePlaceholder<T: PlaceholderTypes> = $PropertyType<N, T> | N.Placeholder<T>;\n\ntype _Switch<Value, Cases, Index> = $Call<\n  (\n    $ElementType<$ElementType<Cases, Index>, 0>,\n  ) => $ElementType<$ElementType<Cases, Index>, 1>,\n  Value,\n>;\ntype $Switch<Value, Cases> = _Switch<Value, Cases, *>;\n\ntype NodeOf<T: PlaceholderTypes> = $Switch<\n  T,\n  [\n    [\"Identifier\", N.Identifier],\n    [\"StringLiteral\", N.StringLiteral],\n    [\"Expression\", N.Expression],\n    [\"Statement\", N.Statement],\n    [\"Declaration\", N.Declaration],\n    [\"BlockStatement\", N.BlockStatement],\n    [\"ClassBody\", N.ClassBody],\n    [\"Pattern\", N.Pattern],\n  ],\n>;\n\n// Placeholder<T> breaks everything, because its type is incompatible with\n// the substituted nodes.\ntype MaybePlaceholder<T: PlaceholderTypes> = NodeOf<T>; // | Placeholder<T>\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    parsePlaceholder<T: PlaceholderTypes>(\n      expectedNode: T,\n    ): /*?N.Placeholder<T>*/ ?MaybePlaceholder<T> {\n      if (this.match(tt.placeholder)) {\n        const node = this.startNode();\n        this.next();\n        this.assertNoSpace(\"Unexpected space in placeholder.\");\n\n        // We can't use this.parseIdentifier because\n        // we don't want nested placeholders.\n        node.name = super.parseIdentifier(/* liberal */ true);\n\n        this.assertNoSpace(\"Unexpected space in placeholder.\");\n        this.expect(tt.placeholder);\n        return this.finishPlaceholder(node, expectedNode);\n      }\n    }\n\n    finishPlaceholder<T: PlaceholderTypes>(\n      node: N.Node,\n      expectedNode: T,\n    ): /*N.Placeholder<T>*/ MaybePlaceholder<T> {\n      const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n      node.expectedNode = expectedNode;\n\n      return isFinished ? node : this.finishNode(node, \"Placeholder\");\n    }\n\n    /* ============================================================ *\n     * tokenizer/index.js                                           *\n     * ============================================================ */\n\n    getTokenFromCode(code: number) {\n      if (\n        code === charCodes.percentSign &&\n        this.input.charCodeAt(this.state.pos + 1) === charCodes.percentSign\n      ) {\n        return this.finishOp(tt.placeholder, 2);\n      }\n\n      return super.getTokenFromCode(...arguments);\n    }\n\n    /* ============================================================ *\n     * parser/expression.js                                         *\n     * ============================================================ */\n\n    parseExprAtom(): MaybePlaceholder<\"Expression\"> {\n      return (\n        this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments)\n      );\n    }\n\n    parseIdentifier(): MaybePlaceholder<\"Identifier\"> {\n      // NOTE: This function only handles identifiers outside of\n      // expressions and binding patterns, since they are already\n      // handled by the parseExprAtom and parseBindingAtom functions.\n      // This is needed, for example, to parse \"class %%NAME%% {}\".\n      return (\n        this.parsePlaceholder(\"Identifier\") ||\n        super.parseIdentifier(...arguments)\n      );\n    }\n\n    checkReservedWord(word: string): void {\n      // Sometimes we call #checkReservedWord(node.name), expecting\n      // that node is an Identifier. If it is a Placeholder, name\n      // will be undefined.\n      if (word !== undefined) super.checkReservedWord(...arguments);\n    }\n\n    /* ============================================================ *\n     * parser/lval.js                                               *\n     * ============================================================ */\n\n    parseBindingAtom(): MaybePlaceholder<\"Pattern\"> {\n      return (\n        this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom(...arguments)\n      );\n    }\n\n    checkLVal(expr: N.Expression): void {\n      if (expr.type !== \"Placeholder\") super.checkLVal(...arguments);\n    }\n\n    toAssignable(node: N.Node): N.Node {\n      if (\n        node &&\n        node.type === \"Placeholder\" &&\n        node.expectedNode === \"Expression\"\n      ) {\n        node.expectedNode = \"Pattern\";\n        return node;\n      }\n      return super.toAssignable(...arguments);\n    }\n\n    /* ============================================================ *\n     * parser/statement.js                                          *\n     * ============================================================ */\n\n    verifyBreakContinue(node: N.BreakStatement | N.ContinueStatement) {\n      if (node.label && node.label.type === \"Placeholder\") return;\n      super.verifyBreakContinue(...arguments);\n    }\n\n    parseExpressionStatement(\n      node: MaybePlaceholder<\"Statement\">,\n      expr: N.Expression,\n    ): MaybePlaceholder<\"Statement\"> {\n      if (\n        expr.type !== \"Placeholder\" ||\n        (expr.extra && expr.extra.parenthesized)\n      ) {\n        return super.parseExpressionStatement(...arguments);\n      }\n\n      if (this.match(tt.colon)) {\n        const stmt: N.LabeledStatement = node;\n        stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n        this.next();\n        stmt.body = this.parseStatement(\"label\");\n        return this.finishNode(stmt, \"LabeledStatement\");\n      }\n\n      this.semicolon();\n\n      node.name = expr.name;\n      return this.finishPlaceholder(node, \"Statement\");\n    }\n\n    parseBlock(): MaybePlaceholder<\"BlockStatement\"> {\n      return (\n        this.parsePlaceholder(\"BlockStatement\") ||\n        super.parseBlock(...arguments)\n      );\n    }\n\n    parseFunctionId(): ?MaybePlaceholder<\"Identifier\"> {\n      return (\n        this.parsePlaceholder(\"Identifier\") ||\n        super.parseFunctionId(...arguments)\n      );\n    }\n\n    parseClass<T: N.Class>(\n      node: T,\n      isStatement: /* T === ClassDeclaration */ boolean,\n      optionalId?: boolean,\n    ): T {\n      const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n\n      this.next();\n      this.takeDecorators(node);\n      const oldStrict = this.state.strict;\n\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (placeholder) {\n        if (\n          this.match(tt._extends) ||\n          this.match(tt.placeholder) ||\n          this.match(tt.braceL)\n        ) {\n          node.id = placeholder;\n        } else if (optionalId || !isStatement) {\n          node.id = null;\n          node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n          return this.finishNode(node, type);\n        } else {\n          this.unexpected(null, \"A class name is required\");\n        }\n      } else {\n        this.parseClassId(node, isStatement, optionalId);\n      }\n\n      this.parseClassSuper(node);\n      node.body =\n        this.parsePlaceholder(\"ClassBody\") ||\n        this.parseClassBody(!!node.superClass, oldStrict);\n      return this.finishNode(node, type);\n    }\n\n    parseExport(node: N.Node): N.Node {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (!placeholder) return super.parseExport(...arguments);\n\n      if (!this.isContextual(\"from\") && !this.match(tt.comma)) {\n        // export %%DECL%%;\n        node.specifiers = [];\n        node.source = null;\n        node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n        return this.finishNode(node, \"ExportNamedDeclaration\");\n      }\n\n      // export %%NAME%% from \"foo\";\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = placeholder;\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n\n      return super.parseExport(node);\n    }\n\n    isExportDefaultSpecifier(): boolean {\n      if (this.match(tt._default)) {\n        const next = this.nextTokenStart();\n        if (this.isUnparsedContextual(next, \"from\")) {\n          if (\n            this.input.startsWith(\n              tt.placeholder.label,\n              this.nextTokenStartSince(next + 4),\n            )\n          ) {\n            return true;\n          }\n        }\n      }\n      return super.isExportDefaultSpecifier();\n    }\n\n    maybeParseExportDefaultSpecifier(node: N.Node): boolean {\n      if (node.specifiers && node.specifiers.length > 0) {\n        // \"export %%NAME%%\" has already been parsed by #parseExport.\n        return true;\n      }\n      return super.maybeParseExportDefaultSpecifier(...arguments);\n    }\n\n    checkExport(node: N.ExportNamedDeclaration): void {\n      const { specifiers } = node;\n      if (specifiers?.length) {\n        node.specifiers = specifiers.filter(\n          node => node.exported.type === \"Placeholder\",\n        );\n      }\n      super.checkExport(node);\n      node.specifiers = specifiers;\n    }\n\n    parseImport(\n      node: N.Node,\n    ): N.ImportDeclaration | N.TsImportEqualsDeclaration {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (!placeholder) return super.parseImport(...arguments);\n\n      node.specifiers = [];\n\n      if (!this.isContextual(\"from\") && !this.match(tt.comma)) {\n        // import %%STRING%%;\n        node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n        this.semicolon();\n        return this.finishNode(node, \"ImportDeclaration\");\n      }\n\n      // import %%DEFAULT%% ...\n      const specifier = this.startNodeAtNode(placeholder);\n      specifier.local = placeholder;\n      this.finishNode(specifier, \"ImportDefaultSpecifier\");\n      node.specifiers.push(specifier);\n\n      if (this.eat(tt.comma)) {\n        // import %%DEFAULT%%, * as ...\n        const hasStarImport = this.maybeParseStarImportSpecifier(node);\n\n        // import %%DEFAULT%%, { ...\n        if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n      }\n\n      this.expectContextual(\"from\");\n      node.source = this.parseImportSource();\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    parseImportSource(): MaybePlaceholder<\"StringLiteral\"> {\n      // import ... from %%STRING%%;\n\n      return (\n        this.parsePlaceholder(\"StringLiteral\") ||\n        super.parseImportSource(...arguments)\n      );\n    }\n  };\n","import type Parser from \"../parser\";\nimport { types as tt } from \"../tokenizer/types\";\nimport * as N from \"../types\";\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    parseV8Intrinsic(): N.Expression {\n      if (this.match(tt.modulo)) {\n        const v8IntrinsicStart = this.state.start;\n        // let the `loc` of Identifier starts from `%`\n        const node = this.startNode();\n        this.eat(tt.modulo);\n        if (this.match(tt.name)) {\n          const name = this.parseIdentifierName(this.state.start);\n          const identifier = this.createIdentifier(node, name);\n          identifier.type = \"V8IntrinsicIdentifier\";\n          if (this.match(tt.parenL)) {\n            return identifier;\n          }\n        }\n        this.unexpected(v8IntrinsicStart);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/expression.js                                         *\n     * ============================================================ */\n\n    parseExprAtom(): N.Expression {\n      return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n    }\n  };\n","// @flow\n\nimport type Parser from \"./parser\";\n\nexport type Plugin = string | [string, Object];\n\nexport type PluginList = $ReadOnlyArray<Plugin>;\n\nexport type MixinPlugin = (superClass: Class<Parser>) => Class<Parser>;\n\nexport function hasPlugin(plugins: PluginList, name: string): boolean {\n  return plugins.some(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n}\n\nexport function getPluginOption(\n  plugins: PluginList,\n  name: string,\n  option: string,\n) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\n\nconst PIPELINE_PROPOSALS = [\"minimal\", \"smart\", \"fsharp\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\n\nexport function validatePlugins(plugins: PluginList) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\n        \"Cannot use the decorators and decorators-legacy plugin together\",\n      );\n    }\n\n    const decoratorsBeforeExport = getPluginOption(\n      plugins,\n      \"decorators\",\n      \"decoratorsBeforeExport\",\n    );\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\n        \"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" +\n          \" whose value must be a boolean. If you are migrating from\" +\n          \" Babylon/Babel 6 or want to use the old decorators proposal, you\" +\n          \" should use the 'decorators-legacy' plugin instead of 'decorators'.\",\n      );\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (\n    hasPlugin(plugins, \"pipelineOperator\") &&\n    !PIPELINE_PROPOSALS.includes(\n      getPluginOption(plugins, \"pipelineOperator\", \"proposal\"),\n    )\n  ) {\n    throw new Error(\n      \"'pipelineOperator' requires 'proposal' option whose value should be one of: \" +\n        PIPELINE_PROPOSALS.map(p => `'${p}'`).join(\", \"),\n    );\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    if (hasPlugin(plugins, \"importAssertions\")) {\n      throw new Error(\n        \"Cannot combine importAssertions and moduleAttributes plugins.\",\n      );\n    }\n    const moduleAttributesVerionPluginOption = getPluginOption(\n      plugins,\n      \"moduleAttributes\",\n      \"version\",\n    );\n    if (moduleAttributesVerionPluginOption !== \"may-2020\") {\n      throw new Error(\n        \"The 'moduleAttributes' plugin requires a 'version' option,\" +\n          \" representing the last proposal update. Currently, the\" +\n          \" only supported value is 'may-2020'.\",\n      );\n    }\n  }\n\n  if (\n    hasPlugin(plugins, \"recordAndTuple\") &&\n    !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(\n      getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"),\n    )\n  ) {\n    throw new Error(\n      \"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" +\n        RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"),\n    );\n  }\n}\n\n// These plugins are defined using a mixin which extends the parser class.\n\nimport estree from \"./plugins/estree\";\nimport flow from \"./plugins/flow\";\nimport jsx from \"./plugins/jsx\";\nimport typescript from \"./plugins/typescript\";\nimport placeholders from \"./plugins/placeholders\";\nimport v8intrinsic from \"./plugins/v8intrinsic\";\n\n// NOTE: order is important. estree must come first; placeholders must come last.\nexport const mixinPlugins: { [name: string]: MixinPlugin } = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders,\n};\n\nexport const mixinPluginNames: $ReadOnlyArray<string> = Object.keys(\n  mixinPlugins,\n);\n","// @flow\n\nimport type { PluginList } from \"./plugin-utils\";\n\n// A second optional argument can be given to further configure\n// the parser process. These options are recognized:\n\nexport type SourceType = \"script\" | \"module\" | \"unambiguous\";\n\nexport type Options = {\n  sourceType: SourceType,\n  sourceFilename?: string,\n  startLine: number,\n  allowAwaitOutsideFunction: boolean,\n  allowReturnOutsideFunction: boolean,\n  allowImportExportEverywhere: boolean,\n  allowSuperOutsideMethod: boolean,\n  allowUndeclaredExports: boolean,\n  plugins: PluginList,\n  strictMode: ?boolean,\n  ranges: boolean,\n  tokens: boolean,\n  createParenthesizedExpressions: boolean,\n  errorRecovery: boolean,\n};\n\nexport const defaultOptions: Options = {\n  // Source type (\"script\" or \"module\") for different semantics\n  sourceType: \"script\",\n  // Source filename.\n  sourceFilename: undefined,\n  // Line from which to start counting source. Useful for\n  // integration with other tools.\n  startLine: 1,\n  // When enabled, await at the top level is not considered an\n  // error.\n  allowAwaitOutsideFunction: false,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program.\n  allowImportExportEverywhere: false,\n  // TODO\n  allowSuperOutsideMethod: false,\n  // When enabled, export statements can reference undeclared variables.\n  allowUndeclaredExports: false,\n  // An array of plugins to enable\n  plugins: [],\n  // TODO\n  strictMode: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // Adds all parsed tokens to a `tokens` property on the `File` node\n  tokens: false,\n  // Whether to create ParenthesizedExpression AST nodes (if false\n  // the parser sets extra.parenthesized on the expression nodes instead).\n  createParenthesizedExpressions: false,\n  // When enabled, errors are attached to the AST instead of being directly thrown.\n  // Some errors will still throw, because @babel/parser can't always recover.\n  errorRecovery: false,\n};\n\n// Interpret and default an options object\n\nexport function getOptions(opts: ?Options): Options {\n  const options: any = {};\n  for (const key of Object.keys(defaultOptions)) {\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n  return options;\n}\n","// @flow\n\nimport type { Options } from \"../options\";\nimport * as N from \"../types\";\nimport { Position } from \"../util/location\";\n\nimport { types as ct, type TokContext } from \"./context\";\nimport { types as tt, type TokenType } from \"./types\";\n\ntype TopicContextState = {\n  // When a topic binding has been currently established,\n  // then this is 1. Otherwise, it is 0. This is forwards compatible\n  // with a future plugin for multiple lexical topics.\n  maxNumOfResolvableTopics: number,\n\n  // When a topic binding has been currently established, and if that binding\n  // has been used as a topic reference `#`, then this is 0. Otherwise, it is\n  // `null`. This is forwards compatible with a future plugin for multiple\n  // lexical topics.\n  maxTopicIndex: null | 0,\n};\n\nexport default class State {\n  strict: boolean;\n  curLine: number;\n\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  startLoc: Position;\n  endLoc: Position;\n\n  init(options: Options): void {\n    this.strict =\n      options.strictMode === false ? false : options.sourceType === \"module\";\n\n    this.curLine = options.startLine;\n    this.startLoc = this.endLoc = this.curPosition();\n  }\n\n  errors: SyntaxError[] = [];\n\n  // Used to signify the start of a potential arrow function\n  potentialArrowAt: number = -1;\n\n  // Used to signify the start of an expression which looks like a\n  // typed arrow function, but it isn't\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowAt: number[] = [];\n\n  // Used to signify the start of an expression whose params, if it looks like\n  // an arrow function, shouldn't be converted to assignable nodes.\n  // This is used to defer the validation of typed arrow functions inside\n  // conditional expressions.\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowParamsConversionAt: number[] = [];\n\n  // Flags to track\n  inParameters: boolean = false;\n  maybeInArrowParameters: boolean = false;\n  // This flag is used to track async arrow head across function declarations.\n  // e.g. async (foo = function (await) {}) => {}\n  // When parsing `await` in this expression, `maybeInAsyncArrowHead` is true\n  // but `maybeInArrowParameters` is false\n  maybeInAsyncArrowHead: boolean = false;\n  inPipeline: boolean = false;\n  inType: boolean = false;\n  noAnonFunctionType: boolean = false;\n  inPropertyName: boolean = false;\n  hasFlowComment: boolean = false;\n  isIterator: boolean = false;\n  isDeclareContext: boolean = false;\n\n  // For the smartPipelines plugin:\n  topicContext: TopicContextState = {\n    maxNumOfResolvableTopics: 0,\n    maxTopicIndex: null,\n  };\n\n  // For the F# plugin\n  soloAwait: boolean = false;\n  inFSharpPipelineDirectBody: boolean = false;\n\n  // Labels in scope.\n  labels: Array<{\n    kind: ?(\"loop\" | \"switch\"),\n    name?: ?string,\n    statementStart?: number,\n  }> = [];\n\n  // Leading decorators. Last element of the stack represents the decorators in current context.\n  // Supports nesting of decorators, e.g. @foo(@bar class inner {}) class outer {}\n  // where @foo belongs to the outer class and @bar to the inner\n  decoratorStack: Array<Array<N.Decorator>> = [[]];\n\n  // Positions to delayed-check that yield/await does not exist in default parameters.\n  yieldPos: number = -1;\n  awaitPos: number = -1;\n\n  // Comment store.\n  comments: Array<N.Comment> = [];\n\n  // Comment attachment store\n  trailingComments: Array<N.Comment> = [];\n  leadingComments: Array<N.Comment> = [];\n  commentStack: Array<{\n    start: number,\n    leadingComments: ?Array<N.Comment>,\n    trailingComments: ?Array<N.Comment>,\n    type: string,\n  }> = [];\n  // $FlowIgnore this is initialized when the parser starts.\n  commentPreviousNode: N.Node = null;\n\n  // The current position of the tokenizer in the input.\n  pos: number = 0;\n  lineStart: number = 0;\n\n  // Properties of the current token:\n  // Its type\n  type: TokenType = tt.eof;\n\n  // For tokens that include more information than their type, the value\n  value: any = null;\n\n  // Its start and end offset\n  start: number = 0;\n  end: number = 0;\n\n  // Position information for the previous token\n  // $FlowIgnore this is initialized when generating the second token.\n  lastTokEndLoc: Position = null;\n  // $FlowIgnore this is initialized when generating the second token.\n  lastTokStartLoc: Position = null;\n  lastTokStart: number = 0;\n  lastTokEnd: number = 0;\n\n  // The context stack is used to superficially track syntactic\n  // context to predict whether a regular expression is allowed in a\n  // given position.\n  context: Array<TokContext> = [ct.braceStatement];\n  exprAllowed: boolean = true;\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  containsEsc: boolean = false;\n\n  // This property is used to throw an error for\n  // an octal literal in a directive that occurs prior\n  // to a \"use strict\" directive.\n  octalPositions: number[] = [];\n\n  // Names of exports store. `default` is stored as a name for both\n  // `export default foo;` and `export { foo as default };`.\n  exportedIdentifiers: Array<string> = [];\n\n  // Tokens length in token store\n  tokensLength: number = 0;\n\n  curPosition(): Position {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  }\n\n  clone(skipArrays?: boolean): State {\n    const state = new State();\n    const keys = Object.keys(this);\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      // $FlowIgnore\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      // $FlowIgnore\n      state[key] = val;\n    }\n\n    return state;\n  }\n}\n","// @flow\n\n/*:: declare var invariant; */\n\nimport type { Options } from \"../options\";\nimport * as N from \"../types\";\nimport type { Position } from \"../util/location\";\nimport * as charCodes from \"charcodes\";\nimport { isIdentifierStart, isIdentifierChar } from \"../util/identifier\";\nimport { types as tt, keywords as keywordTypes, type TokenType } from \"./types\";\nimport { type TokContext, types as ct } from \"./context\";\nimport ParserErrors, { Errors } from \"../parser/error\";\nimport { SourceLocation } from \"../util/location\";\nimport {\n  lineBreak,\n  lineBreakG,\n  isNewLine,\n  isWhitespace,\n  skipWhiteSpace,\n} from \"../util/whitespace\";\nimport State from \"./state\";\n\nconst VALID_REGEX_FLAGS = new Set([\"g\", \"m\", \"s\", \"i\", \"y\", \"u\"]);\n\n// The following character codes are forbidden from being\n// an immediate sibling of NumericLiteralSeparator _\n\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: [\n    charCodes.dot,\n    charCodes.uppercaseB,\n    charCodes.uppercaseE,\n    charCodes.uppercaseO,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseB,\n    charCodes.lowercaseE,\n    charCodes.lowercaseO,\n  ],\n  hex: [\n    charCodes.dot,\n    charCodes.uppercaseX,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseX,\n  ],\n};\n\nconst allowedNumericSeparatorSiblings = {};\nallowedNumericSeparatorSiblings.bin = [\n  // 0 - 1\n  charCodes.digit0,\n  charCodes.digit1,\n];\nallowedNumericSeparatorSiblings.oct = [\n  // 0 - 7\n  ...allowedNumericSeparatorSiblings.bin,\n\n  charCodes.digit2,\n  charCodes.digit3,\n  charCodes.digit4,\n  charCodes.digit5,\n  charCodes.digit6,\n  charCodes.digit7,\n];\nallowedNumericSeparatorSiblings.dec = [\n  // 0 - 9\n  ...allowedNumericSeparatorSiblings.oct,\n\n  charCodes.digit8,\n  charCodes.digit9,\n];\n\nallowedNumericSeparatorSiblings.hex = [\n  // 0 - 9, A - F, a - f,\n  ...allowedNumericSeparatorSiblings.dec,\n\n  charCodes.uppercaseA,\n  charCodes.uppercaseB,\n  charCodes.uppercaseC,\n  charCodes.uppercaseD,\n  charCodes.uppercaseE,\n  charCodes.uppercaseF,\n\n  charCodes.lowercaseA,\n  charCodes.lowercaseB,\n  charCodes.lowercaseC,\n  charCodes.lowercaseD,\n  charCodes.lowercaseE,\n  charCodes.lowercaseF,\n];\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nexport class Token {\n  constructor(state: State) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n  type: TokenType;\n  value: any;\n  start: number;\n  end: number;\n  loc: SourceLocation;\n}\n\n// ## Tokenizer\n\nexport default class Tokenizer extends ParserErrors {\n  // Forward-declarations\n  // parser/util.js\n  /*::\n  +hasPrecedingLineBreak: () => boolean;\n  +unexpected: (pos?: ?number, messageOrType?: string | TokenType) => empty;\n  +expectPlugin: (name: string, pos?: ?number) => true;\n  */\n\n  isLookahead: boolean;\n\n  // Token store.\n  tokens: Array<Token | N.Comment> = [];\n\n  constructor(options: Options, input: string) {\n    super();\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token: Token | N.Comment) {\n    // Pop out invalid tokens trapped by try-catch parsing.\n    // Those parsing branches are mainly created by typescript and flow plugins.\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  // Move to the next token\n\n  next(): void {\n    if (!this.isLookahead) {\n      this.checkKeywordEscapes();\n      if (this.options.tokens) {\n        this.pushToken(new Token(this.state));\n      }\n    }\n\n    this.state.lastTokEnd = this.state.end;\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  // TODO\n\n  eat(type: TokenType): boolean {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  // TODO\n\n  match(type: TokenType): boolean {\n    return this.state.type === type;\n  }\n\n  // TODO\n\n  lookahead(): State {\n    const old = this.state;\n    this.state = old.clone(true);\n\n    this.isLookahead = true;\n    this.next();\n    this.isLookahead = false;\n\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart(): number {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos: number): number {\n    skipWhiteSpace.lastIndex = pos;\n    const skip = skipWhiteSpace.exec(this.input);\n    // $FlowIgnore: The skipWhiteSpace ensures to match any string\n    return pos + skip[0].length;\n  }\n\n  lookaheadCharCode(): number {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  // Toggle strict mode. Re-reads the next number or string to please\n  // pedantic tests (`\"use strict\"; 010;` should fail).\n\n  setStrict(strict: boolean): void {\n    this.state.strict = strict;\n    if (!this.match(tt.num) && !this.match(tt.string)) return;\n    this.state.pos = this.state.start;\n    while (this.state.pos < this.state.lineStart) {\n      this.state.lineStart =\n        this.input.lastIndexOf(\"\\n\", this.state.lineStart - 2) + 1;\n      --this.state.curLine;\n    }\n    this.nextToken();\n  }\n\n  curContext(): TokContext {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  // Read a single token, updating the parser object's token-related\n  // properties.\n\n  nextToken(): void {\n    const curContext = this.curContext();\n    if (!curContext?.preserveSpace) this.skipSpace();\n\n    this.state.octalPositions = [];\n    this.state.start = this.state.pos;\n    this.state.startLoc = this.state.curPosition();\n    if (this.state.pos >= this.length) {\n      this.finishToken(tt.eof);\n      return;\n    }\n\n    const override = curContext?.override;\n    if (override) {\n      override(this);\n    } else {\n      this.getTokenFromCode(this.input.codePointAt(this.state.pos));\n    }\n  }\n\n  pushComment(\n    block: boolean,\n    text: string,\n    start: number,\n    end: number,\n    startLoc: Position,\n    endLoc: Position,\n  ): void {\n    const comment = {\n      type: block ? \"CommentBlock\" : \"CommentLine\",\n      value: text,\n      start: start,\n      end: end,\n      loc: new SourceLocation(startLoc, endLoc),\n    };\n\n    if (this.options.tokens) this.pushToken(comment);\n    this.state.comments.push(comment);\n    this.addComment(comment);\n  }\n\n  skipBlockComment(): void {\n    const startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", this.state.pos + 2);\n    if (end === -1) throw this.raise(start, Errors.UnterminatedComment);\n\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start;\n    let match;\n    while (\n      (match = lineBreakG.exec(this.input)) &&\n      match.index < this.state.pos\n    ) {\n      ++this.state.curLine;\n      this.state.lineStart = match.index + match[0].length;\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n\n    this.pushComment(\n      true,\n      this.input.slice(start + 2, end),\n      start,\n      this.state.pos,\n      startLoc,\n      this.state.curPosition(),\n    );\n  }\n\n  skipLineComment(startSkip: number): void {\n    const start = this.state.pos;\n    const startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt((this.state.pos += startSkip));\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n\n    this.pushComment(\n      false,\n      this.input.slice(start + startSkip, this.state.pos),\n      start,\n      this.state.pos,\n      startLoc,\n      this.state.curPosition(),\n    );\n  }\n\n  // Called at the start of the parse and after every token. Skips\n  // whitespace and comments, and.\n\n  skipSpace(): void {\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n      switch (ch) {\n        case charCodes.space:\n        case charCodes.nonBreakingSpace:\n        case charCodes.tab:\n          ++this.state.pos;\n          break;\n        case charCodes.carriageReturn:\n          if (\n            this.input.charCodeAt(this.state.pos + 1) === charCodes.lineFeed\n          ) {\n            ++this.state.pos;\n          }\n        // fall through\n        case charCodes.lineFeed:\n        case charCodes.lineSeparator:\n        case charCodes.paragraphSeparator:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case charCodes.slash:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case charCodes.asterisk:\n              this.skipBlockComment();\n              break;\n\n            case charCodes.slash:\n              this.skipLineComment(2);\n              break;\n\n            default:\n              break loop;\n          }\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else {\n            break loop;\n          }\n      }\n    }\n  }\n\n  // Called at the end of every token. Sets `end`, `val`, and\n  // maintains `context` and `exprAllowed`, and skips the space after\n  // the token, so that the next one's `start` will point at the\n  // right position.\n\n  finishToken(type: TokenType, val: any): void {\n    this.state.end = this.state.pos;\n    this.state.endLoc = this.state.curPosition();\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n\n    if (!this.isLookahead) this.updateContext(prevType);\n  }\n\n  // ### Token reading\n\n  // This is the function that is called to fetch the next token. It\n  // is somewhat obscure, because it works in character codes rather\n  // than characters, and because operator parsing has been inlined\n  // into it.\n  //\n  // All in the name of speed.\n\n  // number sign is \"#\"\n  readToken_numberSign(): void {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.input.charCodeAt(nextPos);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      throw this.raise(this.state.pos, Errors.UnexpectedDigitAfterHash);\n    }\n\n    if (\n      next === charCodes.leftCurlyBrace ||\n      (next === charCodes.leftSquareBracket && this.hasPlugin(\"recordAndTuple\"))\n    ) {\n      // When we see `#{`, it is likely to be a hash record.\n      // However we don't yell at `#[` since users may intend to use \"computed private fields\",\n      // which is not allowed in the spec. Throwing expecting recordAndTuple is\n      // misleading\n      this.expectPlugin(\"recordAndTuple\");\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        throw this.raise(\n          this.state.pos,\n          next === charCodes.leftCurlyBrace\n            ? Errors.RecordExpressionHashIncorrectStartSyntaxType\n            : Errors.TupleExpressionHashIncorrectStartSyntaxType,\n        );\n      }\n\n      if (next === charCodes.leftCurlyBrace) {\n        // #{\n        this.finishToken(tt.braceHashL);\n      } else {\n        // #[\n        this.finishToken(tt.bracketHashL);\n      }\n      this.state.pos += 2;\n    } else {\n      this.finishOp(tt.hash, 1);\n    }\n  }\n\n  readToken_dot(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (\n      next === charCodes.dot &&\n      this.input.charCodeAt(this.state.pos + 2) === charCodes.dot\n    ) {\n      this.state.pos += 3;\n      this.finishToken(tt.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.dot);\n    }\n  }\n\n  readToken_slash(): void {\n    // '/'\n    if (this.state.exprAllowed && !this.state.inType) {\n      ++this.state.pos;\n      this.readRegexp();\n      return;\n    }\n\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n    } else {\n      this.finishOp(tt.slash, 1);\n    }\n  }\n\n  readToken_interpreter(): boolean {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== charCodes.exclamationMark) return false;\n\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n\n    this.finishToken(tt.interpreterDirective, value);\n\n    return true;\n  }\n\n  readToken_mult_modulo(code: number): void {\n    // '%*'\n    let type = code === charCodes.asterisk ? tt.star : tt.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n    const exprAllowed = this.state.exprAllowed;\n\n    // Exponentiation operator **\n    if (code === charCodes.asterisk && next === charCodes.asterisk) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = tt.exponent;\n    }\n\n    if (next === charCodes.equalsTo && !exprAllowed) {\n      width++;\n      type = tt.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code: number): void {\n    // '||' '&&' '||=' '&&='\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, 3);\n      } else {\n        this.finishOp(\n          code === charCodes.verticalBar ? tt.logicalOR : tt.logicalAND,\n          2,\n        );\n      }\n      return;\n    }\n\n    if (code === charCodes.verticalBar) {\n      // '|>'\n      if (next === charCodes.greaterThan) {\n        this.finishOp(tt.pipeline, 2);\n        return;\n      }\n      // '|}'\n      if (\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(\n            this.state.pos,\n            Errors.RecordExpressionBarIncorrectEndSyntaxType,\n          );\n        }\n\n        this.finishOp(tt.braceBarR, 2);\n        return;\n      }\n\n      // '|]'\n      if (\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightSquareBracket\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(\n            this.state.pos,\n            Errors.TupleExpressionBarIncorrectEndSyntaxType,\n          );\n        }\n\n        this.finishOp(tt.bracketBarR, 2);\n        return;\n      }\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n      return;\n    }\n\n    this.finishOp(\n      code === charCodes.verticalBar ? tt.bitwiseOR : tt.bitwiseAND,\n      1,\n    );\n  }\n\n  readToken_caret(): void {\n    // '^'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n    } else {\n      this.finishOp(tt.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_plus_min(code: number): void {\n    // '+-'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (\n        next === charCodes.dash &&\n        !this.inModule &&\n        this.input.charCodeAt(this.state.pos + 2) === charCodes.greaterThan &&\n        (this.state.lastTokEnd === 0 || this.hasPrecedingLineBreak())\n      ) {\n        // A `-->` line comment\n        this.skipLineComment(3);\n        this.skipSpace();\n        this.nextToken();\n        return;\n      }\n      this.finishOp(tt.incDec, 2);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n    } else {\n      this.finishOp(tt.plusMin, 1);\n    }\n  }\n\n  readToken_lt_gt(code: number): void {\n    // '<>'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    let size = 1;\n\n    if (next === code) {\n      size =\n        code === charCodes.greaterThan &&\n        this.input.charCodeAt(this.state.pos + 2) === charCodes.greaterThan\n          ? 3\n          : 2;\n      if (this.input.charCodeAt(this.state.pos + size) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, size + 1);\n        return;\n      }\n      this.finishOp(tt.bitShift, size);\n      return;\n    }\n\n    if (\n      next === charCodes.exclamationMark &&\n      code === charCodes.lessThan &&\n      !this.inModule &&\n      this.input.charCodeAt(this.state.pos + 2) === charCodes.dash &&\n      this.input.charCodeAt(this.state.pos + 3) === charCodes.dash\n    ) {\n      // `<!--`, an XML-style comment that should be interpreted as a line comment\n      this.skipLineComment(4);\n      this.skipSpace();\n      this.nextToken();\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      // <= | >=\n      size = 2;\n    }\n\n    this.finishOp(tt.relational, size);\n  }\n\n  readToken_eq_excl(code: number): void {\n    // '=!'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(\n        tt.equality,\n        this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo\n          ? 3\n          : 2,\n      );\n      return;\n    }\n    if (code === charCodes.equalsTo && next === charCodes.greaterThan) {\n      // '=>'\n      this.state.pos += 2;\n      this.finishToken(tt.arrow);\n      return;\n    }\n    this.finishOp(code === charCodes.equalsTo ? tt.eq : tt.bang, 1);\n  }\n\n  readToken_question(): void {\n    // '?'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n    if (next === charCodes.questionMark) {\n      if (next2 === charCodes.equalsTo) {\n        // '??='\n        this.finishOp(tt.assign, 3);\n      } else {\n        // '??'\n        this.finishOp(tt.nullishCoalescing, 2);\n      }\n    } else if (\n      next === charCodes.dot &&\n      !(next2 >= charCodes.digit0 && next2 <= charCodes.digit9)\n    ) {\n      // '.' not followed by a number\n      this.state.pos += 2;\n      this.finishToken(tt.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.question);\n    }\n  }\n\n  getTokenFromCode(code: number): void {\n    switch (code) {\n      // The interpretation of a dot depends on whether it is followed\n      // by a digit or another two dots.\n\n      case charCodes.dot:\n        this.readToken_dot();\n        return;\n\n      // Punctuation tokens.\n      case charCodes.leftParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenL);\n        return;\n      case charCodes.rightParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenR);\n        return;\n      case charCodes.semicolon:\n        ++this.state.pos;\n        this.finishToken(tt.semi);\n        return;\n      case charCodes.comma:\n        ++this.state.pos;\n        this.finishToken(tt.comma);\n        return;\n      case charCodes.leftSquareBracket:\n        if (\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              this.state.pos,\n              Errors.TupleExpressionBarIncorrectStartSyntaxType,\n            );\n          }\n\n          // [|\n          this.finishToken(tt.bracketBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.bracketL);\n        }\n        return;\n      case charCodes.rightSquareBracket:\n        ++this.state.pos;\n        this.finishToken(tt.bracketR);\n        return;\n      case charCodes.leftCurlyBrace:\n        if (\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              this.state.pos,\n              Errors.RecordExpressionBarIncorrectStartSyntaxType,\n            );\n          }\n\n          // {|\n          this.finishToken(tt.braceBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.braceL);\n        }\n        return;\n      case charCodes.rightCurlyBrace:\n        ++this.state.pos;\n        this.finishToken(tt.braceR);\n        return;\n\n      case charCodes.colon:\n        if (\n          this.hasPlugin(\"functionBind\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.colon\n        ) {\n          this.finishOp(tt.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.colon);\n        }\n        return;\n\n      case charCodes.questionMark:\n        this.readToken_question();\n        return;\n\n      case charCodes.graveAccent:\n        ++this.state.pos;\n        this.finishToken(tt.backQuote);\n        return;\n\n      case charCodes.digit0: {\n        const next = this.input.charCodeAt(this.state.pos + 1);\n        // '0x', '0X' - hex number\n        if (next === charCodes.lowercaseX || next === charCodes.uppercaseX) {\n          this.readRadixNumber(16);\n          return;\n        }\n        // '0o', '0O' - octal number\n        if (next === charCodes.lowercaseO || next === charCodes.uppercaseO) {\n          this.readRadixNumber(8);\n          return;\n        }\n        // '0b', '0B' - binary number\n        if (next === charCodes.lowercaseB || next === charCodes.uppercaseB) {\n          this.readRadixNumber(2);\n          return;\n        }\n      }\n      // Anything else beginning with a digit is an integer, octal\n      // number, or float. (fall through)\n      case charCodes.digit1:\n      case charCodes.digit2:\n      case charCodes.digit3:\n      case charCodes.digit4:\n      case charCodes.digit5:\n      case charCodes.digit6:\n      case charCodes.digit7:\n      case charCodes.digit8:\n      case charCodes.digit9:\n        this.readNumber(false);\n        return;\n\n      // Quotes produce strings.\n      case charCodes.quotationMark:\n      case charCodes.apostrophe:\n        this.readString(code);\n        return;\n\n      // Operators are parsed inline in tiny state machines. '=' (charCodes.equalsTo) is\n      // often referred to. `finishOp` simply skips the amount of\n      // characters it is given as second argument, and returns a token\n      // of the type given by its first argument.\n\n      case charCodes.slash:\n        this.readToken_slash();\n        return;\n\n      case charCodes.percentSign:\n      case charCodes.asterisk:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case charCodes.verticalBar:\n      case charCodes.ampersand:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case charCodes.caret:\n        this.readToken_caret();\n        return;\n\n      case charCodes.plusSign:\n      case charCodes.dash:\n        this.readToken_plus_min(code);\n        return;\n\n      case charCodes.lessThan:\n      case charCodes.greaterThan:\n        this.readToken_lt_gt(code);\n        return;\n\n      case charCodes.equalsTo:\n      case charCodes.exclamationMark:\n        this.readToken_eq_excl(code);\n        return;\n\n      case charCodes.tilde:\n        this.finishOp(tt.tilde, 1);\n        return;\n\n      case charCodes.atSign:\n        ++this.state.pos;\n        this.finishToken(tt.at);\n        return;\n\n      case charCodes.numberSign:\n        this.readToken_numberSign();\n        return;\n\n      case charCodes.backslash:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord();\n          return;\n        }\n    }\n\n    throw this.raise(\n      this.state.pos,\n      Errors.InvalidOrUnexpectedToken,\n      String.fromCodePoint(code),\n    );\n  }\n\n  finishOp(type: TokenType, size: number): void {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp(): void {\n    const start = this.state.pos;\n    let escaped, inClass;\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(start, Errors.UnterminatedRegExp);\n      }\n      const ch = this.input.charAt(this.state.pos);\n      if (lineBreak.test(ch)) {\n        throw this.raise(start, Errors.UnterminatedRegExp);\n      }\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === \"[\") {\n          inClass = true;\n        } else if (ch === \"]\" && inClass) {\n          inClass = false;\n        } else if (ch === \"/\" && !inClass) {\n          break;\n        }\n        escaped = ch === \"\\\\\";\n      }\n      ++this.state.pos;\n    }\n    const content = this.input.slice(start, this.state.pos);\n    ++this.state.pos;\n\n    let mods = \"\";\n\n    while (this.state.pos < this.length) {\n      const char = this.input[this.state.pos];\n      const charCode = this.input.codePointAt(this.state.pos);\n\n      if (VALID_REGEX_FLAGS.has(char)) {\n        if (mods.indexOf(char) > -1) {\n          this.raise(this.state.pos + 1, Errors.DuplicateRegExpFlags);\n        }\n      } else if (\n        isIdentifierChar(charCode) ||\n        charCode === charCodes.backslash\n      ) {\n        this.raise(this.state.pos + 1, Errors.MalformedRegExpFlags);\n      } else {\n        break;\n      }\n\n      ++this.state.pos;\n      mods += char;\n    }\n\n    this.finishToken(tt.regexp, {\n      pattern: content,\n      flags: mods,\n    });\n  }\n\n  // Read an integer in the given radix. Return null if zero digits\n  // were read, the integer value otherwise. When `len` is given, this\n  // will return `null` unless the integer has exactly `len` digits.\n  // When `forceLen` is `true`, it means that we already know that in case\n  // of a malformed number we have to skip `len` characters anyway, instead\n  // of bailing out early. For example, in \"\\u{123Z}\" we want to read up to }\n  // anyway, while in \"\\u00Z\" we will stop at Z instead of consuming four\n  // characters (and thus the closing quote).\n\n  readInt(\n    radix: number,\n    len?: number,\n    forceLen?: boolean,\n    allowNumSeparator: boolean = true,\n  ): number | null {\n    const start = this.state.pos;\n    const forbiddenSiblings =\n      radix === 16\n        ? forbiddenNumericSeparatorSiblings.hex\n        : forbiddenNumericSeparatorSiblings.decBinOct;\n    const allowedSiblings =\n      radix === 16\n        ? allowedNumericSeparatorSiblings.hex\n        : radix === 10\n        ? allowedNumericSeparatorSiblings.dec\n        : radix === 8\n        ? allowedNumericSeparatorSiblings.oct\n        : allowedNumericSeparatorSiblings.bin;\n\n    let invalid = false;\n    let total = 0;\n\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      const code = this.input.charCodeAt(this.state.pos);\n      let val;\n\n      if (code === charCodes.underscore) {\n        const prev = this.input.charCodeAt(this.state.pos - 1);\n        const next = this.input.charCodeAt(this.state.pos + 1);\n        if (allowedSiblings.indexOf(next) === -1) {\n          this.raise(this.state.pos, Errors.UnexpectedNumericSeparator);\n        } else if (\n          forbiddenSiblings.indexOf(prev) > -1 ||\n          forbiddenSiblings.indexOf(next) > -1 ||\n          Number.isNaN(next)\n        ) {\n          this.raise(this.state.pos, Errors.UnexpectedNumericSeparator);\n        }\n\n        if (!allowNumSeparator) {\n          this.raise(this.state.pos, Errors.NumericSeparatorInEscapeSequence);\n        }\n\n        // Ignore this _ character\n        ++this.state.pos;\n        continue;\n      }\n\n      if (code >= charCodes.lowercaseA) {\n        val = code - charCodes.lowercaseA + charCodes.lineFeed;\n      } else if (code >= charCodes.uppercaseA) {\n        val = code - charCodes.uppercaseA + charCodes.lineFeed;\n      } else if (charCodes.isDigit(code)) {\n        val = code - charCodes.digit0; // 0-9\n      } else {\n        val = Infinity;\n      }\n      if (val >= radix) {\n        // If we are in \"errorRecovery\" mode and we found a digit which is too big,\n        // don't break the loop.\n\n        if (this.options.errorRecovery && val <= 9) {\n          val = 0;\n          this.raise(this.state.start + i + 2, Errors.InvalidDigit, radix);\n        } else if (forceLen) {\n          val = 0;\n          invalid = true;\n        } else {\n          break;\n        }\n      }\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n    if (\n      this.state.pos === start ||\n      (len != null && this.state.pos - start !== len) ||\n      invalid\n    ) {\n      return null;\n    }\n\n    return total;\n  }\n\n  readRadixNumber(radix: number): void {\n    const start = this.state.pos;\n    let isBigInt = false;\n\n    this.state.pos += 2; // 0x\n    const val = this.readInt(radix);\n    if (val == null) {\n      this.raise(this.state.start + 2, Errors.InvalidDigit, radix);\n    }\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === charCodes.lowercaseN) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === charCodes.lowercaseM) {\n      throw this.raise(start, Errors.InvalidDecimal);\n    }\n\n    if (isIdentifierStart(this.input.codePointAt(this.state.pos))) {\n      throw this.raise(this.state.pos, Errors.NumberIdentifier);\n    }\n\n    if (isBigInt) {\n      const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    this.finishToken(tt.num, val);\n  }\n\n  // Read an integer, octal integer, or floating-point number.\n\n  readNumber(startsWithDot: boolean): void {\n    const start = this.state.pos;\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(start, Errors.InvalidNumber);\n    }\n    const hasLeadingZero =\n      this.state.pos - start >= 2 &&\n      this.input.charCodeAt(start) === charCodes.digit0;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      if (this.state.strict) {\n        this.raise(start, Errors.StrictOctalLiteral);\n      } else {\n        // disallow numeric separators in non octal decimals and legacy octal likes\n        const underscorePos = integer.indexOf(\"_\");\n        if (underscorePos > 0) {\n          this.raise(underscorePos + start, Errors.ZeroDigitNumericSeparator);\n        }\n      }\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n    if (next === charCodes.dot && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (\n      (next === charCodes.uppercaseE || next === charCodes.lowercaseE) &&\n      !isOctal\n    ) {\n      next = this.input.charCodeAt(++this.state.pos);\n      if (next === charCodes.plusSign || next === charCodes.dash) {\n        ++this.state.pos;\n      }\n      if (this.readInt(10) === null) {\n        this.raise(start, Errors.InvalidOrMissingExponent);\n      }\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === charCodes.lowercaseN) {\n      // disallow floats, legacy octal syntax and non octal decimals\n      // new style octal (\"0o\") is handled in this.readRadixNumber\n      if (isFloat || hasLeadingZero) {\n        this.raise(start, Errors.InvalidBigIntLiteral);\n      }\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === charCodes.lowercaseM) {\n      this.expectPlugin(\"decimal\", this.state.pos);\n      if (hasExponent || hasLeadingZero) {\n        this.raise(start, Errors.InvalidDecimal);\n      }\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.input.codePointAt(this.state.pos))) {\n      throw this.raise(this.state.pos, Errors.NumberIdentifier);\n    }\n\n    // remove \"_\" for numeric literal separator, and trailing `m` or `n`\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(tt.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(tt.num, val);\n  }\n\n  // Read a string value, interpreting backslash-escapes.\n\n  readCodePoint(throwOnInvalid: boolean): number | null {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let code;\n\n    if (ch === charCodes.leftCurlyBrace) {\n      const codePos = ++this.state.pos;\n      code = this.readHexChar(\n        this.input.indexOf(\"}\", this.state.pos) - this.state.pos,\n        true,\n        throwOnInvalid,\n      );\n      ++this.state.pos;\n      if (code !== null && code > 0x10ffff) {\n        if (throwOnInvalid) {\n          this.raise(codePos, Errors.InvalidCodePoint);\n        } else {\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, false, throwOnInvalid);\n    }\n    return code;\n  }\n\n  readString(quote: number): void {\n    let out = \"\",\n      chunkStart = ++this.state.pos;\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, Errors.UnterminatedString);\n      }\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n      if (ch === charCodes.backslash) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        // $FlowFixMe\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else if (\n        ch === charCodes.lineSeparator ||\n        ch === charCodes.paragraphSeparator\n      ) {\n        ++this.state.pos;\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        throw this.raise(this.state.start, Errors.UnterminatedString);\n      } else {\n        ++this.state.pos;\n      }\n    }\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(tt.string, out);\n  }\n\n  // Reads template string tokens.\n\n  readTmplToken(): void {\n    let out = \"\",\n      chunkStart = this.state.pos,\n      containsInvalid = false;\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, Errors.UnterminatedTemplate);\n      }\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (\n        ch === charCodes.graveAccent ||\n        (ch === charCodes.dollarSign &&\n          this.input.charCodeAt(this.state.pos + 1) ===\n            charCodes.leftCurlyBrace)\n      ) {\n        if (this.state.pos === this.state.start && this.match(tt.template)) {\n          if (ch === charCodes.dollarSign) {\n            this.state.pos += 2;\n            this.finishToken(tt.dollarBraceL);\n            return;\n          } else {\n            ++this.state.pos;\n            this.finishToken(tt.backQuote);\n            return;\n          }\n        }\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(tt.template, containsInvalid ? null : out);\n        return;\n      }\n      if (ch === charCodes.backslash) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        const escaped = this.readEscapedChar(true);\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n        switch (ch) {\n          case charCodes.carriageReturn:\n            if (this.input.charCodeAt(this.state.pos) === charCodes.lineFeed) {\n              ++this.state.pos;\n            }\n          // fall through\n          case charCodes.lineFeed:\n            out += \"\\n\";\n            break;\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  }\n\n  // Used to read escaped characters\n\n  readEscapedChar(inTemplate: boolean): string | null {\n    const throwOnInvalid = !inTemplate;\n    const ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n    switch (ch) {\n      case charCodes.lowercaseN:\n        return \"\\n\";\n      case charCodes.lowercaseR:\n        return \"\\r\";\n      case charCodes.lowercaseX: {\n        const code = this.readHexChar(2, false, throwOnInvalid);\n        return code === null ? null : String.fromCharCode(code);\n      }\n      case charCodes.lowercaseU: {\n        const code = this.readCodePoint(throwOnInvalid);\n        return code === null ? null : String.fromCodePoint(code);\n      }\n      case charCodes.lowercaseT:\n        return \"\\t\";\n      case charCodes.lowercaseB:\n        return \"\\b\";\n      case charCodes.lowercaseV:\n        return \"\\u000b\";\n      case charCodes.lowercaseF:\n        return \"\\f\";\n      case charCodes.carriageReturn:\n        if (this.input.charCodeAt(this.state.pos) === charCodes.lineFeed) {\n          ++this.state.pos;\n        }\n      // fall through\n      case charCodes.lineFeed:\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n      // fall through\n      case charCodes.lineSeparator:\n      case charCodes.paragraphSeparator:\n        return \"\";\n      case charCodes.digit8:\n      case charCodes.digit9:\n        if (inTemplate) {\n          return null;\n        } else if (this.state.strict) {\n          this.raise(this.state.pos - 1, Errors.StrictNumericEscape);\n        }\n      // fall through\n      default:\n        if (ch >= charCodes.digit0 && ch <= charCodes.digit7) {\n          const codePos = this.state.pos - 1;\n          const match = this.input\n            .substr(this.state.pos - 1, 3)\n            .match(/^[0-7]+/);\n\n          // This is never null, because of the if condition above.\n          /*:: invariant(match !== null) */\n          let octalStr = match[0];\n\n          let octal = parseInt(octalStr, 8);\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n          this.state.pos += octalStr.length - 1;\n          const next = this.input.charCodeAt(this.state.pos);\n          if (\n            octalStr !== \"0\" ||\n            next === charCodes.digit8 ||\n            next === charCodes.digit9\n          ) {\n            if (inTemplate) {\n              return null;\n            } else if (this.state.strict) {\n              this.raise(codePos, Errors.StrictNumericEscape);\n            } else {\n              // This property is used to throw an error for\n              // an octal literal in a directive that occurs prior\n              // to a \"use strict\" directive.\n              this.state.octalPositions.push(codePos);\n            }\n          }\n\n          return String.fromCharCode(octal);\n        }\n\n        return String.fromCharCode(ch);\n    }\n  }\n\n  // Used to read character escape sequences ('\\x', '\\u').\n\n  readHexChar(\n    len: number,\n    forceLen: boolean,\n    throwOnInvalid: boolean,\n  ): number | null {\n    const codePos = this.state.pos;\n    const n = this.readInt(16, len, forceLen, false);\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(codePos, Errors.InvalidEscapeSequence);\n      } else {\n        this.state.pos = codePos - 1;\n      }\n    }\n    return n;\n  }\n\n  // Read an identifier, and return it as a string. Sets `this.state.containsEsc`\n  // to whether the word contained a '\\u' escape.\n  //\n  // Incrementally adds only escaped chars, adding other chunks as-is\n  // as a micro-optimization.\n\n  readWord1(): string {\n    let word = \"\";\n    this.state.containsEsc = false;\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n\n    while (this.state.pos < this.length) {\n      const ch = this.input.codePointAt(this.state.pos);\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (this.state.isIterator && ch === charCodes.atSign) {\n        ++this.state.pos;\n      } else if (ch === charCodes.backslash) {\n        this.state.containsEsc = true;\n\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.pos;\n        const identifierCheck =\n          this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== charCodes.lowercaseU) {\n          this.raise(this.state.pos, Errors.MissingUnicodeEscape);\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(escStart, Errors.EscapedCharNotAnIdentifier);\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  isIterator(word: string): boolean {\n    return word === \"@@iterator\" || word === \"@@asyncIterator\";\n  }\n\n  // Read an identifier or keyword token. Will check for reserved\n  // words when necessary.\n\n  readWord(): void {\n    const word = this.readWord1();\n    const type = keywordTypes.get(word) || tt.name;\n\n    // Allow @@iterator and @@asyncIterator as a identifier only inside type\n    if (\n      this.state.isIterator &&\n      (!this.isIterator(word) || !this.state.inType)\n    ) {\n      this.raise(this.state.pos, Errors.InvalidIdentifier, word);\n    }\n\n    this.finishToken(type, word);\n  }\n\n  checkKeywordEscapes(): void {\n    const kw = this.state.type.keyword;\n    if (kw && this.state.containsEsc) {\n      this.raise(this.state.start, Errors.InvalidEscapedReservedWord, kw);\n    }\n  }\n\n  braceIsBlock(prevType: TokenType): boolean {\n    const parent = this.curContext();\n    if (parent === ct.functionExpression || parent === ct.functionStatement) {\n      return true;\n    }\n    if (\n      prevType === tt.colon &&\n      (parent === ct.braceStatement || parent === ct.braceExpression)\n    ) {\n      return !parent.isExpr;\n    }\n\n    // The check for `tt.name && exprAllowed` detects whether we are\n    // after a `yield` or `of` construct. See the `updateContext` for\n    // `tt.name`.\n    if (\n      prevType === tt._return ||\n      (prevType === tt.name && this.state.exprAllowed)\n    ) {\n      return this.hasPrecedingLineBreak();\n    }\n\n    if (\n      prevType === tt._else ||\n      prevType === tt.semi ||\n      prevType === tt.eof ||\n      prevType === tt.parenR ||\n      prevType === tt.arrow\n    ) {\n      return true;\n    }\n\n    if (prevType === tt.braceL) {\n      return parent === ct.braceStatement;\n    }\n\n    if (\n      prevType === tt._var ||\n      prevType === tt._const ||\n      prevType === tt.name\n    ) {\n      return false;\n    }\n\n    if (prevType === tt.relational) {\n      // `class C<T> { ... }`\n      return true;\n    }\n\n    return !this.state.exprAllowed;\n  }\n\n  updateContext(prevType: TokenType): void {\n    const type = this.state.type;\n    let update;\n\n    if (type.keyword && (prevType === tt.dot || prevType === tt.questionDot)) {\n      this.state.exprAllowed = false;\n    } else if ((update = type.updateContext)) {\n      update.call(this, prevType);\n    } else {\n      this.state.exprAllowed = type.beforeExpr;\n    }\n  }\n}\n","// @flow\n\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport Tokenizer from \"../tokenizer\";\nimport State from \"../tokenizer/state\";\nimport type { Node } from \"../types\";\nimport { lineBreak } from \"../util/whitespace\";\nimport { isIdentifierChar } from \"../util/identifier\";\nimport { Errors } from \"./error\";\n\ntype TryParse<Node, Error, Thrown, Aborted, FailState> = {\n  node: Node,\n  error: Error,\n  thrown: Thrown,\n  aborted: Aborted,\n  failState: FailState,\n};\n\n// ## Parser utilities\n\nexport default class UtilParser extends Tokenizer {\n  // TODO\n\n  addExtra(node: Node, key: string, val: any): void {\n    if (!node) return;\n\n    const extra = (node.extra = node.extra || {});\n    extra[key] = val;\n  }\n\n  // TODO\n\n  isRelational(op: \"<\" | \">\"): boolean {\n    return this.match(tt.relational) && this.state.value === op;\n  }\n\n  // TODO\n\n  expectRelational(op: \"<\" | \">\"): void {\n    if (this.isRelational(op)) {\n      this.next();\n    } else {\n      this.unexpected(null, tt.relational);\n    }\n  }\n\n  // Tests whether parsed token is a contextual keyword.\n\n  isContextual(name: string): boolean {\n    return (\n      this.match(tt.name) &&\n      this.state.value === name &&\n      !this.state.containsEsc\n    );\n  }\n\n  isUnparsedContextual(nameStart: number, name: string): boolean {\n    const nameEnd = nameStart + name.length;\n    return (\n      this.input.slice(nameStart, nameEnd) === name &&\n      (nameEnd === this.input.length ||\n        !isIdentifierChar(this.input.charCodeAt(nameEnd)))\n    );\n  }\n\n  isLookaheadContextual(name: string): boolean {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  // Consumes contextual keyword if possible.\n\n  eatContextual(name: string): boolean {\n    return this.isContextual(name) && this.eat(tt.name);\n  }\n\n  // Asserts that following token is given contextual keyword.\n\n  expectContextual(name: string, message?: string): void {\n    if (!this.eatContextual(name)) this.unexpected(null, message);\n  }\n\n  // Test whether a semicolon can be inserted at the current position.\n\n  canInsertSemicolon(): boolean {\n    return (\n      this.match(tt.eof) ||\n      this.match(tt.braceR) ||\n      this.hasPrecedingLineBreak()\n    );\n  }\n\n  hasPrecedingLineBreak(): boolean {\n    return lineBreak.test(\n      this.input.slice(this.state.lastTokEnd, this.state.start),\n    );\n  }\n\n  // TODO\n\n  isLineTerminator(): boolean {\n    return this.eat(tt.semi) || this.canInsertSemicolon();\n  }\n\n  // Consume a semicolon, or, failing that, see if we are allowed to\n  // pretend that there is a semicolon at this position.\n\n  semicolon(): void {\n    if (!this.isLineTerminator()) this.unexpected(null, tt.semi);\n  }\n\n  // Expect a token of a given type. If found, consume it, otherwise,\n  // raise an unexpected token error at given pos.\n\n  expect(type: TokenType, pos?: ?number): void {\n    this.eat(type) || this.unexpected(pos, type);\n  }\n\n  // Throws if the current token and the prev one are separated by a space.\n  assertNoSpace(message: string = \"Unexpected space.\"): void {\n    if (this.state.start > this.state.lastTokEnd) {\n      /* eslint-disable @babel/development-internal/dry-error-messages */\n      this.raise(this.state.lastTokEnd, message);\n      /* eslint-enable @babel/development-internal/dry-error-messages */\n    }\n  }\n\n  // Raise an unexpected token error. Can take the expected token type\n  // instead of a message string.\n\n  unexpected(\n    pos: ?number,\n    messageOrType: string | TokenType = \"Unexpected token\",\n  ): empty {\n    if (typeof messageOrType !== \"string\") {\n      messageOrType = `Unexpected token, expected \"${messageOrType.label}\"`;\n    }\n    /* eslint-disable @babel/development-internal/dry-error-messages */\n    throw this.raise(pos != null ? pos : this.state.start, messageOrType);\n    /* eslint-enable @babel/development-internal/dry-error-messages */\n  }\n\n  expectPlugin(name: string, pos?: ?number): true {\n    if (!this.hasPlugin(name)) {\n      throw this.raiseWithData(\n        pos != null ? pos : this.state.start,\n        { missingPlugin: [name] },\n        `This experimental syntax requires enabling the parser plugin: '${name}'`,\n      );\n    }\n\n    return true;\n  }\n\n  expectOnePlugin(names: Array<string>, pos?: ?number): void {\n    if (!names.some(n => this.hasPlugin(n))) {\n      throw this.raiseWithData(\n        pos != null ? pos : this.state.start,\n        { missingPlugin: names },\n        `This experimental syntax requires enabling one of the following parser plugin(s): '${names.join(\n          \", \",\n        )}'`,\n      );\n    }\n  }\n\n  checkYieldAwaitInDefaultParams() {\n    if (\n      this.state.yieldPos !== -1 &&\n      (this.state.awaitPos === -1 || this.state.yieldPos < this.state.awaitPos)\n    ) {\n      this.raise(this.state.yieldPos, Errors.YieldBindingIdentifier);\n    }\n    if (this.state.awaitPos !== -1) {\n      this.raise(this.state.awaitPos, Errors.AwaitBindingIdentifier);\n    }\n  }\n\n  // tryParse will clone parser state.\n  // It is expensive and should be used with cautions\n  tryParse<T: Node | $ReadOnlyArray<Node>>(\n    fn: (abort: (node?: T) => empty) => T,\n    oldState: State = this.state.clone(),\n  ):\n    | TryParse<T, null, false, false, null>\n    | TryParse<T | null, SyntaxError, boolean, false, State>\n    | TryParse<T | null, null, false, true, State> {\n    const abortSignal: { node: T | null } = { node: null };\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        return {\n          node,\n          error: (failState.errors[oldState.errors.length]: SyntaxError),\n          thrown: false,\n          aborted: false,\n          failState,\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null,\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n      if (error instanceof SyntaxError) {\n        return { node: null, error, thrown: true, aborted: false, failState };\n      }\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState,\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(\n    refExpressionErrors: ?ExpressionErrors,\n    andThrow: boolean,\n  ) {\n    if (!refExpressionErrors) return false;\n    const { shorthandAssign, doubleProto } = refExpressionErrors;\n    if (!andThrow) return shorthandAssign >= 0 || doubleProto >= 0;\n    if (shorthandAssign >= 0) {\n      this.unexpected(shorthandAssign);\n    }\n    if (doubleProto >= 0) {\n      this.raise(doubleProto, Errors.DuplicateProto);\n    }\n  }\n\n  /**\n   * Test if current token is a literal property name\n   * https://tc39.es/ecma262/#prod-LiteralPropertyName\n   * LiteralPropertyName:\n   *   IdentifierName\n   *   StringLiteral\n   *   NumericLiteral\n   *   BigIntLiteral\n   */\n  isLiteralPropertyName(): boolean {\n    return (\n      this.match(tt.name) ||\n      !!this.state.type.keyword ||\n      this.match(tt.string) ||\n      this.match(tt.num) ||\n      this.match(tt.bigint) ||\n      this.match(tt.decimal)\n    );\n  }\n}\n\n/**\n * The ExpressionErrors is a context struct used to track\n * - **shorthandAssign**: track initializer `=` position when parsing ambiguous\n *   patterns. When we are sure the parsed pattern is a RHS, which means it is\n *   not a pattern, we will throw on this position on invalid assign syntax,\n *   otherwise it will be reset to -1\n * - **doubleProto**: track the duplicate `__proto__` key position when parsing\n *   ambiguous object patterns. When we are sure the parsed pattern is a RHS,\n *   which means it is an object literal, we will throw on this position for\n *   __proto__ redefinition, otherwise it will be reset to -1\n */\nexport class ExpressionErrors {\n  shorthandAssign = -1;\n  doubleProto = -1;\n}\n","// @flow\n\nimport type Parser from \"./index\";\nimport UtilParser from \"./util\";\nimport { SourceLocation, type Position } from \"../util/location\";\nimport type { Comment, Node as NodeType, NodeBase } from \"../types\";\n\n// Start an AST node, attaching a start offset.\n\nclass Node implements NodeBase {\n  constructor(parser: Parser, pos: number, loc: Position) {\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser?.options.ranges) this.range = [pos, 0];\n    if (parser?.filename) this.loc.filename = parser.filename;\n  }\n\n  type: string;\n  start: number;\n  end: number;\n  loc: SourceLocation;\n  range: [number, number];\n  leadingComments: Array<Comment>;\n  trailingComments: Array<Comment>;\n  innerComments: Array<Comment>;\n  extra: { [key: string]: any };\n\n  __clone(): this {\n    // $FlowIgnore\n    const newNode: any = new Node();\n    const keys = Object.keys(this);\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      // Do not clone comments that are already attached to the node\n      if (\n        key !== \"leadingComments\" &&\n        key !== \"trailingComments\" &&\n        key !== \"innerComments\"\n      ) {\n        // $FlowIgnore\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  }\n}\n\nexport class NodeUtils extends UtilParser {\n  startNode<T: NodeType>(): T {\n    // $FlowIgnore\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt<T: NodeType>(pos: number, loc: Position): T {\n    // $FlowIgnore\n    return new Node(this, pos, loc);\n  }\n\n  /** Start a new node with a previous node's location. */\n  startNodeAtNode<T: NodeType>(type: NodeType): T {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  // Finish an AST node, adding `type` and `end` properties.\n\n  finishNode<T: NodeType>(node: T, type: string): T {\n    return this.finishNodeAt(\n      node,\n      type,\n      this.state.lastTokEnd,\n      this.state.lastTokEndLoc,\n    );\n  }\n\n  // Finish node at given position\n\n  finishNodeAt<T: NodeType>(\n    node: T,\n    type: string,\n    pos: number,\n    loc: Position,\n  ): T {\n    if (process.env.NODE_ENV !== \"production\" && node.end > 0) {\n      throw new Error(\n        \"Do not call finishNode*() twice on the same node.\" +\n          \" Instead use resetEndLocation() or change type directly.\",\n      );\n    }\n    node.type = type;\n    node.end = pos;\n    node.loc.end = loc;\n    if (this.options.ranges) node.range[1] = pos;\n    this.processComment(node);\n    return node;\n  }\n\n  resetStartLocation(node: NodeBase, start: number, startLoc: Position): void {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(\n    node: NodeBase,\n    end?: number = this.state.lastTokEnd,\n    endLoc?: Position = this.state.lastTokEndLoc,\n  ): void {\n    node.end = end;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = end;\n  }\n\n  /**\n   * Reset the start location of node to the start location of locationNode\n   */\n  resetStartLocationFromNode(node: NodeBase, locationNode: NodeBase): void {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n}\n","// @flow\n\nimport * as charCodes from \"charcodes\";\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport type {\n  TSParameterProperty,\n  Decorator,\n  Expression,\n  Node,\n  Pattern,\n  RestElement,\n  SpreadElement,\n  /*:: Identifier, */\n  /*:: ObjectExpression, */\n  /*:: ObjectPattern, */\n} from \"../types\";\nimport type { Pos, Position } from \"../util/location\";\nimport {\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n} from \"../util/identifier\";\nimport { NodeUtils } from \"./node\";\nimport { type BindingTypes, BIND_NONE } from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport { Errors } from \"./error\";\n\nconst unwrapParenthesizedExpression = (node: Node) => {\n  return node.type === \"ParenthesizedExpression\"\n    ? unwrapParenthesizedExpression(node.expression)\n    : node;\n};\n\nexport default class LValParser extends NodeUtils {\n  // Forward-declaration: defined in expression.js\n  /*::\n  +parseIdentifier: (liberal?: boolean) => Identifier;\n  +parseMaybeAssignAllowIn: (\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: ?Pos,\n  ) => Expression;\n  +parseObjectLike: <T: ObjectPattern | ObjectExpression>(\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ) => T;\n  */\n  // Forward-declaration: defined in statement.js\n  /*::\n  +parseDecorator: () => Decorator;\n  */\n\n  // Convert existing expression atom to assignable pattern\n  // if possible.\n  // NOTE: There is a corresponding \"isAssignable\" method in flow.js.\n  // When this one is updated, please check if also that one needs to be updated.\n\n  toAssignable(node: Node): Node {\n    let parenthesized = undefined;\n    if (node.type === \"ParenthesizedExpression\" || node.extra?.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n      if (\n        parenthesized.type !== \"Identifier\" &&\n        parenthesized.type !== \"MemberExpression\"\n      ) {\n        this.raise(node.start, Errors.InvalidParenthesizedAssignment);\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n        for (\n          let i = 0, length = node.properties.length, last = length - 1;\n          i < length;\n          i++\n        ) {\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast);\n\n          if (\n            isLast &&\n            prop.type === \"RestElement\" &&\n            node.extra?.trailingComma\n          ) {\n            this.raiseRestNotLast(node.extra.trailingComma);\n          }\n        }\n        break;\n\n      case \"ObjectProperty\":\n        this.toAssignable(node.value);\n        break;\n\n      case \"SpreadElement\": {\n        this.checkToRestConversion(node);\n\n        node.type = \"RestElement\";\n        const arg = node.argument;\n        this.toAssignable(arg);\n        break;\n      }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, node.extra?.trailingComma);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(node.left.end, Errors.MissingEqInAssignment);\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(((parenthesized: any): Expression));\n        break;\n\n      default:\n      // We don't know how to deal with this node. It will\n      // be reported by a later call to checkLVal\n    }\n    return node;\n  }\n\n  toAssignableObjectExpressionProp(prop: Node, isLast: boolean) {\n    if (prop.type === \"ObjectMethod\") {\n      const error =\n        prop.kind === \"get\" || prop.kind === \"set\"\n          ? Errors.PatternHasAccessor\n          : Errors.PatternHasMethod;\n\n      /* eslint-disable @babel/development-internal/dry-error-messages */\n      this.raise(prop.key.start, error);\n      /* eslint-enable @babel/development-internal/dry-error-messages */\n    } else if (prop.type === \"SpreadElement\" && !isLast) {\n      this.raiseRestNotLast(prop.start);\n    } else {\n      this.toAssignable(prop);\n    }\n  }\n\n  // Convert list of expression atoms to binding list.\n\n  toAssignableList(\n    exprList: Expression[],\n    trailingCommaPos?: ?number,\n  ): $ReadOnlyArray<Pattern> {\n    let end = exprList.length;\n    if (end) {\n      const last = exprList[end - 1];\n      if (last?.type === \"RestElement\") {\n        --end;\n      } else if (last?.type === \"SpreadElement\") {\n        last.type = \"RestElement\";\n        const arg = last.argument;\n        this.toAssignable(arg);\n        if (\n          arg.type !== \"Identifier\" &&\n          arg.type !== \"MemberExpression\" &&\n          arg.type !== \"ArrayPattern\" &&\n          arg.type !== \"ObjectPattern\"\n        ) {\n          this.unexpected(arg.start);\n        }\n\n        if (trailingCommaPos) {\n          this.raiseTrailingCommaAfterRest(trailingCommaPos);\n        }\n\n        --end;\n      }\n    }\n    for (let i = 0; i < end; i++) {\n      const elt = exprList[i];\n      if (elt) {\n        this.toAssignable(elt);\n        if (elt.type === \"RestElement\") {\n          this.raiseRestNotLast(elt.start);\n        }\n      }\n    }\n    return exprList;\n  }\n\n  // Convert list of expression atoms to a list of\n\n  toReferencedList(\n    exprList: $ReadOnlyArray<?Expression>,\n    isParenthesizedExpr?: boolean, // eslint-disable-line no-unused-vars\n  ): $ReadOnlyArray<?Expression> {\n    return exprList;\n  }\n\n  toReferencedListDeep(\n    exprList: $ReadOnlyArray<?Expression>,\n    isParenthesizedExpr?: boolean,\n  ): void {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if (expr?.type === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  // Parses spread element.\n\n  parseSpread(\n    refExpressionErrors: ?ExpressionErrors,\n    refNeedsArrowPos?: ?Pos,\n  ): SpreadElement {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(\n      refExpressionErrors,\n      undefined,\n      refNeedsArrowPos,\n    );\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingRestProperty\n  // https://tc39.es/ecma262/#prod-BindingRestElement\n  parseRestBinding(): RestElement {\n    const node = this.startNode();\n    this.next(); // eat `...`\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  // Parses lvalue (assignable) atom.\n  parseBindingAtom(): Pattern {\n    // https://tc39.es/ecma262/#prod-BindingPattern\n    switch (this.state.type) {\n      case tt.bracketL: {\n        const node = this.startNode();\n        this.next();\n        node.elements = this.parseBindingList(\n          tt.bracketR,\n          charCodes.rightSquareBracket,\n          true,\n        );\n        return this.finishNode(node, \"ArrayPattern\");\n      }\n\n      case tt.braceL:\n        return this.parseObjectLike(tt.braceR, true);\n    }\n\n    // https://tc39.es/ecma262/#prod-BindingIdentifier\n    return this.parseIdentifier();\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingElementList\n  parseBindingList(\n    close: TokenType,\n    closeCharCode: $Values<typeof charCodes>,\n    allowEmpty?: boolean,\n    allowModifiers?: boolean,\n  ): $ReadOnlyArray<Pattern | TSParameterProperty> {\n    const elts: Array<Pattern | TSParameterProperty> = [];\n    let first = true;\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n      }\n      if (allowEmpty && this.match(tt.comma)) {\n        // $FlowFixMe This method returns `$ReadOnlyArray<?Pattern>` if `allowEmpty` is set.\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(tt.ellipsis)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        this.checkCommaAfterRest(closeCharCode);\n        this.expect(close);\n        break;\n      } else {\n        const decorators = [];\n        if (this.match(tt.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(this.state.start, Errors.UnsupportedParameterDecorator);\n        }\n        // invariant: hasPlugin(\"decorators-legacy\")\n        while (this.match(tt.at)) {\n          decorators.push(this.parseDecorator());\n        }\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n    return elts;\n  }\n\n  parseAssignableListItem(\n    allowModifiers: ?boolean,\n    decorators: Decorator[],\n  ): Pattern | TSParameterProperty {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n    return elt;\n  }\n\n  // Used by flow/typescript plugin to add type annotations to binding elements\n  parseAssignableListItemTypes(param: Pattern): Pattern {\n    return param;\n  }\n\n  // Parses assignment pattern around given atom if possible.\n  // https://tc39.es/ecma262/#prod-BindingElement\n  parseMaybeDefault(\n    startPos?: ?number,\n    startLoc?: ?Position,\n    left?: ?Pattern,\n  ): Pattern {\n    startLoc = startLoc ?? this.state.startLoc;\n    startPos = startPos ?? this.state.start;\n    // $FlowIgnore\n    left = left ?? this.parseBindingAtom();\n    if (!this.eat(tt.eq)) return left;\n\n    const node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n\n  // Verify that a node is an lval — something that can be assigned\n  // to.\n\n  checkLVal(\n    expr: Expression,\n    bindingType: BindingTypes = BIND_NONE,\n    checkClashes: ?{ [key: string]: boolean },\n    contextDescription: string,\n    disallowLetBinding?: boolean,\n    strictModeChanged?: boolean = false,\n  ): void {\n    switch (expr.type) {\n      case \"Identifier\":\n        if (\n          this.state.strict &&\n          // \"Global\" reserved words have already been checked by parseIdentifier,\n          // unless they have been found in the id or parameters of a strict-mode\n          // function in a sloppy context.\n          (strictModeChanged\n            ? isStrictBindReservedWord(expr.name, this.inModule)\n            : isStrictBindOnlyReservedWord(expr.name))\n        ) {\n          this.raise(\n            expr.start,\n            bindingType === BIND_NONE\n              ? Errors.StrictEvalArguments\n              : Errors.StrictEvalArgumentsBinding,\n            expr.name,\n          );\n        }\n\n        if (checkClashes) {\n          // we need to prefix this with an underscore for the cases where we have a key of\n          // `__proto__`. there's a bug in old V8 where the following wouldn't work:\n          //\n          //   > var obj = Object.create(null);\n          //   undefined\n          //   > obj.__proto__\n          //   null\n          //   > obj.__proto__ = true;\n          //   true\n          //   > obj.__proto__\n          //   null\n          const key = `_${expr.name}`;\n\n          if (checkClashes[key]) {\n            this.raise(expr.start, Errors.ParamDupe);\n          } else {\n            checkClashes[key] = true;\n          }\n        }\n        if (disallowLetBinding && expr.name === \"let\") {\n          this.raise(expr.start, Errors.LetInLexicalBinding);\n        }\n        if (!(bindingType & BIND_NONE)) {\n          this.scope.declareName(expr.name, bindingType, expr.start);\n        }\n        break;\n\n      case \"MemberExpression\":\n        if (bindingType !== BIND_NONE) {\n          this.raise(expr.start, Errors.InvalidPropertyBindingPattern);\n        }\n        break;\n\n      case \"ObjectPattern\":\n        for (let prop of expr.properties) {\n          if (prop.type === \"ObjectProperty\") prop = prop.value;\n          // If we find here an ObjectMethod, it's because this was originally\n          // an ObjectExpression which has then been converted.\n          // toAssignable already reported this error with a nicer message.\n          else if (prop.type === \"ObjectMethod\") continue;\n\n          this.checkLVal(\n            prop,\n            bindingType,\n            checkClashes,\n            \"object destructuring pattern\",\n            disallowLetBinding,\n          );\n        }\n        break;\n\n      case \"ArrayPattern\":\n        for (const elem of expr.elements) {\n          if (elem) {\n            this.checkLVal(\n              elem,\n              bindingType,\n              checkClashes,\n              \"array destructuring pattern\",\n              disallowLetBinding,\n            );\n          }\n        }\n        break;\n\n      case \"AssignmentPattern\":\n        this.checkLVal(\n          expr.left,\n          bindingType,\n          checkClashes,\n          \"assignment pattern\",\n        );\n        break;\n\n      case \"RestElement\":\n        this.checkLVal(\n          expr.argument,\n          bindingType,\n          checkClashes,\n          \"rest element\",\n        );\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.checkLVal(\n          expr.expression,\n          bindingType,\n          checkClashes,\n          \"parenthesized expression\",\n        );\n        break;\n\n      default: {\n        this.raise(\n          expr.start,\n          bindingType === BIND_NONE\n            ? Errors.InvalidLhs\n            : Errors.InvalidLhsBinding,\n          contextDescription,\n        );\n      }\n    }\n  }\n\n  checkToRestConversion(node: SpreadElement): void {\n    if (\n      node.argument.type !== \"Identifier\" &&\n      node.argument.type !== \"MemberExpression\"\n    ) {\n      this.raise(node.argument.start, Errors.InvalidRestAssignmentPattern);\n    }\n  }\n\n  checkCommaAfterRest(close: $Values<typeof charCodes>): void {\n    if (this.match(tt.comma)) {\n      if (this.lookaheadCharCode() === close) {\n        this.raiseTrailingCommaAfterRest(this.state.start);\n      } else {\n        this.raiseRestNotLast(this.state.start);\n      }\n    }\n  }\n\n  raiseRestNotLast(pos: number) {\n    throw this.raise(pos, Errors.ElementAfterRest);\n  }\n\n  raiseTrailingCommaAfterRest(pos: number) {\n    this.raise(pos, Errors.RestTrailingComma);\n  }\n}\n","// @flow\n\n// A recursive descent parser operates by defining functions for all\n// syntactic elements, and recursively calling those, each function\n// advancing the input stream and returning an AST node. Precedence\n// of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n// instead of `(!x)[1]` is handled by the fact that the parser\n// function that parses unary prefix operators is called first, and\n// in turn calls the function that parses `[]` subscripts — that\n// way, it'll receive the node for `x[1]` already parsed, and wraps\n// *that* in the unary operator node.\n//\n// Acorn uses an [operator precedence parser][opp] to handle binary\n// operator precedence, because it is much more compact than using\n// the technique outlined above, which uses different, nesting\n// functions to specify precedence, for all of the ten binary\n// precedence levels that JavaScript defines.\n//\n// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport { types as ct } from \"../tokenizer/context\";\nimport * as N from \"../types\";\nimport LValParser from \"./lval\";\nimport {\n  isKeyword,\n  isReservedWord,\n  isStrictReservedWord,\n  isStrictBindReservedWord,\n  isIdentifierStart,\n} from \"../util/identifier\";\nimport type { Pos, Position } from \"../util/location\";\nimport * as charCodes from \"charcodes\";\nimport {\n  BIND_OUTSIDE,\n  BIND_VAR,\n  SCOPE_ARROW,\n  SCOPE_CLASS,\n  SCOPE_DIRECT_SUPER,\n  SCOPE_FUNCTION,\n  SCOPE_SUPER,\n  SCOPE_PROGRAM,\n} from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport {\n  PARAM_AWAIT,\n  PARAM_IN,\n  PARAM_RETURN,\n  PARAM,\n  functionFlags,\n} from \"../util/production-parameter\";\nimport { Errors } from \"./error\";\n\nexport default class ExpressionParser extends LValParser {\n  // Forward-declaration: defined in statement.js\n  /*::\n  +parseBlock: (\n    allowDirectives?: boolean,\n    createNewLexicalScope?: boolean,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ) => N.BlockStatement;\n  +parseClass: (\n    node: N.Class,\n    isStatement: boolean,\n    optionalId?: boolean,\n  ) => N.Class;\n  +parseDecorators: (allowExport?: boolean) => void;\n  +parseFunction: <T: N.NormalFunction>(\n    node: T,\n    statement?: number,\n    allowExpressionBody?: boolean,\n    isAsync?: boolean,\n  ) => T;\n  +parseFunctionParams: (node: N.Function, allowModifiers?: boolean) => void;\n  +takeDecorators: (node: N.HasDecorators) => void;\n  */\n\n  // For object literal, check if property __proto__ has been used more than once.\n  // If the expression is a destructuring assignment, then __proto__ may appear\n  // multiple times. Otherwise, __proto__ is a duplicated key.\n\n  // For record expression, check if property __proto__ exists\n\n  checkProto(\n    prop: N.ObjectMember | N.SpreadElement,\n    isRecord: boolean,\n    protoRef: { used: boolean },\n    refExpressionErrors: ?ExpressionErrors,\n  ): void {\n    if (\n      prop.type === \"SpreadElement\" ||\n      prop.type === \"ObjectMethod\" ||\n      prop.computed ||\n      prop.shorthand\n    ) {\n      return;\n    }\n\n    const key = prop.key;\n    // It is either an Identifier or a String/NumericLiteral\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(key.start, Errors.RecordNoProto);\n        return;\n      }\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          // Store the first redefinition's position, otherwise ignore because\n          // we are parsing ambiguous pattern\n          if (refExpressionErrors.doubleProto === -1) {\n            refExpressionErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raise(key.start, Errors.DuplicateProto);\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr: N.Expression, potentialArrowAt: number): boolean {\n    return (\n      expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt\n    );\n  }\n\n  // Convenience method to parse an Expression only\n  getExpression(): N.Expression {\n    let paramFlags = PARAM;\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n    this.nextToken();\n    const expr = this.parseExpression();\n    if (!this.match(tt.eof)) {\n      this.unexpected();\n    }\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n    return expr;\n  }\n\n  // ### Expression parsing\n\n  // These nest, from the most general expression type at the top to\n  // 'atomic', nondivisible expression types at the bottom. Most of\n  // the functions will simply let the function (s) below them parse,\n  // and, *if* the syntactic construct they handle is present, wrap\n  // the AST node that the inner parser gave them in another node.\n\n  // Parse a full expression.\n  // - `disallowIn`\n  //   is used to forbid the `in` operator (in for loops initialization expressions)\n  //   When `disallowIn` is true, the production parameter [In] is not present.\n\n  // - `refExpressionErrors `\n  //   provides reference for storing '=' operator inside shorthand\n  //   property assignment in contexts where both object expression\n  //   and object pattern might appear (so it's possible to raise\n  //   delayed syntax error at correct position).\n\n  parseExpression(\n    disallowIn?: boolean,\n    refExpressionErrors?: ExpressionErrors,\n  ): N.Expression {\n    if (disallowIn) {\n      return this.disallowInAnd(() =>\n        this.parseExpressionBase(refExpressionErrors),\n      );\n    }\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  // https://tc39.es/ecma262/#prod-Expression\n  parseExpressionBase(refExpressionErrors?: ExpressionErrors): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n    if (this.match(tt.comma)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n      while (this.eat(tt.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n    return expr;\n  }\n\n  // Set [~In] parameter for assignment expression\n  parseMaybeAssignDisallowIn(\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: ?Pos,\n  ) {\n    return this.disallowInAnd(() =>\n      this.parseMaybeAssign(\n        refExpressionErrors,\n        afterLeftParse,\n        refNeedsArrowPos,\n      ),\n    );\n  }\n\n  // Set [+In] parameter for assignment expression\n  parseMaybeAssignAllowIn(\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: ?Pos,\n  ) {\n    return this.allowInAnd(() =>\n      this.parseMaybeAssign(\n        refExpressionErrors,\n        afterLeftParse,\n        refNeedsArrowPos,\n      ),\n    );\n  }\n\n  // Parse an assignment expression. This includes applications of\n  // operators like `+=`.\n\n  // https://tc39.es/ecma262/#prod-AssignmentExpression\n  parseMaybeAssign(\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: ?Pos,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    if (this.isContextual(\"yield\")) {\n      if (this.prodParam.hasYield) {\n        let left = this.parseYield();\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n        return left;\n      } else {\n        // The tokenizer will assume an expression is allowed after\n        // `yield`, but this isn't that kind of yield\n        this.state.exprAllowed = false;\n      }\n    }\n\n    let ownExpressionErrors;\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n\n    if (this.match(tt.parenL) || this.match(tt.name)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(\n      refExpressionErrors,\n      refNeedsArrowPos,\n    );\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n    if (this.state.type.isAssign) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(tt.eq)) {\n        node.left = this.toAssignable(left);\n        refExpressionErrors.doubleProto = -1; // reset because double __proto__ is valid in assignment expression\n      } else {\n        node.left = left;\n      }\n\n      if (refExpressionErrors.shorthandAssign >= node.left.start) {\n        refExpressionErrors.shorthandAssign = -1; // reset because shorthand default was used correctly\n      }\n\n      this.checkLVal(left, undefined, undefined, \"assignment expression\");\n\n      this.next();\n      node.right = this.parseMaybeAssign();\n      return this.finishNode(node, \"AssignmentExpression\");\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  // Parse a ternary conditional (`?:`) operator.\n  // https://tc39.es/ecma262/#prod-ConditionalExpression\n\n  parseMaybeConditional(\n    refExpressionErrors: ExpressionErrors,\n    refNeedsArrowPos?: ?Pos,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n  }\n\n  parseConditional(\n    expr: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    // FIXME: Disabling this for now since can't seem to get it to play nicely\n    // eslint-disable-next-line no-unused-vars\n    refNeedsArrowPos?: ?Pos,\n  ): N.Expression {\n    if (this.eat(tt.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(tt.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n    return expr;\n  }\n\n  // Start the precedence parser.\n  // https://tc39.es/ecma262/#prod-ShortCircuitExpression\n\n  parseExprOps(refExpressionErrors: ExpressionErrors): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnary(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  // Parse binary operators with the operator precedence parsing\n  // algorithm. `left` is the left-hand side of the operator.\n  // `minPrec` provides context that allows the function to stop and\n  // defer further parser to one of its callers when it encounters an\n  // operator that has a lower precedence than the set it is parsing.\n\n  parseExprOp(\n    left: N.Expression,\n    leftStartPos: number,\n    leftStartLoc: Position,\n    minPrec: number,\n  ): N.Expression {\n    let prec = this.state.type.binop;\n    if (prec != null && (this.prodParam.hasIn || !this.match(tt._in))) {\n      if (prec > minPrec) {\n        const op = this.state.type;\n        if (op === tt.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n          this.state.inPipeline = true;\n          this.checkPipelineAtInfixOperator(left, leftStartPos);\n        }\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n        if (\n          op === tt.exponent &&\n          left.type === \"UnaryExpression\" &&\n          (this.options.createParenthesizedExpressions ||\n            !(left.extra && left.extra.parenthesized))\n        ) {\n          this.raise(\n            left.argument.start,\n            Errors.UnexpectedTokenUnaryExponentiation,\n          );\n        }\n\n        const logical = op === tt.logicalOR || op === tt.logicalAND;\n        const coalesce = op === tt.nullishCoalescing;\n\n        if (coalesce) {\n          // Handle the precedence of `tt.coalesce` as equal to the range of logical expressions.\n          // In other words, `node.right` shouldn't contain logical expressions in order to check the mixed error.\n          prec = ((tt.logicalAND: any): { binop: number }).binop;\n        }\n\n        this.next();\n\n        if (\n          op === tt.pipeline &&\n          this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"minimal\"\n        ) {\n          if (\n            this.match(tt.name) &&\n            this.state.value === \"await\" &&\n            this.prodParam.hasAwait\n          ) {\n            throw this.raise(\n              this.state.start,\n              Errors.UnexpectedAwaitAfterPipelineBody,\n            );\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        this.finishNode(\n          node,\n          logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\",\n        );\n        /* this check is for all ?? operators\n         * a ?? b && c for this example\n         * when op is coalesce and nextOp is logical (&&), throw at the pos of nextOp that it can not be mixed.\n         * Symmetrically it also throws when op is logical and nextOp is coalesce\n         */\n        const nextOp = this.state.type;\n        if (\n          (coalesce && (nextOp === tt.logicalOR || nextOp === tt.logicalAND)) ||\n          (logical && nextOp === tt.nullishCoalescing)\n        ) {\n          throw this.raise(this.state.start, Errors.MixingCoalesceWithLogical);\n        }\n\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n    }\n    return left;\n  }\n\n  // Helper function for `parseExprOp`. Parse the right-hand side of binary-\n  // operator expressions, then apply any operator-specific functions.\n\n  parseExprOpRightExpr(op: TokenType, prec: number): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    switch (op) {\n      case tt.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"smart\":\n            return this.withTopicPermittingContext(() => {\n              return this.parseSmartPipelineBody(\n                this.parseExprOpBaseRightExpr(op, prec),\n                startPos,\n                startLoc,\n              );\n            });\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n      // falls through\n\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  // Helper function for `parseExprOpRightExpr`. Parse the right-hand side of\n  // binary-operator expressions without applying any operator-specific functions.\n\n  parseExprOpBaseRightExpr(op: TokenType, prec: number): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    return this.parseExprOp(\n      this.parseMaybeUnary(),\n      startPos,\n      startLoc,\n      op.rightAssociative ? prec - 1 : prec,\n    );\n  }\n\n  // Parse unary operators, both prefix and postfix.\n  // https://tc39.es/ecma262/#prod-UnaryExpression\n  parseMaybeUnary(refExpressionErrors: ?ExpressionErrors): N.Expression {\n    if (this.isContextual(\"await\") && this.isAwaitAllowed()) {\n      return this.parseAwait();\n    }\n    const update = this.match(tt.incDec);\n    const node = this.startNode();\n    if (this.state.type.prefix) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(tt._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n      const isDelete = this.match(tt._delete);\n      this.next();\n\n      node.argument = this.parseMaybeUnary();\n\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(node.start, Errors.StrictDelete);\n        } else if (\n          (arg.type === \"MemberExpression\" ||\n            arg.type === \"OptionalMemberExpression\") &&\n          arg.property.type === \"PrivateName\"\n        ) {\n          this.raise(node.start, Errors.DeletePrivateField);\n        }\n      }\n\n      if (!update) {\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    return this.parseUpdate(node, update, refExpressionErrors);\n  }\n\n  // https://tc39.es/ecma262/#prod-UpdateExpression\n  parseUpdate(\n    node: N.Expression,\n    update: boolean,\n    refExpressionErrors: ?ExpressionErrors,\n  ): N.Expression {\n    if (update) {\n      this.checkLVal(node.argument, undefined, undefined, \"prefix operation\");\n      return this.finishNode(node, \"UpdateExpression\");\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n    while (this.state.type.postfix && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.checkLVal(expr, undefined, undefined, \"postfix operation\");\n      this.next();\n      expr = this.finishNode(node, \"UpdateExpression\");\n    }\n    return expr;\n  }\n\n  // Parse call, dot, and `[]`-subscript expressions.\n  // https://tc39.es/ecma262/#prod-LeftHandSideExpression\n  parseExprSubscripts(refExpressionErrors: ?ExpressionErrors): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls?: ?boolean,\n  ): N.Expression {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false,\n    };\n    do {\n      const oldMaybeInAsyncArrowHead = this.state.maybeInAsyncArrowHead;\n      if (state.maybeAsyncArrow) {\n        this.state.maybeInAsyncArrowHead = true;\n      }\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n      // After parsing a subscript, this isn't \"async\" for sure.\n      state.maybeAsyncArrow = false;\n      this.state.maybeInAsyncArrowHead = oldMaybeInAsyncArrowHead;\n    } while (!state.stop);\n    return base;\n  }\n\n  /**\n   * @param state Set 'state.stop = true' to indicate that we should stop parsing subscripts.\n   *   state.optionalChainMember to indicate that the member is currently in OptionalChain\n   */\n  parseSubscript(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls: ?boolean,\n    state: N.ParseSubscriptState,\n  ): N.Expression {\n    if (!noCalls && this.eat(tt.doubleColon)) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (this.match(tt.backQuote)) {\n      return this.parseTaggedTemplateExpression(\n        base,\n        startPos,\n        startLoc,\n        state,\n      );\n    }\n\n    let optional = false;\n    if (this.match(tt.questionDot)) {\n      state.optionalChainMember = optional = true;\n      if (noCalls && this.lookaheadCharCode() === charCodes.leftParenthesis) {\n        // stop at `?.` when parsing `new a?.()`\n        state.stop = true;\n        return base;\n      }\n      this.next();\n    }\n\n    if (!noCalls && this.match(tt.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(\n        base,\n        startPos,\n        startLoc,\n        state,\n        optional,\n      );\n    } else if (optional || this.match(tt.bracketL) || this.eat(tt.dot)) {\n      return this.parseMember(base, startPos, startLoc, state, optional);\n    } else {\n      state.stop = true;\n      return base;\n    }\n  }\n\n  // base[?Yield, ?Await] [ Expression[+In, ?Yield, ?Await] ]\n  // base[?Yield, ?Await] . IdentifierName\n  // base[?Yield, ?Await] . PrivateIdentifier\n  //   where `base` is one of CallExpression, MemberExpression and OptionalChain\n  parseMember(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n    optional: boolean,\n  ): N.OptionalMemberExpression | N.MemberExpression {\n    const node = this.startNodeAt(startPos, startLoc);\n    const computed = this.eat(tt.bracketL);\n    node.object = base;\n    node.computed = computed;\n    const property = computed\n      ? this.parseExpression()\n      : this.parseMaybePrivateName(true);\n\n    if (property.type === \"PrivateName\") {\n      if (node.object.type === \"Super\") {\n        this.raise(startPos, Errors.SuperPrivateField);\n      }\n      this.classScope.usePrivateName(property.id.name, property.start);\n    }\n    node.property = property;\n\n    if (computed) {\n      this.expect(tt.bracketR);\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  // https://github.com/tc39/proposal-bind-operator#syntax\n  parseBind(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls: ?boolean,\n    state: N.ParseSubscriptState,\n  ): N.Expression {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(\n      this.finishNode(node, \"BindExpression\"),\n      startPos,\n      startLoc,\n      noCalls,\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-CoverCallExpressionAndAsyncArrowHead\n  // CoverCallExpressionAndAsyncArrowHead\n  // CallExpression[?Yield, ?Await] Arguments[?Yield, ?Await]\n  // OptionalChain[?Yield, ?Await] Arguments[?Yield, ?Await]\n  parseCoverCallAndAsyncArrowHead(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n    optional: boolean,\n  ): N.Expression {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldYieldPos = this.state.yieldPos;\n    const oldAwaitPos = this.state.awaitPos;\n    this.state.maybeInArrowParameters = true;\n    this.state.yieldPos = -1;\n    this.state.awaitPos = -1;\n\n    this.next(); // eat `(`\n\n    let node = this.startNodeAt(startPos, startLoc);\n    node.callee = base;\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n    }\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(\n        tt.parenR,\n        state.maybeAsyncArrow,\n        base.type === \"Import\",\n        base.type !== \"Super\",\n        node,\n      );\n    }\n    this.finishCallExpression(node, state.optionalChainMember);\n\n    if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      state.stop = true;\n\n      node = this.parseAsyncArrowFromCallExpression(\n        this.startNodeAt(startPos, startLoc),\n        node,\n      );\n      this.checkYieldAwaitInDefaultParams();\n      this.state.yieldPos = oldYieldPos;\n      this.state.awaitPos = oldAwaitPos;\n    } else {\n      this.toReferencedListDeep(node.arguments);\n\n      // We keep the old value if it isn't null, for cases like\n      //   (x = async(yield)) => {}\n      //\n      // Hi developer of the future :) If you are implementing generator\n      // arrow functions, please read the note below about \"await\" and\n      // verify if the same logic is needed for yield.\n      if (oldYieldPos !== -1) this.state.yieldPos = oldYieldPos;\n\n      // Await is trickier than yield. When parsing a possible arrow function\n      // (e.g. something starting with `async(`) we don't know if its possible\n      // parameters will actually be inside an async arrow function or if it is\n      // a normal call expression.\n      // If it ended up being a call expression, if we are in a context where\n      // await expression are disallowed (and thus \"await\" is an identifier)\n      // we must be careful not to leak this.state.awaitPos to an even outer\n      // context, where \"await\" could not be an identifier.\n      // For example, this code is valid because \"await\" isn't directly inside\n      // an async function:\n      //\n      //     async function a() {\n      //       function b(param = async (await)) {\n      //       }\n      //     }\n      //\n      if (\n        (!this.isAwaitAllowed() && !oldMaybeInArrowParameters) ||\n        oldAwaitPos !== -1\n      ) {\n        this.state.awaitPos = oldAwaitPos;\n      }\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    return node;\n  }\n\n  // MemberExpression [?Yield, ?Await] TemplateLiteral[?Yield, ?Await, +Tagged]\n  // CallExpression [?Yield, ?Await] TemplateLiteral[?Yield, ?Await, +Tagged]\n  parseTaggedTemplateExpression(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n  ): N.TaggedTemplateExpression {\n    const node: N.TaggedTemplateExpression = this.startNodeAt(\n      startPos,\n      startLoc,\n    );\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n    if (state.optionalChainMember) {\n      this.raise(startPos, Errors.OptionalChainingNoTemplate);\n    }\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base: N.Expression): boolean {\n    return (\n      base.type === \"Identifier\" &&\n      base.name === \"async\" &&\n      this.state.lastTokEnd === base.end &&\n      !this.canInsertSemicolon() &&\n      // check there are no escape sequences, such as \\u{61}sync\n      base.end - base.start === 5 &&\n      base.start === this.state.potentialArrowAt\n    );\n  }\n\n  finishCallExpression<T: N.CallExpression | N.OptionalCallExpression>(\n    node: T,\n    optional: boolean,\n  ): N.Expression {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        // todo(Babel 8): remove the if condition,\n        // moduleAttributes is renamed to importAssertions\n        if (!this.hasPlugin(\"moduleAttributes\")) {\n          this.expectPlugin(\"importAssertions\");\n        }\n      }\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(\n          node.start,\n          Errors.ImportCallArity,\n          this.hasPlugin(\"importAssertions\") ||\n            this.hasPlugin(\"moduleAttributes\")\n            ? \"one or two arguments\"\n            : \"one argument\",\n        );\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(arg.start, Errors.ImportCallSpreadArgument);\n          }\n        }\n      }\n    }\n    return this.finishNode(\n      node,\n      optional ? \"OptionalCallExpression\" : \"CallExpression\",\n    );\n  }\n\n  parseCallExpressionArguments(\n    close: TokenType,\n    possibleAsyncArrow: boolean,\n    dynamicImport?: boolean,\n    allowPlaceholder?: boolean,\n    nodeForExtra?: ?N.Node,\n  ): $ReadOnlyArray<?N.Expression> {\n    const elts = [];\n    let innerParenStart;\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (\n            dynamicImport &&\n            !this.hasPlugin(\"importAssertions\") &&\n            !this.hasPlugin(\"moduleAttributes\")\n          ) {\n            this.raise(\n              this.state.lastTokStart,\n              Errors.ImportCallArgumentTrailingComma,\n            );\n          }\n          if (nodeForExtra) {\n            this.addExtra(\n              nodeForExtra,\n              \"trailingComma\",\n              this.state.lastTokStart,\n            );\n          }\n          this.next();\n          break;\n        }\n      }\n\n      // we need to make sure that if this is an async arrow functions,\n      // that we don't allow inner parens inside the params\n      if (this.match(tt.parenL) && !innerParenStart) {\n        innerParenStart = this.state.start;\n      }\n\n      elts.push(\n        this.parseExprListItem(\n          false,\n          possibleAsyncArrow ? new ExpressionErrors() : undefined,\n          possibleAsyncArrow ? { start: 0 } : undefined,\n          allowPlaceholder,\n        ),\n      );\n    }\n\n    // we found an async arrow function so let's not allow any inner parens\n    if (possibleAsyncArrow && innerParenStart && this.shouldParseAsyncArrow()) {\n      this.unexpected();\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return elts;\n  }\n\n  shouldParseAsyncArrow(): boolean {\n    return this.match(tt.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(\n    node: N.ArrowFunctionExpression,\n    call: N.CallExpression,\n  ): N.ArrowFunctionExpression {\n    this.expect(tt.arrow);\n    this.parseArrowExpression(\n      node,\n      call.arguments,\n      true,\n      call.extra?.trailingComma,\n    );\n    return node;\n  }\n\n  // Parse a no-call expression (like argument of `new` or `::` operators).\n  // https://tc39.es/ecma262/#prod-MemberExpression\n  parseNoCallExpr(): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  // Parse an atomic expression — either a single token that is an\n  // expression, an expression started by a keyword like `function` or\n  // `new`, or an expression wrapped in punctuation like `()`, `[]`,\n  // or `{}`.\n\n  // https://tc39.es/ecma262/#prod-PrimaryExpression\n  // https://tc39.es/ecma262/#prod-AsyncArrowFunction\n  // PrimaryExpression\n  // Super\n  // Import\n  // AsyncArrowFunction\n\n  parseExprAtom(refExpressionErrors?: ?ExpressionErrors): N.Expression {\n    // If a division operator appears in an expression position, the\n    // tokenizer got confused, and we force it to read a regexp instead.\n    if (this.state.type === tt.slash) this.readRegexp();\n\n    const canBeArrow = this.state.potentialArrowAt === this.state.start;\n    let node;\n\n    switch (this.state.type) {\n      case tt._super:\n        return this.parseSuper();\n\n      case tt._import:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(tt.dot)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(tt.parenL)) {\n          this.raise(this.state.lastTokStart, Errors.UnsupportedImport);\n        }\n        return this.finishNode(node, \"Import\");\n      case tt._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case tt.name: {\n        const containsEsc = this.state.containsEsc;\n        const id = this.parseIdentifier();\n\n        if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n          if (this.match(tt._function)) {\n            const last = this.state.context.length - 1;\n            if (this.state.context[last] !== ct.functionStatement) {\n              // Since \"async\" is an identifier and normally identifiers\n              // can't be followed by expression, the tokenizer assumes\n              // that \"function\" starts a statement.\n              // Fixing it in the tokenizer would mean tracking not only the\n              // previous token (\"async\"), but also the one before to know\n              // its beforeExpr value.\n              // It's easier and more efficient to adjust the context here.\n              throw new Error(\"Internal error\");\n            }\n            this.state.context[last] = ct.functionExpression;\n\n            this.next();\n            return this.parseFunction(\n              this.startNodeAtNode(id),\n              undefined,\n              true,\n            );\n          } else if (this.match(tt.name)) {\n            return this.parseAsyncArrowUnaryFunction(id);\n          }\n        }\n\n        if (canBeArrow && this.match(tt.arrow) && !this.canInsertSemicolon()) {\n          this.next();\n          return this.parseArrowExpression(\n            this.startNodeAtNode(id),\n            [id],\n            false,\n          );\n        }\n\n        return id;\n      }\n\n      case tt._do: {\n        return this.parseDo();\n      }\n\n      case tt.regexp: {\n        const value = this.state.value;\n        node = this.parseLiteral(value.value, \"RegExpLiteral\");\n        node.pattern = value.pattern;\n        node.flags = value.flags;\n        return node;\n      }\n\n      case tt.num:\n        return this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n      case tt.bigint:\n        return this.parseLiteral(this.state.value, \"BigIntLiteral\");\n\n      case tt.decimal:\n        return this.parseLiteral(this.state.value, \"DecimalLiteral\");\n\n      case tt.string:\n        return this.parseLiteral(this.state.value, \"StringLiteral\");\n\n      case tt._null:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"NullLiteral\");\n\n      case tt._true:\n      case tt._false:\n        return this.parseBooleanLiteral();\n\n      case tt.parenL:\n        return this.parseParenAndDistinguishExpression(canBeArrow);\n\n      case tt.bracketBarL:\n      case tt.bracketHashL: {\n        return this.parseArrayLike(\n          this.state.type === tt.bracketBarL ? tt.bracketBarR : tt.bracketR,\n          /* canBePattern */ false,\n          /* isTuple */ true,\n          refExpressionErrors,\n        );\n      }\n      case tt.bracketL: {\n        return this.parseArrayLike(\n          tt.bracketR,\n          /* canBePattern */ true,\n          /* isTuple */ false,\n          refExpressionErrors,\n        );\n      }\n      case tt.braceBarL:\n      case tt.braceHashL: {\n        return this.parseObjectLike(\n          this.state.type === tt.braceBarL ? tt.braceBarR : tt.braceR,\n          /* isPattern */ false,\n          /* isRecord */ true,\n          refExpressionErrors,\n        );\n      }\n      case tt.braceL: {\n        return this.parseObjectLike(\n          tt.braceR,\n          /* isPattern */ false,\n          /* isRecord */ false,\n          refExpressionErrors,\n        );\n      }\n      case tt._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case tt.at:\n        this.parseDecorators();\n      // fall through\n      case tt._class:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case tt._new:\n        return this.parseNewOrNewTarget();\n\n      case tt.backQuote:\n        return this.parseTemplate(false);\n\n      // BindExpression[Yield]\n      //   :: MemberExpression[?Yield]\n      case tt.doubleColon: {\n        node = this.startNode();\n        this.next();\n        node.object = null;\n        const callee = (node.callee = this.parseNoCallExpr());\n        if (callee.type === \"MemberExpression\") {\n          return this.finishNode(node, \"BindExpression\");\n        } else {\n          throw this.raise(callee.start, Errors.UnsupportedBind);\n        }\n      }\n\n      case tt.hash: {\n        if (this.state.inPipeline) {\n          node = this.startNode();\n\n          if (\n            this.getPluginOption(\"pipelineOperator\", \"proposal\") !== \"smart\"\n          ) {\n            this.raise(node.start, Errors.PrimaryTopicRequiresSmartPipeline);\n          }\n\n          this.next();\n\n          if (!this.primaryTopicReferenceIsAllowedInCurrentTopicContext()) {\n            this.raise(node.start, Errors.PrimaryTopicNotAllowed);\n          }\n\n          this.registerTopicReference();\n          return this.finishNode(node, \"PipelinePrimaryTopicReference\");\n        }\n\n        // https://tc39.es/proposal-private-fields-in-in\n        // RelationalExpression [In, Yield, Await]\n        //   [+In] PrivateIdentifier in ShiftExpression[?Yield, ?Await]\n        const nextCh = this.input.codePointAt(this.state.end);\n        if (isIdentifierStart(nextCh) || nextCh === charCodes.backslash) {\n          const start = this.state.start;\n          // $FlowIgnore It'll either parse a PrivateName or throw.\n          node = (this.parseMaybePrivateName(true): N.PrivateName);\n          if (this.match(tt._in)) {\n            this.expectPlugin(\"privateIn\");\n            this.classScope.usePrivateName(node.id.name, node.start);\n          } else if (this.hasPlugin(\"privateIn\")) {\n            this.raise(\n              this.state.start,\n              Errors.PrivateInExpectedIn,\n              node.id.name,\n            );\n          } else {\n            throw this.unexpected(start);\n          }\n          return node;\n        }\n      }\n      // fall through\n      case tt.relational: {\n        if (this.state.value === \"<\") {\n          const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n          if (\n            isIdentifierStart(lookaheadCh) || // Element/Type Parameter <foo>\n            lookaheadCh === charCodes.greaterThan // Fragment <>\n          ) {\n            this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n          }\n        }\n      }\n      // fall through\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  // async [no LineTerminator here] AsyncArrowBindingIdentifier[?Yield] [no LineTerminator here] => AsyncConciseBody[?In]\n  parseAsyncArrowUnaryFunction(id: N.Expression): N.ArrowFunctionExpression {\n    const node = this.startNodeAtNode(id);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldMaybeInAsyncArrowHead = this.state.maybeInAsyncArrowHead;\n    const oldYieldPos = this.state.yieldPos;\n    const oldAwaitPos = this.state.awaitPos;\n    this.state.maybeInArrowParameters = true;\n    this.state.maybeInAsyncArrowHead = true;\n    this.state.yieldPos = -1;\n    this.state.awaitPos = -1;\n    const params = [this.parseIdentifier()];\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.pos, Errors.LineTerminatorBeforeArrow);\n    }\n    this.expect(tt.arrow);\n    this.checkYieldAwaitInDefaultParams();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.maybeInAsyncArrowHead = oldMaybeInAsyncArrowHead;\n    this.state.yieldPos = oldYieldPos;\n    this.state.awaitPos = oldAwaitPos;\n    // let foo = async bar => {};\n    this.parseArrowExpression(node, params, true);\n    return node;\n  }\n\n  // https://github.com/tc39/proposal-do-expressions\n  parseDo(): N.DoExpression {\n    this.expectPlugin(\"doExpressions\");\n    const node = this.startNode();\n    this.next(); // eat `do`\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    node.body = this.parseBlock();\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  // Parse the `super` keyword\n  parseSuper(): N.Super {\n    const node = this.startNode();\n    this.next(); // eat `super`\n    if (\n      this.match(tt.parenL) &&\n      !this.scope.allowDirectSuper &&\n      !this.options.allowSuperOutsideMethod\n    ) {\n      this.raise(node.start, Errors.SuperNotAllowed);\n    } else if (\n      !this.scope.allowSuper &&\n      !this.options.allowSuperOutsideMethod\n    ) {\n      this.raise(node.start, Errors.UnexpectedSuper);\n    }\n\n    if (\n      !this.match(tt.parenL) &&\n      !this.match(tt.bracketL) &&\n      !this.match(tt.dot)\n    ) {\n      this.raise(node.start, Errors.UnsupportedSuper);\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parseBooleanLiteral(): N.BooleanLiteral {\n    const node = this.startNode();\n    node.value = this.match(tt._true);\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseMaybePrivateName(\n    isPrivateNameAllowed: boolean,\n  ): N.PrivateName | N.Identifier {\n    const isPrivate = this.match(tt.hash);\n\n    if (isPrivate) {\n      this.expectOnePlugin([\"classPrivateProperties\", \"classPrivateMethods\"]);\n      if (!isPrivateNameAllowed) {\n        this.raise(this.state.pos, Errors.UnexpectedPrivateField);\n      }\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space between # and identifier\");\n      node.id = this.parseIdentifier(true);\n      return this.finishNode(node, \"PrivateName\");\n    } else {\n      return this.parseIdentifier(true);\n    }\n  }\n\n  parseFunctionOrFunctionSent(): N.FunctionExpression | N.MetaProperty {\n    const node = this.startNode();\n\n    // We do not do parseIdentifier here because when parseFunctionOrFunctionSent\n    // is called we already know that the current token is a \"name\" with the value \"function\"\n    // This will improve perf a tiny little bit as we do not do validation but more importantly\n    // here is that parseIdentifier will remove an item from the expression stack\n    // if \"function\" or \"class\" is parsed as identifier (in objects e.g.), which should not happen here.\n    this.next(); // eat `function`\n\n    if (this.prodParam.hasYield && this.match(tt.dot)) {\n      const meta = this.createIdentifier(\n        this.startNodeAtNode(node),\n        \"function\",\n      );\n      this.next(); // eat `.`\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n    return this.parseFunction(node);\n  }\n\n  parseMetaProperty(\n    node: N.MetaProperty,\n    meta: N.Identifier,\n    propertyName: string,\n  ): N.MetaProperty {\n    node.meta = meta;\n\n    if (meta.name === \"function\" && propertyName === \"sent\") {\n      // https://github.com/tc39/proposal-function.sent#syntax-1\n      if (this.isContextual(propertyName)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        // The code wasn't `function.sent` but just `function.`, so a simple error is less confusing.\n        this.unexpected();\n      }\n    }\n\n    const containsEsc = this.state.containsEsc;\n\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(\n        node.property.start,\n        Errors.UnsupportedMetaProperty,\n        meta.name,\n        propertyName,\n      );\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  // https://tc39.es/ecma262/#prod-ImportMeta\n  parseImportMetaProperty(node: N.MetaProperty): N.MetaProperty {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next(); // eat `.`\n\n    if (this.isContextual(\"meta\")) {\n      if (!this.inModule) {\n        this.raiseWithData(\n          id.start,\n          { code: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\" },\n          Errors.ImportMetaOutsideModule,\n        );\n      }\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteral<T: N.Literal>(\n    value: any,\n    type: /*T[\"kind\"]*/ string,\n    startPos?: number,\n    startLoc?: Position,\n  ): T {\n    startPos = startPos || this.state.start;\n    startLoc = startLoc || this.state.startLoc;\n\n    const node = this.startNodeAt(startPos, startLoc);\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(startPos, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode(node, type);\n  }\n\n  // https://tc39.es/ecma262/#prod-CoverParenthesizedExpressionAndArrowParameterList\n  parseParenAndDistinguishExpression(canBeArrow: boolean): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    let val;\n    this.next(); // eat `(`\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldYieldPos = this.state.yieldPos;\n    const oldAwaitPos = this.state.awaitPos;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.yieldPos = -1;\n    this.state.awaitPos = -1;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    const refNeedsArrowPos = { start: 0 };\n    let first = true;\n    let spreadStart;\n    let optionalCommaStart;\n\n    while (!this.match(tt.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma, refNeedsArrowPos.start || null);\n        if (this.match(tt.parenR)) {\n          optionalCommaStart = this.state.start;\n          break;\n        }\n      }\n\n      if (this.match(tt.ellipsis)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStart = this.state.start;\n        exprList.push(\n          this.parseParenItem(\n            this.parseRestBinding(),\n            spreadNodeStartPos,\n            spreadNodeStartLoc,\n          ),\n        );\n\n        this.checkCommaAfterRest(charCodes.rightParenthesis);\n\n        break;\n      } else {\n        exprList.push(\n          this.parseMaybeAssignAllowIn(\n            refExpressionErrors,\n            this.parseParenItem,\n            refNeedsArrowPos,\n          ),\n        );\n      }\n    }\n\n    const innerEndPos = this.state.lastTokEnd;\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(tt.parenR);\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    let arrowNode = this.startNodeAt(startPos, startLoc);\n    if (\n      canBeArrow &&\n      this.shouldParseArrow() &&\n      (arrowNode = this.parseArrow(arrowNode))\n    ) {\n      if (!this.isAwaitAllowed() && !this.state.maybeInAsyncArrowHead) {\n        this.state.awaitPos = oldAwaitPos;\n      }\n      this.checkYieldAwaitInDefaultParams();\n      this.state.yieldPos = oldYieldPos;\n      this.state.awaitPos = oldAwaitPos;\n      for (const param of exprList) {\n        if (param.extra && param.extra.parenthesized) {\n          this.unexpected(param.extra.parenStart);\n        }\n      }\n\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n\n    // We keep the old value if it isn't null, for cases like\n    //   (x = (yield)) => {}\n    if (oldYieldPos !== -1) this.state.yieldPos = oldYieldPos;\n    if (oldAwaitPos !== -1) this.state.awaitPos = oldAwaitPos;\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStart);\n    }\n    if (optionalCommaStart) this.unexpected(optionalCommaStart);\n    if (spreadStart) this.unexpected(spreadStart);\n    this.checkExpressionErrors(refExpressionErrors, true);\n    if (refNeedsArrowPos.start) this.unexpected(refNeedsArrowPos.start);\n\n    this.toReferencedListDeep(exprList, /* isParenthesizedExpr */ true);\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(val, \"parenthesized\", true);\n      this.addExtra(val, \"parenStart\", startPos);\n      return val;\n    }\n\n    const parenExpression = this.startNodeAt(startPos, startLoc);\n    parenExpression.expression = val;\n    this.finishNode(parenExpression, \"ParenthesizedExpression\");\n    return parenExpression;\n  }\n\n  shouldParseArrow(): boolean {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(node: N.ArrowFunctionExpression): ?N.ArrowFunctionExpression {\n    if (this.eat(tt.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(\n    node: N.Expression,\n    startPos: number, // eslint-disable-line no-unused-vars\n    startLoc: Position, // eslint-disable-line no-unused-vars\n  ): N.Expression {\n    return node;\n  }\n\n  parseNewOrNewTarget(): N.NewExpression | N.MetaProperty {\n    const node = this.startNode();\n    this.next();\n    if (this.match(tt.dot)) {\n      // https://tc39.es/ecma262/#prod-NewTarget\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        let error = Errors.UnexpectedNewTarget;\n\n        if (this.hasPlugin(\"classProperties\")) {\n          error += \" or class properties\";\n        }\n\n        /* eslint-disable @babel/development-internal/dry-error-messages */\n        this.raise(metaProp.start, error);\n        /* eslint-enable @babel/development-internal/dry-error-messages */\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node);\n  }\n\n  // New's precedence is slightly tricky. It must allow its argument to\n  // be a `[]` or dot subscript expression, but not a call — at least,\n  // not without wrapping it in parentheses. Thus, it uses the noCalls\n  // argument to parseSubscripts to prevent it from consuming the\n  // argument list.\n  // https://tc39.es/ecma262/#prod-NewExpression\n  parseNew(node: N.Expression): N.NewExpression {\n    node.callee = this.parseNoCallExpr();\n\n    if (node.callee.type === \"Import\") {\n      this.raise(node.callee.start, Errors.ImportCallNotNewExpression);\n    } else if (\n      node.callee.type === \"OptionalMemberExpression\" ||\n      node.callee.type === \"OptionalCallExpression\"\n    ) {\n      this.raise(this.state.lastTokEnd, Errors.OptionalChainingNoNew);\n    } else if (this.eat(tt.questionDot)) {\n      this.raise(this.state.start, Errors.OptionalChainingNoNew);\n    }\n\n    this.parseNewArguments(node);\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewArguments(node: N.NewExpression): void {\n    if (this.eat(tt.parenL)) {\n      const args = this.parseExprList(tt.parenR);\n      this.toReferencedList(args);\n      // $FlowFixMe (parseExprList should be all non-null in this case)\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n  }\n\n  // Parse template expression.\n\n  parseTemplateElement(isTagged: boolean): N.TemplateElement {\n    const elem = this.startNode();\n    if (this.state.value === null) {\n      if (!isTagged) {\n        this.raise(this.state.start + 1, Errors.InvalidEscapeSequenceTemplate);\n      }\n    }\n    elem.value = {\n      raw: this.input\n        .slice(this.state.start, this.state.end)\n        .replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.state.value,\n    };\n    this.next();\n    elem.tail = this.match(tt.backQuote);\n    return this.finishNode(elem, \"TemplateElement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-TemplateLiteral\n  parseTemplate(isTagged: boolean): N.TemplateLiteral {\n    const node = this.startNode();\n    this.next();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n    while (!curElt.tail) {\n      this.expect(tt.dollarBraceL);\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.expect(tt.braceR);\n      node.quasis.push((curElt = this.parseTemplateElement(isTagged)));\n    }\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  // This is overwritten by the TypeScript plugin to parse template types\n  parseTemplateSubstitution(): N.Expression {\n    return this.parseExpression();\n  }\n\n  // Parse an object literal, binding pattern, or record.\n\n  parseObjectLike<T: N.ObjectPattern | N.ObjectExpression>(\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ): T {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash: any = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n\n    node.properties = [];\n    this.next();\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n          this.next();\n          break;\n        }\n      }\n\n      const prop = this.parsePropertyDefinition(isPattern, refExpressionErrors);\n      if (!isPattern) {\n        // $FlowIgnore RestElement will never be returned if !isPattern\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (\n        isRecord &&\n        prop.type !== \"ObjectProperty\" &&\n        prop.type !== \"SpreadElement\"\n      ) {\n        this.raise(prop.start, Errors.InvalidRecordProperty);\n      }\n\n      // $FlowIgnore\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      node.properties.push(prop);\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n    return this.finishNode(node, type);\n  }\n\n  // Check grammar production:\n  //   IdentifierName *_opt PropertyName\n  // It is used in `parsePropertyDefinition` to detect AsyncMethod and Accessors\n  maybeAsyncOrAccessorProp(prop: N.ObjectProperty): boolean {\n    return (\n      !prop.computed &&\n      prop.key.type === \"Identifier\" &&\n      (this.isLiteralPropertyName() ||\n        this.match(tt.bracketL) ||\n        this.match(tt.star))\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-PropertyDefinition\n  parsePropertyDefinition(\n    isPattern: boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ): N.ObjectMember | N.SpreadElement | N.RestElement {\n    let decorators = [];\n    if (this.match(tt.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(this.state.start, Errors.UnsupportedPropertyDecorator);\n      }\n\n      // we needn't check if decorators (stage 0) plugin is enabled since it's checked by\n      // the call to this.parseDecorator\n      while (this.match(tt.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode();\n    let isGenerator = false;\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(tt.ellipsis)) {\n      if (decorators.length) this.unexpected();\n      if (isPattern) {\n        this.next();\n        // Don't use parseRestBinding() as we only allow Identifier here.\n        prop.argument = this.parseIdentifier();\n        this.checkCommaAfterRest(charCodes.rightCurlyBrace);\n        return this.finishNode(prop, \"RestElement\");\n      }\n\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (isPattern || refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    if (!isPattern) {\n      isGenerator = this.eat(tt.star);\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, /* isPrivateNameAllowed */ false);\n\n    if (\n      !isPattern &&\n      !isGenerator &&\n      !containsEsc &&\n      this.maybeAsyncOrAccessorProp(prop)\n    ) {\n      const keyName = key.name;\n      // https://tc39.es/ecma262/#prod-AsyncMethod\n      // https://tc39.es/ecma262/#prod-AsyncGeneratorMethod\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        isGenerator = this.eat(tt.star);\n        this.parsePropertyName(prop, /* isPrivateNameAllowed */ false);\n      }\n      // get PropertyName[?Yield, ?Await] () { FunctionBody[~Yield, ~Await] }\n      // set PropertyName[?Yield, ?Await] ( PropertySetParameterList ) { FunctionBody[~Yield, ~Await] }\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        prop.kind = keyName;\n        if (this.match(tt.star)) {\n          isGenerator = true;\n          this.raise(this.state.pos, Errors.AccessorIsGenerator, keyName);\n          this.next();\n        }\n        this.parsePropertyName(prop, /* isPrivateNameAllowed */ false);\n      }\n    }\n\n    this.parseObjPropValue(\n      prop,\n      startPos,\n      startLoc,\n      isGenerator,\n      isAsync,\n      isPattern,\n      isAccessor,\n      refExpressionErrors,\n    );\n\n    return prop;\n  }\n\n  getGetterSetterExpectedParamCount(\n    method: N.ObjectMethod | N.ClassMethod,\n  ): number {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  // This exists so we can override within the ESTree plugin\n  getObjectOrClassMethodParams(method: N.ObjectMethod | N.ClassMethod) {\n    return method.params;\n  }\n\n  // get methods aren't allowed to have any parameters\n  // set methods must have exactly 1 parameter which is not a rest parameter\n  checkGetterSetterParams(method: N.ObjectMethod | N.ClassMethod): void {\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n\n    const start = method.start;\n\n    if (params.length !== paramCount) {\n      if (method.kind === \"get\") {\n        this.raise(start, Errors.BadGetterArity);\n      } else {\n        this.raise(start, Errors.BadSetterArity);\n      }\n    }\n\n    if (\n      method.kind === \"set\" &&\n      params[params.length - 1]?.type === \"RestElement\"\n    ) {\n      this.raise(start, Errors.BadSetterRestParameter);\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-MethodDefinition\n  parseObjectMethod(\n    prop: N.ObjectMethod,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n  ): ?N.ObjectMethod {\n    if (isAccessor) {\n      // isAccessor implies isAsync: false, isPattern: false, isGenerator: false\n      this.parseMethod(\n        prop,\n        // This _should_ be false, but with error recovery, we allow it to be\n        // set for informational purposes\n        isGenerator,\n        /* isAsync */ false,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n      this.checkGetterSetterParams(prop);\n      return prop;\n    }\n\n    if (isAsync || isGenerator || this.match(tt.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n    }\n  }\n\n  // if `isPattern` is true, parse https://tc39.es/ecma262/#prod-BindingProperty\n  // else https://tc39.es/ecma262/#prod-PropertyDefinition\n  parseObjectProperty(\n    prop: N.ObjectProperty,\n    startPos: ?number,\n    startLoc: ?Position,\n    isPattern: boolean,\n    refExpressionErrors: ?ExpressionErrors,\n  ): ?N.ObjectProperty {\n    prop.shorthand = false;\n\n    if (this.eat(tt.colon)) {\n      prop.value = isPattern\n        ? this.parseMaybeDefault(this.state.start, this.state.startLoc)\n        : this.parseMaybeAssignAllowIn(refExpressionErrors);\n\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      // PropertyDefinition:\n      //   IdentifierReference\n      //   CoveredInitializedName\n      // Note: `{ eval } = {}` will be checked in `checkLVal` later.\n      this.checkReservedWord(prop.key.name, prop.key.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(\n          startPos,\n          startLoc,\n          prop.key.__clone(),\n        );\n      } else if (this.match(tt.eq) && refExpressionErrors) {\n        if (refExpressionErrors.shorthandAssign === -1) {\n          refExpressionErrors.shorthandAssign = this.state.start;\n        }\n        prop.value = this.parseMaybeDefault(\n          startPos,\n          startLoc,\n          prop.key.__clone(),\n        );\n      } else {\n        prop.value = prop.key.__clone();\n      }\n      prop.shorthand = true;\n\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(\n    prop: any,\n    startPos: ?number,\n    startLoc: ?Position,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ): void {\n    const node =\n      this.parseObjectMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n      ) ||\n      this.parseObjectProperty(\n        prop,\n        startPos,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      );\n\n    if (!node) this.unexpected();\n\n    // $FlowFixMe\n    return node;\n  }\n\n  parsePropertyName(\n    prop: N.ObjectOrClassMember | N.ClassMember | N.TsNamedTypeElementBase,\n    isPrivateNameAllowed: boolean,\n  ): N.Expression | N.Identifier {\n    if (this.eat(tt.bracketL)) {\n      (prop: $FlowSubtype<N.ObjectOrClassMember>).computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(tt.bracketR);\n    } else {\n      const oldInPropertyName = this.state.inPropertyName;\n      this.state.inPropertyName = true;\n      // We check if it's valid for it to be a private name when we push it.\n      (prop: $FlowFixMe).key =\n        this.match(tt.num) ||\n        this.match(tt.string) ||\n        this.match(tt.bigint) ||\n        this.match(tt.decimal)\n          ? this.parseExprAtom()\n          : this.parseMaybePrivateName(isPrivateNameAllowed);\n\n      if (prop.key.type !== \"PrivateName\") {\n        // ClassPrivateProperty is never computed, so we don't assign in that case.\n        prop.computed = false;\n      }\n\n      this.state.inPropertyName = oldInPropertyName;\n    }\n\n    return prop.key;\n  }\n\n  // Initialize empty function node.\n\n  initFunction(node: N.BodilessFunctionOrMethodBase, isAsync: ?boolean): void {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  // Parse object or class method.\n\n  parseMethod<T: N.MethodLike>(\n    node: T,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowDirectSuper: boolean,\n    type: string,\n    inClassScope: boolean = false,\n  ): T {\n    const oldYieldPos = this.state.yieldPos;\n    const oldAwaitPos = this.state.awaitPos;\n    this.state.yieldPos = -1;\n    this.state.awaitPos = -1;\n\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor; // For TypeScript parameter properties\n    this.scope.enter(\n      SCOPE_FUNCTION |\n        SCOPE_SUPER |\n        (inClassScope ? SCOPE_CLASS : 0) |\n        (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0),\n    );\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams((node: any), allowModifiers);\n    this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n\n    this.state.yieldPos = oldYieldPos;\n    this.state.awaitPos = oldAwaitPos;\n\n    return node;\n  }\n\n  // parse an array literal or tuple literal\n  // https://tc39.es/ecma262/#prod-ArrayLiteral\n  // https://tc39.es/proposal-record-tuple/#prod-TupleLiteral\n  parseArrayLike(\n    close: TokenType,\n    canBePattern: boolean,\n    isTuple: boolean,\n    refExpressionErrors: ?ExpressionErrors,\n  ): N.ArrayExpression | N.TupleExpression {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(\n      close,\n      /* allowEmpty */ !isTuple,\n      refExpressionErrors,\n      node,\n    );\n    if (canBePattern && !this.state.maybeInArrowParameters) {\n      // This could be an array pattern:\n      //   ([a: string, b: string]) => {}\n      // In this case, we don't have to call toReferencedList. We will\n      // call it, if needed, when we are sure that it is a parenthesized\n      // expression by calling toReferencedListDeep.\n      this.toReferencedList(node.elements);\n    }\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(\n      node,\n      isTuple ? \"TupleExpression\" : \"ArrayExpression\",\n    );\n  }\n\n  // Parse arrow function expression.\n  // If the parameters are provided, they will be converted to an\n  // assignable list.\n  parseArrowExpression(\n    node: N.ArrowFunctionExpression,\n    params: ?(N.Expression[]),\n    isAsync: boolean,\n    trailingCommaPos: ?number,\n  ): N.ArrowFunctionExpression {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n    // ConciseBody and AsyncConciseBody inherit [In]\n    if (!this.match(tt.bracketL) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldYieldPos = this.state.yieldPos;\n    const oldAwaitPos = this.state.awaitPos;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaPos);\n    }\n    this.state.maybeInArrowParameters = false;\n    this.state.yieldPos = -1;\n    this.state.awaitPos = -1;\n    this.parseFunctionBody(node, true);\n\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.yieldPos = oldYieldPos;\n    this.state.awaitPos = oldAwaitPos;\n\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(\n    node: N.ArrowFunctionExpression,\n    params: N.Expression[],\n    trailingCommaPos: ?number,\n  ): void {\n    node.params = this.toAssignableList(params, trailingCommaPos);\n  }\n\n  parseFunctionBodyAndFinish(\n    node: N.BodilessFunctionOrMethodBase,\n    type: string,\n    isMethod?: boolean = false,\n  ): void {\n    // $FlowIgnore (node is not bodiless if we get here)\n    this.parseFunctionBody(node, false, isMethod);\n    this.finishNode(node, type);\n  }\n\n  // Parse function body and check parameters.\n  parseFunctionBody(\n    node: N.Function,\n    allowExpression: ?boolean,\n    isMethod?: boolean = false,\n  ): void {\n    const isExpression = allowExpression && !this.match(tt.braceL);\n    const oldInParameters = this.state.inParameters;\n    this.state.inParameters = false;\n\n    if (isExpression) {\n      // https://tc39.es/ecma262/#prod-ExpressionBody\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      // Start a new scope with regard to labels\n      // flag (restore them to their old value afterwards).\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n\n      // FunctionBody[Yield, Await]:\n      //   StatementList[?Yield, ?Await, +Return] opt\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(\n        true,\n        false,\n        // Strict mode function checks after we parse the statements in the function body.\n        (hasStrictModeDirective: boolean) => {\n          const nonSimple = !this.isSimpleParamList(node.params);\n\n          if (hasStrictModeDirective && nonSimple) {\n            // This logic is here to align the error location with the ESTree plugin.\n            const errorPos =\n              // $FlowIgnore\n              (node.kind === \"method\" || node.kind === \"constructor\") &&\n              // $FlowIgnore\n              !!node.key\n                ? node.key.end\n                : node.start;\n            this.raise(errorPos, Errors.IllegalLanguageModeDirective);\n          }\n\n          const strictModeChanged = !oldStrict && this.state.strict;\n\n          // Add the params to varDeclaredNames to ensure that an error is thrown\n          // if a let/const declaration in the function clashes with one of the params.\n          this.checkParams(\n            node,\n            !this.state.strict && !allowExpression && !isMethod && !nonSimple,\n            allowExpression,\n            strictModeChanged,\n          );\n\n          // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n          if (this.state.strict && node.id) {\n            this.checkLVal(\n              node.id,\n              BIND_OUTSIDE,\n              undefined,\n              \"function name\",\n              undefined,\n              strictModeChanged,\n            );\n          }\n        },\n      );\n      this.prodParam.exit();\n      this.state.labels = oldLabels;\n    }\n\n    this.state.inParameters = oldInParameters;\n  }\n\n  isSimpleParamList(\n    params: $ReadOnlyArray<N.Pattern | N.TSParameterProperty>,\n  ): boolean {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (params[i].type !== \"Identifier\") return false;\n    }\n    return true;\n  }\n\n  checkParams(\n    node: N.Function,\n    allowDuplicates: boolean,\n    // eslint-disable-next-line no-unused-vars\n    isArrowFunction: ?boolean,\n    strictModeChanged?: boolean = true,\n  ): void {\n    // $FlowIssue\n    const nameHash: {} = Object.create(null);\n    for (let i = 0; i < node.params.length; i++) {\n      this.checkLVal(\n        node.params[i],\n        BIND_VAR,\n        allowDuplicates ? null : nameHash,\n        \"function parameter list\",\n        undefined,\n        strictModeChanged,\n      );\n    }\n  }\n\n  // Parses a comma-separated list of expressions, and returns them as\n  // an array. `close` is the token type that ends the list, and\n  // `allowEmpty` can be turned on to allow subsequent commas with\n  // nothing in between them to be parsed as `null` (which is needed\n  // for array literals).\n\n  parseExprList(\n    close: TokenType,\n    allowEmpty?: boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n    nodeForExtra?: ?N.Node,\n  ): $ReadOnlyArray<?N.Expression> {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addExtra(\n              nodeForExtra,\n              \"trailingComma\",\n              this.state.lastTokStart,\n            );\n          }\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n    return elts;\n  }\n\n  parseExprListItem(\n    allowEmpty: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n    refNeedsArrowPos: ?Pos,\n    allowPlaceholder: ?boolean,\n  ): ?N.Expression {\n    let elt;\n    if (this.match(tt.comma)) {\n      if (!allowEmpty) {\n        this.raise(this.state.pos, Errors.UnexpectedToken, \",\");\n      }\n      elt = null;\n    } else if (this.match(tt.ellipsis)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n      elt = this.parseParenItem(\n        this.parseSpread(refExpressionErrors, refNeedsArrowPos),\n        spreadNodeStartPos,\n        spreadNodeStartLoc,\n      );\n    } else if (this.match(tt.question)) {\n      this.expectPlugin(\"partialApplication\");\n      if (!allowPlaceholder) {\n        this.raise(this.state.start, Errors.UnexpectedArgumentPlaceholder);\n      }\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(\n        refExpressionErrors,\n        this.parseParenItem,\n        refNeedsArrowPos,\n      );\n    }\n    return elt;\n  }\n\n  // Parse the next token as an identifier. If `liberal` is true (used\n  // when parsing properties), it will also convert keywords into\n  // identifiers.\n  // This shouldn't be used to parse the keywords of meta properties, since they\n  // are not identifiers and cannot contain escape sequences.\n\n  parseIdentifier(liberal?: boolean): N.Identifier {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(node: N.Identifier, name: string): N.Identifier {\n    node.name = name;\n    node.loc.identifierName = name;\n\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos: number, liberal?: boolean): string {\n    let name: string;\n\n    const { start, type } = this.state;\n\n    if (type === tt.name) {\n      name = this.state.value;\n    } else if (type.keyword) {\n      name = type.keyword;\n\n      // `class` and `function` keywords push function-type token context into this.context.\n      // But there is no chance to pop the context if the keyword is consumed\n      // as an identifier such as a property name.\n      const curContext = this.curContext();\n      if (\n        (type === tt._class || type === tt._function) &&\n        (curContext === ct.functionStatement ||\n          curContext === ct.functionExpression)\n      ) {\n        this.state.context.pop();\n      }\n    } else {\n      throw this.unexpected();\n    }\n\n    if (liberal) {\n      // If the current token is not used as a keyword, set its type to \"tt.name\".\n      // This will prevent this.next() from throwing about unexpected escapes.\n      this.state.type = tt.name;\n    } else {\n      this.checkReservedWord(name, start, !!type.keyword, false);\n    }\n\n    this.next();\n\n    return name;\n  }\n\n  checkReservedWord(\n    word: string,\n    startLoc: number,\n    checkKeywords: boolean,\n    isBinding: boolean,\n  ): void {\n    if (this.prodParam.hasYield && word === \"yield\") {\n      this.raise(startLoc, Errors.YieldBindingIdentifier);\n      return;\n    }\n\n    if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(startLoc, Errors.AwaitBindingIdentifier);\n        return;\n      }\n      if (\n        this.state.awaitPos === -1 &&\n        (this.state.maybeInAsyncArrowHead || this.isAwaitAllowed())\n      ) {\n        this.state.awaitPos = this.state.start;\n      }\n    }\n\n    if (\n      this.scope.inClass &&\n      !this.scope.inNonArrowFunction &&\n      word === \"arguments\"\n    ) {\n      this.raise(startLoc, Errors.ArgumentsInClass);\n      return;\n    }\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(startLoc, Errors.UnexpectedKeyword, word);\n      return;\n    }\n\n    const reservedTest = !this.state.strict\n      ? isReservedWord\n      : isBinding\n      ? isStrictBindReservedWord\n      : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      if (!this.prodParam.hasAwait && word === \"await\") {\n        this.raise(startLoc, Errors.AwaitNotInAsyncFunction);\n      } else {\n        this.raise(startLoc, Errors.UnexpectedReservedWord, word);\n      }\n    }\n  }\n\n  isAwaitAllowed(): boolean {\n    if (this.scope.inFunction) return this.prodParam.hasAwait;\n    if (this.options.allowAwaitOutsideFunction) return true;\n    if (this.hasPlugin(\"topLevelAwait\")) {\n      return this.inModule && this.prodParam.hasAwait;\n    }\n    return false;\n  }\n\n  // Parses await expression inside async function.\n\n  parseAwait(): N.AwaitExpression {\n    const node = this.startNode();\n\n    this.next();\n\n    if (this.state.inParameters) {\n      this.raise(node.start, Errors.AwaitExpressionFormalParameter);\n    } else if (this.state.awaitPos === -1) {\n      this.state.awaitPos = node.start;\n    }\n    if (this.eat(tt.star)) {\n      this.raise(node.start, Errors.ObsoleteAwaitStar);\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (\n        this.hasPrecedingLineBreak() ||\n        // All the following expressions are ambiguous:\n        //   await + 0, await - 0, await ( 0 ), await [ 0 ], await / 0 /u, await ``\n        this.match(tt.plusMin) ||\n        this.match(tt.parenL) ||\n        this.match(tt.bracketL) ||\n        this.match(tt.backQuote) ||\n        // Sometimes the tokenizer generates tt.slash for regexps, and this is\n        // handler by parseExprAtom\n        this.match(tt.regexp) ||\n        this.match(tt.slash) ||\n        // This code could be parsed both as a modulo operator or as an intrinsic:\n        //   await %x(0)\n        (this.hasPlugin(\"v8intrinsic\") && this.match(tt.modulo))\n      ) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary();\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  // Parses yield expression inside generator.\n\n  parseYield(): N.YieldExpression {\n    const node = this.startNode();\n\n    if (this.state.inParameters) {\n      this.raise(node.start, Errors.YieldInParameter);\n    } else if (this.state.yieldPos === -1) {\n      this.state.yieldPos = node.start;\n    }\n\n    this.next();\n    if (\n      this.match(tt.semi) ||\n      (!this.match(tt.star) && !this.state.type.startsExpr) ||\n      this.hasPrecedingLineBreak()\n    ) {\n      node.delegate = false;\n      node.argument = null;\n    } else {\n      node.delegate = this.eat(tt.star);\n      node.argument = this.parseMaybeAssign();\n    }\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  // Validates a pipeline (for any of the pipeline Babylon plugins) at the point\n  // of the infix operator `|>`.\n\n  checkPipelineAtInfixOperator(left: N.Expression, leftStartPos: number) {\n    if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"smart\") {\n      if (left.type === \"SequenceExpression\") {\n        // Ensure that the pipeline head is not a comma-delimited\n        // sequence expression.\n        this.raise(leftStartPos, Errors.PipelineHeadSequenceExpression);\n      }\n    }\n  }\n\n  parseSmartPipelineBody(\n    childExpression: N.Expression,\n    startPos: number,\n    startLoc: Position,\n  ): N.PipelineBody {\n    this.checkSmartPipelineBodyEarlyErrors(childExpression, startPos);\n\n    return this.parseSmartPipelineBodyInStyle(\n      childExpression,\n      startPos,\n      startLoc,\n    );\n  }\n\n  checkSmartPipelineBodyEarlyErrors(\n    childExpression: N.Expression,\n    startPos: number,\n  ): void {\n    if (this.match(tt.arrow)) {\n      // If the following token is invalidly `=>`, then throw a human-friendly error\n      // instead of something like 'Unexpected token, expected \";\"'.\n      throw this.raise(this.state.start, Errors.PipelineBodyNoArrow);\n    } else if (childExpression.type === \"SequenceExpression\") {\n      this.raise(startPos, Errors.PipelineBodySequenceExpression);\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(\n    childExpression: N.Expression,\n    startPos: number,\n    startLoc: Position,\n  ): N.PipelineBody {\n    const bodyNode = this.startNodeAt(startPos, startLoc);\n    const isSimpleReference = this.isSimpleReference(childExpression);\n    if (isSimpleReference) {\n      bodyNode.callee = childExpression;\n    } else {\n      if (!this.topicReferenceWasUsedInCurrentTopicContext()) {\n        this.raise(startPos, Errors.PipelineTopicUnused);\n      }\n      bodyNode.expression = childExpression;\n    }\n    return this.finishNode(\n      bodyNode,\n      isSimpleReference ? \"PipelineBareFunction\" : \"PipelineTopicExpression\",\n    );\n  }\n\n  isSimpleReference(expression: N.Expression): boolean {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return (\n          !expression.computed && this.isSimpleReference(expression.object)\n        );\n      case \"Identifier\":\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  // Enable topic references from outer contexts within smart pipeline bodies.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references with the smartPipelines plugin. They then run a\n  // callback, then they reset the parser to the old topic-context state that it\n  // had before the function was called.\n\n  withTopicPermittingContext<T>(callback: () => T): T {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      // Enable the use of the primary topic reference.\n      maxNumOfResolvableTopics: 1,\n      // Hide the use of any topic references from outer contexts.\n      maxTopicIndex: null,\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  // Disable topic references from outer contexts within syntax constructs\n  // such as the bodies of iteration statements.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references with the smartPipelines plugin. They then run a\n  // callback, then they reset the parser to the old topic-context state that it\n  // had before the function was called.\n\n  withTopicForbiddingContext<T>(callback: () => T): T {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      // Disable the use of the primary topic reference.\n      maxNumOfResolvableTopics: 0,\n      // Hide the use of any topic references from outer contexts.\n      maxTopicIndex: null,\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withSoloAwaitPermittingContext<T>(callback: () => T): T {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd<T>(callback: () => T): T {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n\n  disallowInAnd<T>(callback: () => T): T {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n\n  // Register the use of a primary topic reference (`#`) within the current\n  // topic context.\n  registerTopicReference(): void {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  primaryTopicReferenceIsAllowedInCurrentTopicContext(): boolean {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentTopicContext(): boolean {\n    return (\n      this.state.topicContext.maxTopicIndex != null &&\n      this.state.topicContext.maxTopicIndex >= 0\n    );\n  }\n\n  parseFSharpPipelineBody(prec: number): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n\n    const ret = this.parseExprOp(\n      this.parseMaybeUnary(),\n      startPos,\n      startLoc,\n      prec,\n    );\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return ret;\n  }\n}\n","// @flow\n\nimport * as N from \"../types\";\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport ExpressionParser from \"./expression\";\nimport { Errors } from \"./error\";\nimport {\n  isIdentifierChar,\n  isIdentifierStart,\n  keywordRelationalOperator,\n} from \"../util/identifier\";\nimport { lineBreak } from \"../util/whitespace\";\nimport * as charCodes from \"charcodes\";\nimport {\n  BIND_CLASS,\n  BIND_LEXICAL,\n  BIND_VAR,\n  BIND_FUNCTION,\n  SCOPE_CLASS,\n  SCOPE_FUNCTION,\n  SCOPE_OTHER,\n  SCOPE_SIMPLE_CATCH,\n  SCOPE_SUPER,\n  CLASS_ELEMENT_OTHER,\n  CLASS_ELEMENT_INSTANCE_GETTER,\n  CLASS_ELEMENT_INSTANCE_SETTER,\n  CLASS_ELEMENT_STATIC_GETTER,\n  CLASS_ELEMENT_STATIC_SETTER,\n  type BindingTypes,\n} from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport { PARAM, functionFlags } from \"../util/production-parameter\";\n\nconst loopLabel = { kind: \"loop\" },\n  switchLabel = { kind: \"switch\" };\n\nconst FUNC_NO_FLAGS = 0b000,\n  FUNC_STATEMENT = 0b001,\n  FUNC_HANGING_STATEMENT = 0b010,\n  FUNC_NULLABLE_ID = 0b100;\n\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\n\nexport default class StatementParser extends ExpressionParser {\n  // ### Statement parsing\n\n  // Parse a program. Initializes the parser, reads any number of\n  // statements, and wraps them in a Program node.  Optionally takes a\n  // `program` argument.  If present, the statements will be appended\n  // to its body instead of creating a new node.\n\n  parseTopLevel(file: N.File, program: N.Program): N.File {\n    program.sourceType = this.options.sourceType;\n\n    program.interpreter = this.parseInterpreterDirective();\n\n    this.parseBlockBody(program, true, true, tt.eof);\n\n    if (\n      this.inModule &&\n      !this.options.allowUndeclaredExports &&\n      this.scope.undefinedExports.size > 0\n    ) {\n      for (const [name] of Array.from(this.scope.undefinedExports)) {\n        const pos = this.scope.undefinedExports.get(name);\n        // $FlowIssue\n        this.raise(pos, Errors.ModuleExportUndefined, name);\n      }\n    }\n\n    file.program = this.finishNode(program, \"Program\");\n    file.comments = this.state.comments;\n\n    if (this.options.tokens) file.tokens = this.tokens;\n\n    return this.finishNode(file, \"File\");\n  }\n\n  // TODO\n\n  stmtToDirective(stmt: N.Statement): N.Directive {\n    const expr = stmt.expression;\n\n    const directiveLiteral = this.startNodeAt(expr.start, expr.loc.start);\n    const directive = this.startNodeAt(stmt.start, stmt.loc.start);\n\n    const raw = this.input.slice(expr.start, expr.end);\n    const val = (directiveLiteral.value = raw.slice(1, -1)); // remove quotes\n\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n\n    directive.value = this.finishNodeAt(\n      directiveLiteral,\n      \"DirectiveLiteral\",\n      expr.end,\n      expr.loc.end,\n    );\n\n    return this.finishNodeAt(directive, \"Directive\", stmt.end, stmt.loc.end);\n  }\n\n  parseInterpreterDirective(): N.InterpreterDirective | null {\n    if (!this.match(tt.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context: ?string): boolean {\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n    const next = this.nextTokenStart();\n    const nextCh = this.input.charCodeAt(next);\n    // For ambiguous cases, determine if a LexicalDeclaration (or only a\n    // Statement) is allowed here. If context is not empty then only a Statement\n    // is allowed. However, `let [` is an explicit negative lookahead for\n    // ExpressionStatement, so special-case it first.\n    if (nextCh === charCodes.leftSquareBracket) return true;\n    if (context) return false;\n\n    if (nextCh === charCodes.leftCurlyBrace) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      let pos = next + 1;\n      while (isIdentifierChar(this.input.charCodeAt(pos))) {\n        ++pos;\n      }\n      const ident = this.input.slice(next, pos);\n      if (!keywordRelationalOperator.test(ident)) return true;\n    }\n    return false;\n  }\n\n  // Parse a single statement.\n  //\n  // If expecting a statement and finding a slash operator, parse a\n  // regular expression literal. This is to handle cases like\n  // `if (foo) /blah/.exec(foo)`, where looking at the previous token\n  // does not help.\n  // https://tc39.es/ecma262/#prod-Statement\n  // ImportDeclaration and ExportDeclaration are also handled here so we can throw recoverable errors\n  // when they are not at the top level\n  parseStatement(context: ?string, topLevel?: boolean): N.Statement {\n    if (this.match(tt.at)) {\n      this.parseDecorators(true);\n    }\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(context: ?string, topLevel: ?boolean): N.Statement {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = tt._var;\n      kind = \"let\";\n    }\n\n    // Most types of statements are recognized by the keyword they\n    // start with. Many are trivial to parse, some require a bit of\n    // complexity.\n\n    switch (starttype) {\n      case tt._break:\n      case tt._continue:\n        // $FlowFixMe\n        return this.parseBreakContinueStatement(node, starttype.keyword);\n      case tt._debugger:\n        return this.parseDebuggerStatement(node);\n      case tt._do:\n        return this.parseDoStatement(node);\n      case tt._for:\n        return this.parseForStatement(node);\n      case tt._function:\n        if (this.lookaheadCharCode() === charCodes.dot) break;\n        if (context) {\n          if (this.state.strict) {\n            this.raise(this.state.start, Errors.StrictFunction);\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(this.state.start, Errors.SloppyFunction);\n          }\n        }\n        return this.parseFunctionStatement(node, false, !context);\n\n      case tt._class:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case tt._if:\n        return this.parseIfStatement(node);\n      case tt._return:\n        return this.parseReturnStatement(node);\n      case tt._switch:\n        return this.parseSwitchStatement(node);\n      case tt._throw:\n        return this.parseThrowStatement(node);\n      case tt._try:\n        return this.parseTryStatement(node);\n\n      case tt._const:\n      case tt._var:\n        kind = kind || this.state.value;\n        if (context && kind !== \"var\") {\n          this.raise(this.state.start, Errors.UnexpectedLexicalDeclaration);\n        }\n        return this.parseVarStatement(node, kind);\n\n      case tt._while:\n        return this.parseWhileStatement(node);\n      case tt._with:\n        return this.parseWithStatement(node);\n      case tt.braceL:\n        return this.parseBlock();\n      case tt.semi:\n        return this.parseEmptyStatement(node);\n      case tt._import: {\n        const nextTokenCharCode = this.lookaheadCharCode();\n        if (\n          nextTokenCharCode === charCodes.leftParenthesis || // import()\n          nextTokenCharCode === charCodes.dot // import.meta\n        ) {\n          break;\n        }\n      }\n      // fall through\n      case tt._export: {\n        if (!this.options.allowImportExportEverywhere && !topLevel) {\n          this.raise(this.state.start, Errors.UnexpectedImportExport);\n        }\n\n        this.next(); // eat `import`/`export`\n\n        let result;\n        if (starttype === tt._import) {\n          result = this.parseImport(node);\n\n          if (\n            result.type === \"ImportDeclaration\" &&\n            (!result.importKind || result.importKind === \"value\")\n          ) {\n            this.sawUnambiguousESM = true;\n          }\n        } else {\n          result = this.parseExport(node);\n\n          if (\n            (result.type === \"ExportNamedDeclaration\" &&\n              (!result.exportKind || result.exportKind === \"value\")) ||\n            (result.type === \"ExportAllDeclaration\" &&\n              (!result.exportKind || result.exportKind === \"value\")) ||\n            result.type === \"ExportDefaultDeclaration\"\n          ) {\n            this.sawUnambiguousESM = true;\n          }\n        }\n\n        this.assertModuleNodeAllowed(node);\n\n        return result;\n      }\n\n      default: {\n        if (this.isAsyncFunction()) {\n          if (context) {\n            this.raise(\n              this.state.start,\n              Errors.AsyncFunctionInSingleStatementContext,\n            );\n          }\n          this.next();\n          return this.parseFunctionStatement(node, true, !context);\n        }\n      }\n    }\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (\n      starttype === tt.name &&\n      expr.type === \"Identifier\" &&\n      this.eat(tt.colon)\n    ) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n\n  assertModuleNodeAllowed(node: N.Node): void {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raiseWithData(\n        node.start,\n        {\n          code: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\",\n        },\n        Errors.ImportOutsideModule,\n      );\n    }\n  }\n\n  takeDecorators(node: N.HasDecorators): void {\n    const decorators = this.state.decoratorStack[\n      this.state.decoratorStack.length - 1\n    ];\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator(): boolean {\n    return this.match(tt._class);\n  }\n\n  parseDecorators(allowExport?: boolean): void {\n    const currentContextDecorators = this.state.decoratorStack[\n      this.state.decoratorStack.length - 1\n    ];\n    while (this.match(tt.at)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(tt._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (\n        this.hasPlugin(\"decorators\") &&\n        !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")\n      ) {\n        this.raise(this.state.start, Errors.DecoratorExportClass);\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(this.state.start, Errors.UnexpectedLeadingDecorator);\n    }\n  }\n\n  parseDecorator(): N.Decorator {\n    this.expectOnePlugin([\"decorators-legacy\", \"decorators\"]);\n\n    const node = this.startNode();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      // Every time a decorator class expression is evaluated, a new empty array is pushed onto the stack\n      // So that the decorators of any nested class expressions will be dealt with separately\n      this.state.decoratorStack.push([]);\n\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr: N.Expression;\n\n      if (this.eat(tt.parenL)) {\n        expr = this.parseExpression();\n        this.expect(tt.parenR);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(tt.dot)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(expr: N.Expression): N.Expression {\n    if (this.eat(tt.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(\n    node: N.BreakStatement | N.ContinueStatement,\n    keyword: string,\n  ): N.BreakStatement | N.ContinueStatement {\n    const isBreak = keyword === \"break\";\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, keyword);\n\n    return this.finishNode(\n      node,\n      isBreak ? \"BreakStatement\" : \"ContinueStatement\",\n    );\n  }\n\n  verifyBreakContinue(\n    node: N.BreakStatement | N.ContinueStatement,\n    keyword: string,\n  ) {\n    const isBreak = keyword === \"break\";\n    let i;\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n    if (i === this.state.labels.length) {\n      this.raise(node.start, Errors.IllegalBreakContinue, keyword);\n    }\n  }\n\n  parseDebuggerStatement(node: N.DebuggerStatement): N.DebuggerStatement {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression(): N.Expression {\n    this.expect(tt.parenL);\n    const val = this.parseExpression();\n    this.expect(tt.parenR);\n    return val;\n  }\n\n  parseDoStatement(node: N.DoWhileStatement): N.DoWhileStatement {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withTopicForbiddingContext(() =>\n        // Parse the loop body's body.\n        this.parseStatement(\"do\"),\n      );\n\n    this.state.labels.pop();\n\n    this.expect(tt._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(tt.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  // Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n  // loop is non-trivial. Basically, we have to parse the init `var`\n  // statement or expression, disallowing the `in` operator (see\n  // the second parameter to `parseExpression`), and then check\n  // whether the next token is `in` or `of`. When there is no init\n  // part (semicolon immediately after the opening parenthesis), it\n  // is a regular `for` loop.\n\n  parseForStatement(node: N.Node): N.ForLike {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    let awaitAt = -1;\n    if (this.isAwaitAllowed() && this.eatContextual(\"await\")) {\n      awaitAt = this.state.lastTokStart;\n    }\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(tt.parenL);\n\n    if (this.match(tt.semi)) {\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node, null);\n    }\n\n    const isLet = this.isLet();\n    if (this.match(tt._var) || this.match(tt._const) || isLet) {\n      const init = this.startNode();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(init, true, kind);\n      this.finishNode(init, \"VariableDeclaration\");\n\n      if (\n        (this.match(tt._in) || this.isContextual(\"of\")) &&\n        init.declarations.length === 1\n      ) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node, init);\n    }\n\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    if (this.match(tt._in) || this.isContextual(\"of\")) {\n      this.toAssignable(init);\n      const description = this.isContextual(\"of\")\n        ? \"for-of statement\"\n        : \"for-in statement\";\n      this.checkLVal(init, undefined, undefined, description);\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n    return this.parseFor(node, init);\n  }\n\n  parseFunctionStatement(\n    node: N.FunctionDeclaration,\n    isAsync?: boolean,\n    declarationPosition?: boolean,\n  ): N.FunctionDeclaration {\n    this.next();\n    return this.parseFunction(\n      node,\n      FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT),\n      isAsync,\n    );\n  }\n\n  parseIfStatement(node: N.IfStatement): N.IfStatement {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(tt._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(node: N.ReturnStatement): N.ReturnStatement {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(this.state.start, Errors.IllegalReturn);\n    }\n\n    this.next();\n\n    // In `return` (and `break`/`continue`), the keywords with\n    // optional arguments, we eagerly look for a semicolon or the\n    // possibility to insert one.\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(node: N.SwitchStatement): N.SwitchStatement {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = (node.cases = []);\n    this.expect(tt.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n\n    // Statements under must be grouped (by label) in SwitchCase\n    // nodes. `cur` is used to keep the node that we are currently\n    // adding statements to.\n\n    let cur;\n    for (let sawDefault; !this.match(tt.braceR); ) {\n      if (this.match(tt._case) || this.match(tt._default)) {\n        const isCase = this.match(tt._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push((cur = this.startNode()));\n        cur.consequent = [];\n        this.next();\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(\n              this.state.lastTokStart,\n              Errors.MultipleDefaultsInSwitch,\n            );\n          }\n          sawDefault = true;\n          cur.test = null;\n        }\n        this.expect(tt.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next(); // Closing brace\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(node: N.ThrowStatement): N.ThrowStatement {\n    this.next();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.lastTokEnd, Errors.NewlineAfterThrow);\n    }\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam(): N.Pattern {\n    const param = this.parseBindingAtom();\n\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, BIND_LEXICAL, null, \"catch clause\");\n\n    return param;\n  }\n\n  parseTryStatement(node: N.TryStatement): N.TryStatement {\n    this.next();\n\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(tt._catch)) {\n      const clause = this.startNode();\n      this.next();\n      if (this.match(tt.parenL)) {\n        this.expect(tt.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(tt.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      clause.body =\n        // For the smartPipelines plugin: Disable topic references from outer\n        // contexts within the catch clause's body.\n        this.withTopicForbiddingContext(() =>\n          // Parse the catch clause's body.\n          this.parseBlock(false, false),\n        );\n      this.scope.exit();\n\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(tt._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(node.start, Errors.NoCatchOrFinally);\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(\n    node: N.VariableDeclaration,\n    kind: \"var\" | \"let\" | \"const\",\n  ): N.VariableDeclaration {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(node: N.WhileStatement): N.WhileStatement {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(\"while\"),\n      );\n\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(node: N.WithStatement): N.WithStatement {\n    if (this.state.strict) {\n      this.raise(this.state.start, Errors.StrictWith);\n    }\n    this.next();\n    node.object = this.parseHeaderExpression();\n\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the with statement's body.\n      // They are permitted in function default-parameter expressions, which are\n      // part of the outer context, outside of the with statement's body.\n      this.withTopicForbiddingContext(() =>\n        // Parse the statement body.\n        this.parseStatement(\"with\"),\n      );\n\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node: N.EmptyStatement): N.EmptyStatement {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(\n    node: N.LabeledStatement,\n    maybeName: string,\n    expr: N.Identifier,\n    context: ?string,\n  ): N.LabeledStatement {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(expr.start, Errors.LabelRedeclaration, maybeName);\n      }\n    }\n\n    const kind = this.state.type.isLoop\n      ? \"loop\"\n      : this.match(tt._switch)\n      ? \"switch\"\n      : null;\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start,\n    });\n    node.body = this.parseStatement(\n      context\n        ? context.indexOf(\"label\") === -1\n          ? context + \"label\"\n          : context\n        : \"label\",\n    );\n\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(\n    node: N.ExpressionStatement,\n    expr: N.Expression,\n  ): N.Statement {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  // Parse a semicolon-enclosed block of statements, handling `\"use\n  // strict\"` declarations when `allowDirectives` is true (used for\n  // function bodies).\n\n  parseBlock(\n    allowDirectives?: boolean = false,\n    createNewLexicalScope?: boolean = true,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): N.BlockStatement {\n    const node = this.startNode();\n    this.expect(tt.braceL);\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n    this.parseBlockBody(\n      node,\n      allowDirectives,\n      false,\n      tt.braceR,\n      afterBlockParse,\n    );\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt: N.Statement): boolean {\n    return (\n      stmt.type === \"ExpressionStatement\" &&\n      stmt.expression.type === \"StringLiteral\" &&\n      !stmt.expression.extra.parenthesized\n    );\n  }\n\n  parseBlockBody(\n    node: N.BlockStatementLike,\n    allowDirectives: ?boolean,\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const body = (node.body = []);\n    const directives = (node.directives = []);\n    this.parseBlockOrModuleBlockBody(\n      body,\n      allowDirectives ? directives : undefined,\n      topLevel,\n      end,\n      afterBlockParse,\n    );\n  }\n\n  // Undefined directives means that directives are not allowed.\n  // https://tc39.es/ecma262/#prod-Block\n  // https://tc39.es/ecma262/#prod-ModuleBody\n  parseBlockOrModuleBlockBody(\n    body: N.Statement[],\n    directives: ?(N.Directive[]),\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const octalPositions = [];\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      // Track octal literals that occur before a \"use strict\" directive.\n      if (!parsedNonDirective && this.state.octalPositions.length) {\n        octalPositions.push(...this.state.octalPositions);\n      }\n\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective && this.isValidDirective(stmt)) {\n        const directive = this.stmtToDirective(stmt);\n        directives.push(directive);\n\n        if (!hasStrictModeDirective && directive.value.value === \"use strict\") {\n          hasStrictModeDirective = true;\n          this.setStrict(true);\n        }\n\n        continue;\n      }\n\n      parsedNonDirective = true;\n      body.push(stmt);\n    }\n\n    // Throw an error for any octal literals found before a\n    // \"use strict\" directive. Strict mode will be set at parse\n    // time for any literals that occur after the directive.\n    if (this.state.strict && octalPositions.length) {\n      for (const pos of octalPositions) {\n        this.raise(pos, Errors.StrictOctalLiteral);\n      }\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  // Parse a regular `for` loop. The disambiguation code in\n  // `parseStatement` will already have parsed the init statement or\n  // expression.\n\n  parseFor(\n    node: N.ForStatement,\n    init: ?(N.VariableDeclaration | N.Expression),\n  ): N.ForStatement {\n    node.init = init;\n    this.expect(tt.semi);\n    node.test = this.match(tt.semi) ? null : this.parseExpression();\n    this.expect(tt.semi);\n    node.update = this.match(tt.parenR) ? null : this.parseExpression();\n    this.expect(tt.parenR);\n\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withTopicForbiddingContext(() =>\n        // Parse the loop body.\n        this.parseStatement(\"for\"),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  // Parse a `for`/`in` and `for`/`of` loop, which are almost\n  // same from parser's perspective.\n\n  parseForIn(\n    node: N.ForInOf,\n    init: N.VariableDeclaration | N.AssignmentPattern,\n    awaitAt: number,\n  ): N.ForInOf {\n    const isForIn = this.match(tt._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt > -1) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt > -1;\n    }\n\n    if (\n      init.type === \"VariableDeclaration\" &&\n      init.declarations[0].init != null &&\n      (!isForIn ||\n        this.state.strict ||\n        init.kind !== \"var\" ||\n        init.declarations[0].id.type !== \"Identifier\")\n    ) {\n      this.raise(\n        init.start,\n        Errors.ForInOfLoopInitializer,\n        isForIn ? \"for-in\" : \"for-of\",\n      );\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, Errors.InvalidLhs, \"for-loop\");\n    }\n\n    node.left = init;\n    node.right = isForIn\n      ? this.parseExpression()\n      : this.parseMaybeAssignAllowIn();\n    this.expect(tt.parenR);\n\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(\"for\"),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  // Parse a list of variable declarations.\n\n  parseVar(\n    node: N.VariableDeclaration,\n    isFor: boolean,\n    kind: \"var\" | \"let\" | \"const\",\n  ): N.VariableDeclaration {\n    const declarations = (node.declarations = []);\n    const isTypescript = this.hasPlugin(\"typescript\");\n    node.kind = kind;\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n      if (this.eat(tt.eq)) {\n        decl.init = isFor\n          ? this.parseMaybeAssignDisallowIn()\n          : this.parseMaybeAssignAllowIn();\n      } else {\n        if (\n          kind === \"const\" &&\n          !(this.match(tt._in) || this.isContextual(\"of\"))\n        ) {\n          // `const` with no initializer is allowed in TypeScript.\n          // It could be a declaration like `const x: number;`.\n          if (!isTypescript) {\n            this.raise(\n              this.state.lastTokEnd,\n              Errors.DeclarationMissingInitializer,\n              \"Const declarations\",\n            );\n          }\n        } else if (\n          decl.id.type !== \"Identifier\" &&\n          !(isFor && (this.match(tt._in) || this.isContextual(\"of\")))\n        ) {\n          this.raise(\n            this.state.lastTokEnd,\n            Errors.DeclarationMissingInitializer,\n            \"Complex binding patterns\",\n          );\n        }\n        decl.init = null;\n      }\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(tt.comma)) break;\n    }\n    return node;\n  }\n\n  parseVarId(decl: N.VariableDeclarator, kind: \"var\" | \"let\" | \"const\"): void {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(\n      decl.id,\n      kind === \"var\" ? BIND_VAR : BIND_LEXICAL,\n      undefined,\n      \"variable declaration\",\n      kind !== \"var\",\n    );\n  }\n\n  // Parse a function declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  parseFunction<T: N.NormalFunction>(\n    node: T,\n    statement?: number = FUNC_NO_FLAGS,\n    isAsync?: boolean = false,\n  ): T {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n\n    this.initFunction(node, isAsync);\n\n    if (this.match(tt.star) && isHangingStatement) {\n      this.raise(this.state.start, Errors.GeneratorInSingleStatementContext);\n    }\n    node.generator = this.eat(tt.star);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldYieldPos = this.state.yieldPos;\n    const oldAwaitPos = this.state.awaitPos;\n    this.state.maybeInArrowParameters = false;\n    this.state.yieldPos = -1;\n    this.state.awaitPos = -1;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, /* allowModifiers */ false);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the function body. They are permitted in function\n    // default-parameter expressions, outside of the function body.\n    this.withTopicForbiddingContext(() => {\n      // Parse the function body.\n      this.parseFunctionBodyAndFinish(\n        node,\n        isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\",\n      );\n    });\n\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      // We need to register this _after_ parsing the function body\n      // because of TypeScript body-less function declarations,\n      // which shouldn't be added to the scope.\n      this.registerFunctionStatementId(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.yieldPos = oldYieldPos;\n    this.state.awaitPos = oldAwaitPos;\n\n    return node;\n  }\n\n  parseFunctionId(requireId?: boolean): ?N.Identifier {\n    return requireId || this.match(tt.name) ? this.parseIdentifier() : null;\n  }\n\n  parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n    const oldInParameters = this.state.inParameters;\n    this.state.inParameters = true;\n\n    this.expect(tt.parenL);\n    node.params = this.parseBindingList(\n      tt.parenR,\n      charCodes.rightParenthesis,\n      /* allowEmpty */ false,\n      allowModifiers,\n    );\n\n    this.state.inParameters = oldInParameters;\n    this.checkYieldAwaitInDefaultParams();\n  }\n\n  registerFunctionStatementId(node: N.Function): void {\n    if (!node.id) return;\n\n    // If it is a regular function declaration in sloppy mode, then it is\n    // subject to Annex B semantics (BIND_FUNCTION). Otherwise, the binding\n    // mode depends on properties of the current scope (see\n    // treatFunctionsAsVar).\n    this.scope.declareName(\n      node.id.name,\n      this.state.strict || node.generator || node.async\n        ? this.scope.treatFunctionsAsVar\n          ? BIND_VAR\n          : BIND_LEXICAL\n        : BIND_FUNCTION,\n      node.id.start,\n    );\n  }\n\n  // Parse a class declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  parseClass<T: N.Class>(\n    node: T,\n    isStatement: /* T === ClassDeclaration */ boolean,\n    optionalId?: boolean,\n  ): T {\n    this.next();\n    this.takeDecorators(node);\n\n    // A class definition is always strict mode code.\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    // this.state.strict is restored in parseClassBody\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n\n    return this.finishNode(\n      node,\n      isStatement ? \"ClassDeclaration\" : \"ClassExpression\",\n    );\n  }\n\n  isClassProperty(): boolean {\n    return this.match(tt.eq) || this.match(tt.semi) || this.match(tt.braceR);\n  }\n\n  isClassMethod(): boolean {\n    return this.match(tt.parenL);\n  }\n\n  isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n    return (\n      !method.computed &&\n      !method.static &&\n      (method.key.name === \"constructor\" || // Identifier\n        method.key.value === \"constructor\") // String literal\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassBody\n  parseClassBody(\n    constructorAllowsSuper: boolean,\n    oldStrict: boolean,\n  ): N.ClassBody {\n    this.classScope.enter();\n\n    const state: N.ParseClassMemberState = {\n      constructorAllowsSuper,\n      hadConstructor: false,\n      hadStaticBlock: false,\n    };\n    let decorators: N.Decorator[] = [];\n    const classBody: N.ClassBody = this.startNode();\n    classBody.body = [];\n\n    this.expect(tt.braceL);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the class body.\n    this.withTopicForbiddingContext(() => {\n      while (!this.match(tt.braceR)) {\n        if (this.eat(tt.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(this.state.lastTokEnd, Errors.DecoratorSemicolon);\n          }\n          continue;\n        }\n\n        if (this.match(tt.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode();\n\n        // steal the decorators if there are any\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (\n          member.kind === \"constructor\" &&\n          member.decorators &&\n          member.decorators.length > 0\n        ) {\n          this.raise(member.start, Errors.DecoratorConstructor);\n        }\n      }\n    });\n\n    this.state.strict = oldStrict;\n\n    this.next(); // eat `}`\n\n    if (decorators.length) {\n      throw this.raise(this.state.start, Errors.TrailingDecorator);\n    }\n\n    this.classScope.exit();\n\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  // returns true if the current identifier is a method/field name,\n  // false if it is a modifier\n  parseClassMemberFromModifier(\n    classBody: N.ClassBody,\n    member: N.ClassMember,\n  ): boolean {\n    const key = this.parseIdentifier(true); // eats the modifier\n\n    if (this.isClassMethod()) {\n      const method: N.ClassMethod = (member: any);\n\n      // a method named like the modifier\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(\n        classBody,\n        method,\n        false,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop: N.ClassProperty = (member: any);\n\n      // a property named like the modifier\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n    return false;\n  }\n\n  parseClassMember(\n    classBody: N.ClassBody,\n    member: N.ClassMember,\n    state: N.ParseClassMemberState,\n  ): void {\n    const isStatic = this.isContextual(\"static\");\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        // a class element named 'static'\n        return;\n      }\n      if (this.eat(tt.braceL)) {\n        this.parseClassStaticBlock(\n          classBody,\n          ((member: any): N.StaticBlock),\n          state,\n        );\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(\n    classBody: N.ClassBody,\n    member: N.ClassMember,\n    state: N.ParseClassMemberState,\n    isStatic: boolean,\n  ) {\n    const publicMethod: $FlowSubtype<N.ClassMethod> = member;\n    const privateMethod: $FlowSubtype<N.ClassPrivateMethod> = member;\n    const publicProp: $FlowSubtype<N.ClassMethod> = member;\n    const privateProp: $FlowSubtype<N.ClassPrivateMethod> = member;\n\n    const method: typeof publicMethod | typeof privateMethod = publicMethod;\n    const publicMember: typeof publicMethod | typeof publicProp = publicMethod;\n\n    member.static = isStatic;\n\n    if (this.eat(tt.star)) {\n      // a generator\n      method.kind = \"method\";\n      this.parseClassElementName(method);\n\n      if (method.key.type === \"PrivateName\") {\n        // Private generator method\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(publicMethod.key.start, Errors.ConstructorIsGenerator);\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        true,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n\n      return;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parseClassElementName(member);\n    const isPrivate = key.type === \"PrivateName\";\n    // Check the key is not a computed expression or string literal.\n    const isSimple = key.type === \"Identifier\";\n    const maybeQuestionTokenStart = this.state.start;\n\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      // a normal method\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        // TypeScript allows multiple overloaded constructor declarations.\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(key.start, Errors.DuplicateConstructor);\n        }\n        state.hadConstructor = true;\n        allowsDirectSuper = state.constructorAllowsSuper;\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        false,\n        false,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (\n      isSimple &&\n      key.name === \"async\" &&\n      !containsEsc &&\n      !this.isLineTerminator()\n    ) {\n      // an async method\n      const isGenerator = this.eat(tt.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStart);\n      }\n\n      method.kind = \"method\";\n      // The so-called parsed name would have been \"async\": get the real name.\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (method.key.type === \"PrivateName\") {\n        // private async method\n        this.pushClassPrivateMethod(\n          classBody,\n          privateMethod,\n          isGenerator,\n          true,\n        );\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, Errors.ConstructorIsAsync);\n        }\n\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          isGenerator,\n          true,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n    } else if (\n      isSimple &&\n      (key.name === \"get\" || key.name === \"set\") &&\n      !containsEsc &&\n      !(this.match(tt.star) && this.isLineTerminator())\n    ) {\n      // `get\\n*` is an uninitialized property named 'get' followed by a generator.\n      // a getter or setter\n      method.kind = key.name;\n      // The so-called parsed name would have been \"get/set\": get the real name.\n      this.parseClassElementName(publicMethod);\n\n      if (method.key.type === \"PrivateName\") {\n        // private getter/setter\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, Errors.ConstructorIsAccessor);\n        }\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          false,\n          false,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (this.isLineTerminator()) {\n      // an uninitialized class property (due to ASI, since we don't otherwise recognize the next token)\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  // https://tc39.es/proposal-class-fields/#prod-ClassElementName\n  parseClassElementName(member: N.ClassMember): N.Expression | N.Identifier {\n    const key = this.parsePropertyName(member, /* isPrivateNameAllowed */ true);\n\n    if (\n      !member.computed &&\n      member.static &&\n      ((key: $FlowSubtype<N.Identifier>).name === \"prototype\" ||\n        (key: $FlowSubtype<N.StringLiteral>).value === \"prototype\")\n    ) {\n      this.raise(key.start, Errors.StaticPrototype);\n    }\n\n    if (key.type === \"PrivateName\" && key.id.name === \"constructor\") {\n      this.raise(key.start, Errors.ConstructorClassPrivateField);\n    }\n\n    return key;\n  }\n\n  parseClassStaticBlock(\n    classBody: N.ClassBody,\n    member: N.StaticBlock & { decorators?: Array<N.Decorator> },\n    state: N.ParseClassMemberState,\n  ) {\n    this.expectPlugin(\"classStaticBlock\", member.start);\n    // Start a new lexical scope\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    // Start a new scope with regard to loop labels\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    // ClassStaticBlockStatementList:\n    //   StatementList[~Yield, ~Await, ~Return] opt\n    this.prodParam.enter(PARAM);\n    const body = (member.body = []);\n    this.parseBlockOrModuleBlockBody(body, undefined, false, tt.braceR);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode<N.StaticBlock>(member, \"StaticBlock\"));\n    if (state.hadStaticBlock) {\n      this.raise(member.start, Errors.DuplicateStaticBlock);\n    }\n    if (member.decorators?.length) {\n      this.raise(member.start, Errors.DecoratorStaticBlock);\n    }\n    state.hadStaticBlock = true;\n  }\n\n  pushClassProperty(classBody: N.ClassBody, prop: N.ClassProperty) {\n    if (\n      !prop.computed &&\n      (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")\n    ) {\n      // Non-computed field, which is either an identifier named \"constructor\"\n      // or a string literal named \"constructor\"\n      this.raise(prop.key.start, Errors.ConstructorClassField);\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(\n    classBody: N.ClassBody,\n    prop: N.ClassPrivateProperty,\n  ) {\n    this.expectPlugin(\"classPrivateProperties\", prop.key.start);\n\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n\n    this.classScope.declarePrivateName(\n      node.key.id.name,\n      CLASS_ELEMENT_OTHER,\n      node.key.start,\n    );\n  }\n\n  pushClassMethod(\n    classBody: N.ClassBody,\n    method: N.ClassMethod,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowsDirectSuper: boolean,\n  ): void {\n    classBody.body.push(\n      this.parseMethod(\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n        \"ClassMethod\",\n        true,\n      ),\n    );\n  }\n\n  pushClassPrivateMethod(\n    classBody: N.ClassBody,\n    method: N.ClassPrivateMethod,\n    isGenerator: boolean,\n    isAsync: boolean,\n  ): void {\n    this.expectPlugin(\"classPrivateMethods\", method.key.start);\n\n    const node = this.parseMethod(\n      method,\n      isGenerator,\n      isAsync,\n      /* isConstructor */ false,\n      false,\n      \"ClassPrivateMethod\",\n      true,\n    );\n    classBody.body.push(node);\n\n    const kind =\n      node.kind === \"get\"\n        ? node.static\n          ? CLASS_ELEMENT_STATIC_GETTER\n          : CLASS_ELEMENT_INSTANCE_GETTER\n        : node.kind === \"set\"\n        ? node.static\n          ? CLASS_ELEMENT_STATIC_SETTER\n          : CLASS_ELEMENT_INSTANCE_SETTER\n        : CLASS_ELEMENT_OTHER;\n    this.classScope.declarePrivateName(node.key.id.name, kind, node.key.start);\n  }\n\n  // Overridden in typescript.js\n  parsePostMemberNameModifiers(\n    // eslint-disable-next-line no-unused-vars\n    methodOrProp: N.ClassMethod | N.ClassProperty,\n  ): void {}\n\n  parseClassPrivateProperty(\n    node: N.ClassPrivateProperty,\n  ): N.ClassPrivateProperty {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.prodParam.enter(PARAM);\n\n    node.value = this.eat(tt.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.semicolon();\n    this.prodParam.exit();\n\n    this.scope.exit();\n\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n    if (!node.typeAnnotation) {\n      this.expectPlugin(\"classProperties\");\n    }\n\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.prodParam.enter(PARAM);\n\n    if (this.match(tt.eq)) {\n      this.expectPlugin(\"classProperties\");\n      this.next();\n      node.value = this.parseMaybeAssignAllowIn();\n    } else {\n      node.value = null;\n    }\n    this.semicolon();\n\n    this.prodParam.exit();\n    this.scope.exit();\n\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseClassId(\n    node: N.Class,\n    isStatement: boolean,\n    optionalId: ?boolean,\n    bindingType: BindingTypes = BIND_CLASS,\n  ): void {\n    if (this.match(tt.name)) {\n      node.id = this.parseIdentifier();\n      if (isStatement) {\n        this.checkLVal(node.id, bindingType, undefined, \"class name\");\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        this.unexpected(null, Errors.MissingClassName);\n      }\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassHeritage\n  parseClassSuper(node: N.Class): void {\n    node.superClass = this.eat(tt._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  // Parses module export declaration.\n  // https://tc39.es/ecma262/#prod-ExportDeclaration\n\n  parseExport(node: N.Node): N.AnyExport {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(tt.comma);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace =\n      hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace =\n      parseAfterDefault && (!hasNamespace || this.eat(tt.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node, true);\n\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (\n      (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers) ||\n      (hasNamespace && parseAfterNamespace && !hasSpecifiers)\n    ) {\n      throw this.unexpected(null, tt.braceL);\n    }\n\n    let hasDeclaration;\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(node, true, false, !!node.source);\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(tt._default)) {\n      // export default ...\n      node.declaration = this.parseExportDefaultExpression();\n      this.checkExport(node, true, true);\n\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, tt.braceL);\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  eatExportStar(node: N.Node): boolean {\n    return this.eat(tt.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node: N.Node): boolean {\n    if (this.isExportDefaultSpecifier()) {\n      // export defaultObj ...\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node: N.Node): boolean {\n    if (this.isContextual(\"as\")) {\n      if (!node.specifiers) node.specifiers = [];\n\n      const specifier = this.startNodeAt(\n        this.state.lastTokStart,\n        this.state.lastTokStartLoc,\n      );\n\n      this.next();\n\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(\n        this.finishNode(specifier, \"ExportNamespaceSpecifier\"),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node: N.Node): boolean {\n    if (this.match(tt.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      node.specifiers.push(...this.parseExportSpecifiers());\n\n      node.source = null;\n      node.declaration = null;\n\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportDeclaration(node: N.Node): boolean {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n    return false;\n  }\n\n  isAsyncFunction(): boolean {\n    if (!this.isContextual(\"async\")) return false;\n    const next = this.nextTokenStart();\n    return (\n      !lineBreak.test(this.input.slice(this.state.pos, next)) &&\n      this.isUnparsedContextual(next, \"function\")\n    );\n  }\n\n  parseExportDefaultExpression(): N.Expression | N.Declaration {\n    const expr = this.startNode();\n\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(tt._function) || isAsync) {\n      this.next();\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(\n        expr,\n        FUNC_STATEMENT | FUNC_NULLABLE_ID,\n        isAsync,\n      );\n    } else if (this.match(tt._class)) {\n      return this.parseClass(expr, true, true);\n    } else if (this.match(tt.at)) {\n      if (\n        this.hasPlugin(\"decorators\") &&\n        this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")\n      ) {\n        this.raise(this.state.start, Errors.DecoratorBeforeExport);\n      }\n      this.parseDecorators(false);\n      return this.parseClass(expr, true, true);\n    } else if (this.match(tt._const) || this.match(tt._var) || this.isLet()) {\n      throw this.raise(this.state.start, Errors.UnsupportedDefaultExport);\n    } else {\n      const res = this.parseMaybeAssignAllowIn();\n      this.semicolon();\n      return res;\n    }\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  parseExportDeclaration(node: N.ExportNamedDeclaration): ?N.Declaration {\n    return this.parseStatement(null);\n  }\n\n  isExportDefaultSpecifier(): boolean {\n    if (this.match(tt.name)) {\n      const value = this.state.value;\n      if ((value === \"async\" && !this.state.containsEsc) || value === \"let\") {\n        return false;\n      }\n      if (\n        (value === \"type\" || value === \"interface\") &&\n        !this.state.containsEsc\n      ) {\n        const l = this.lookahead();\n        // If we see any variable name other than `from` after `type` keyword,\n        // we consider it as flow/typescript type exports\n        // note that this approach may fail on some pedantic cases\n        // export type from = number\n        if (\n          (l.type === tt.name && l.value !== \"from\") ||\n          l.type === tt.braceL\n        ) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(tt._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n    if (\n      this.input.charCodeAt(next) === charCodes.comma ||\n      (this.match(tt.name) && hasFrom)\n    ) {\n      return true;\n    }\n    // lookahead again when `export default from` is seen\n    if (this.match(tt._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(\n        this.nextTokenStartSince(next + 4),\n      );\n      return (\n        nextAfterFrom === charCodes.quotationMark ||\n        nextAfterFrom === charCodes.apostrophe\n      );\n    }\n    return false;\n  }\n\n  parseExportFrom(node: N.ExportNamedDeclaration, expect?: boolean): void {\n    if (this.eatContextual(\"from\")) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n    } else {\n      if (expect) {\n        this.unexpected();\n      } else {\n        node.source = null;\n      }\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration(): boolean {\n    if (this.match(tt.at)) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.unexpected(this.state.start, Errors.DecoratorBeforeExport);\n        } else {\n          return true;\n        }\n      }\n    }\n\n    return (\n      this.state.type.keyword === \"var\" ||\n      this.state.type.keyword === \"const\" ||\n      this.state.type.keyword === \"function\" ||\n      this.state.type.keyword === \"class\" ||\n      this.isLet() ||\n      this.isAsyncFunction()\n    );\n  }\n\n  checkExport(\n    node: N.ExportNamedDeclaration,\n    checkNames?: boolean,\n    isDefault?: boolean,\n    isFrom?: boolean,\n  ): void {\n    if (checkNames) {\n      // Check for duplicate exports\n      if (isDefault) {\n        // Default exports\n        this.checkDuplicateExports(node, \"default\");\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          const declaration = ((node: any): N.ExportDefaultDeclaration)\n            .declaration;\n          if (\n            declaration.type === \"Identifier\" &&\n            declaration.name === \"from\" &&\n            declaration.end - declaration.start === 4 && // does not contain escape\n            !declaration.extra?.parenthesized\n          ) {\n            this.raise(declaration.start, Errors.ExportDefaultFromAsIdentifier);\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        // Named exports\n        for (const specifier of node.specifiers) {\n          const { exported } = specifier;\n          const exportedName =\n            exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportedName);\n          // $FlowIgnore\n          if (!isFrom && specifier.local) {\n            const { local } = specifier;\n            if (local.type === \"StringLiteral\") {\n              this.raise(\n                specifier.start,\n                Errors.ExportBindingIsString,\n                local.extra.raw,\n                exportedName,\n              );\n            } else {\n              // check for keywords used as local names\n              this.checkReservedWord(local.name, local.start, true, false);\n              // check if export is defined\n              // $FlowIgnore\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        // Exported declarations\n        if (\n          node.declaration.type === \"FunctionDeclaration\" ||\n          node.declaration.type === \"ClassDeclaration\"\n        ) {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators = this.state.decoratorStack[\n      this.state.decoratorStack.length - 1\n    ];\n    // If node.declaration is a class, it will take all decorators in the current context.\n    // Thus we should throw if we see non-empty decorators here.\n    if (currentContextDecorators.length) {\n      throw this.raise(node.start, Errors.UnsupportedDecoratorExport);\n    }\n  }\n\n  checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(\n    node:\n      | N.Identifier\n      | N.StringLiteral\n      | N.ExportNamedDeclaration\n      | N.ExportSpecifier\n      | N.ExportDefaultSpecifier,\n    name: string,\n  ): void {\n    if (this.state.exportedIdentifiers.indexOf(name) > -1) {\n      this.raise(\n        node.start,\n        name === \"default\"\n          ? Errors.DuplicateDefaultExport\n          : Errors.DuplicateExport,\n        name,\n      );\n    }\n    this.state.exportedIdentifiers.push(name);\n  }\n\n  // Parses a comma-separated list of module exports.\n\n  parseExportSpecifiers(): Array<N.ExportSpecifier> {\n    const nodes = [];\n    let first = true;\n\n    // export { x, y as z } [from '...']\n    this.expect(tt.braceL);\n\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      node.exported = this.eatContextual(\"as\")\n        ? this.parseModuleExportName()\n        : node.local.__clone();\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n\n    return nodes;\n  }\n\n  // https://tc39.es/ecma262/#prod-ModuleExportName\n  parseModuleExportName(): N.StringLiteral | N.Identifier {\n    if (this.match(tt.string)) {\n      this.expectPlugin(\"moduleStringNames\");\n      const result = this.parseLiteral<N.StringLiteral>(\n        this.state.value,\n        \"StringLiteral\",\n      );\n      const surrogate = result.value.match(loneSurrogate);\n      if (surrogate) {\n        this.raise(\n          result.start,\n          Errors.ModuleExportNameHasLoneSurrogate,\n          surrogate[0].charCodeAt(0).toString(16),\n        );\n      }\n      return result;\n    }\n    return this.parseIdentifier(true);\n  }\n\n  // Parses import declaration.\n  // https://tc39.es/ecma262/#prod-ImportDeclaration\n\n  parseImport(node: N.Node): N.AnyImport {\n    // import '...'\n    node.specifiers = [];\n    if (!this.match(tt.string)) {\n      // check if we have a default import like\n      // import React from \"react\";\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      /* we are checking if we do not have a default import, then it is obvious that we need named imports\n       * import { get } from \"axios\";\n       * but if we do have a default import\n       * we need to check if we have a comma after that and\n       * that is where this `|| this.eat` condition comes into play\n       */\n      const parseNext = !hasDefault || this.eat(tt.comma);\n      // if we do have to parse the next set of specifiers, we first check for star imports\n      // import React, * from \"react\";\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      // now we check if we need to parse the next imports\n      // but only if they are not importing * (everything)\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(\"from\");\n    }\n    node.source = this.parseImportSource();\n    // https://github.com/tc39/proposal-import-assertions\n    // parse module import assertions if the next token is `assert` or ignore\n    // and finish the ImportDeclaration node.\n    const assertions = this.maybeParseImportAssertions();\n    if (assertions) {\n      node.assertions = assertions;\n    }\n    // todo(Babel 8): remove module attributes support\n    else {\n      const attributes = this.maybeParseModuleAttributes();\n      if (attributes) {\n        node.attributes = attributes;\n      }\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource(): N.StringLiteral {\n    if (!this.match(tt.string)) this.unexpected();\n    return this.parseExprAtom();\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  shouldParseDefaultImport(node: N.ImportDeclaration): boolean {\n    return this.match(tt.name);\n  }\n\n  parseImportSpecifierLocal(\n    node: N.ImportDeclaration,\n    specifier: N.Node,\n    type: string,\n    contextDescription: string,\n  ): void {\n    specifier.local = this.parseIdentifier();\n    this.checkLVal(\n      specifier.local,\n      BIND_LEXICAL,\n      undefined,\n      contextDescription,\n    );\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  parseAssertEntries() {\n    this.expectPlugin(\"importAssertions\");\n\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(tt.braceR)) {\n        break;\n      }\n\n      const node = this.startNode();\n\n      // parse AssertionKey : IdentifierName, StringLiteral\n      let assertionKeyNode;\n      if (this.match(tt.string)) {\n        assertionKeyNode = this.parseLiteral(this.state.value, \"StringLiteral\");\n      } else {\n        assertionKeyNode = this.parseIdentifier(true);\n      }\n      this.next();\n      node.key = assertionKeyNode;\n\n      // for now we are only allowing `type` as the only allowed module attribute\n      if (node.key.name !== \"type\") {\n        this.raise(\n          node.key.start,\n          Errors.ModuleAttributeDifferentFromType,\n          node.key.name,\n        );\n      }\n      // check if we already have an entry for an attribute\n      // if a duplicate entry is found, throw an error\n      // for now this logic will come into play only when someone declares `type` twice\n      if (attrNames.has(node.key.name)) {\n        this.raise(\n          node.key.start,\n          Errors.ModuleAttributesWithDuplicateKeys,\n          node.key.name,\n        );\n      }\n      attrNames.add(node.key.name);\n\n      if (!this.match(tt.string)) {\n        throw this.unexpected(\n          this.state.start,\n          Errors.ModuleAttributeInvalidValue,\n        );\n      }\n      node.value = this.parseLiteral(this.state.value, \"StringLiteral\");\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(tt.comma));\n\n    return attrs;\n  }\n\n  /**\n   * parse module attributes\n   * @deprecated It will be removed in Babel 8\n   * @returns\n   * @memberof StatementParser\n   */\n  maybeParseModuleAttributes() {\n    if (this.match(tt._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n    const attrs = [];\n    const attributes = new Set();\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(\n          node.key.start,\n          Errors.ModuleAttributeDifferentFromType,\n          node.key.name,\n        );\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(\n          node.key.start,\n          Errors.ModuleAttributesWithDuplicateKeys,\n          node.key.name,\n        );\n      }\n      attributes.add(node.key.name);\n      this.expect(tt.colon);\n      if (!this.match(tt.string)) {\n        throw this.unexpected(\n          this.state.start,\n          Errors.ModuleAttributeInvalidValue,\n        );\n      }\n      node.value = this.parseLiteral(this.state.value, \"StringLiteral\");\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(tt.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    if (\n      this.match(tt.name) &&\n      this.state.value === \"assert\" &&\n      !this.hasPrecedingLineBreak()\n    ) {\n      this.expectPlugin(\"importAssertions\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n\n    this.eat(tt.braceL);\n    const attrs = this.parseAssertEntries();\n    this.eat(tt.braceR);\n\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node: N.ImportDeclaration): boolean {\n    if (this.shouldParseDefaultImport(node)) {\n      // import defaultObj, { x, y as z } from '...'\n      this.parseImportSpecifierLocal(\n        node,\n        this.startNode(),\n        \"ImportDefaultSpecifier\",\n        \"default import specifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node: N.ImportDeclaration): boolean {\n    if (this.match(tt.star)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n\n      this.parseImportSpecifierLocal(\n        node,\n        specifier,\n        \"ImportNamespaceSpecifier\",\n        \"import namespace specifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node: N.ImportDeclaration) {\n    let first = true;\n    this.expect(tt.braceL);\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        // Detect an attempt to deep destructure\n        if (this.eat(tt.colon)) {\n          throw this.raise(this.state.start, Errors.DestructureNamedImport);\n        }\n\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n\n      this.parseImportSpecifier(node);\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ImportSpecifier\n  parseImportSpecifier(node: N.ImportDeclaration): void {\n    const specifier = this.startNode();\n    specifier.imported = this.parseModuleExportName();\n    if (this.eatContextual(\"as\")) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const { imported } = specifier;\n      if (imported.type === \"StringLiteral\") {\n        throw this.raise(\n          specifier.start,\n          Errors.ImportBindingIsString,\n          imported.value,\n        );\n      }\n      this.checkReservedWord(imported.name, specifier.start, true, true);\n      specifier.local = imported.__clone();\n    }\n    this.checkLVal(\n      specifier.local,\n      BIND_LEXICAL,\n      undefined,\n      \"import specifier\",\n    );\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n}\n","// @flow\n\nimport {\n  CLASS_ELEMENT_KIND_ACCESSOR,\n  CLASS_ELEMENT_FLAG_STATIC,\n  type ClassElementTypes,\n} from \"./scopeflags\";\nimport { Errors } from \"../parser/error\";\n\nexport class ClassScope {\n  // A list of private named declared in the current class\n  privateNames: Set<string> = new Set();\n\n  // A list of private getters of setters without their counterpart\n  loneAccessors: Map<string, ClassElementTypes> = new Map();\n\n  // A list of private names used before being defined, mapping to\n  // their position.\n  undefinedPrivateNames: Map<string, number> = new Map();\n}\n\ntype raiseFunction = (number, string, ...any) => void;\n\nexport default class ClassScopeHandler {\n  stack: Array<ClassScope> = [];\n  raise: raiseFunction;\n  undefinedPrivateNames: Map<string, number> = new Map();\n\n  constructor(raise: raiseFunction) {\n    this.raise = raise;\n  }\n\n  current(): ClassScope {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n\n    // Migrate the usage of not yet defined private names to the outer\n    // class scope, or raise an error if we reached the top-level scope.\n\n    const current = this.current();\n\n    // Array.from is needed because this is compiled to an array-like for loop\n    for (const [name, pos] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, pos);\n        }\n      } else {\n        this.raise(pos, Errors.InvalidPrivateFieldResolution, name);\n      }\n    }\n  }\n\n  declarePrivateName(\n    name: string,\n    elementType: ClassElementTypes,\n    pos: number,\n  ) {\n    const classScope = this.current();\n    let redefined = classScope.privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && classScope.loneAccessors.get(name);\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n\n        // The private name can be duplicated only if it is used by\n        // two accessors with different kind (get and set), and if\n        // they have the same placement (static or not).\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n\n        if (!redefined) classScope.loneAccessors.delete(name);\n      } else if (!redefined) {\n        classScope.loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.raise(pos, Errors.PrivateNameRedeclaration, name);\n    }\n\n    classScope.privateNames.add(name);\n    classScope.undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name: string, pos: number) {\n    let classScope;\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, pos);\n    } else {\n      // top-level\n      this.raise(pos, Errors.InvalidPrivateFieldResolution, name);\n    }\n  }\n}\n","// @flow\n\nimport type { Options } from \"../options\";\nimport type { File /*::, JSXOpeningElement */ } from \"../types\";\nimport type { PluginList } from \"../plugin-utils\";\nimport { getOptions } from \"../options\";\nimport StatementParser from \"./statement\";\nimport { SCOPE_PROGRAM } from \"../util/scopeflags\";\nimport ScopeHandler from \"../util/scope\";\nimport ClassScopeHandler from \"../util/class-scope\";\nimport ProductionParameterHandler, {\n  PARAM_AWAIT,\n  PARAM,\n} from \"../util/production-parameter\";\n\nexport type PluginsMap = Map<string, { [string]: any }>;\n\nexport default class Parser extends StatementParser {\n  // Forward-declaration so typescript plugin can override jsx plugin\n  /*::\n  +jsxParseOpeningElementAfterName: (\n    node: JSXOpeningElement,\n  ) => JSXOpeningElement;\n  */\n\n  constructor(options: ?Options, input: string) {\n    options = getOptions(options);\n    super(options, input);\n\n    const ScopeHandler = this.getScopeHandler();\n\n    this.options = options;\n    this.inModule = this.options.sourceType === \"module\";\n    this.scope = new ScopeHandler(this.raise.bind(this), this.inModule);\n    this.prodParam = new ProductionParameterHandler();\n    this.classScope = new ClassScopeHandler(this.raise.bind(this));\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  // This can be overwritten, for example, by the TypeScript plugin.\n  getScopeHandler(): Class<ScopeHandler<*>> {\n    return ScopeHandler;\n  }\n\n  parse(): File {\n    let paramFlags = PARAM;\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n}\n\nfunction pluginsMap(plugins: PluginList): PluginsMap {\n  const pluginMap: PluginsMap = new Map();\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n  return pluginMap;\n}\n","class WalkerBase {constructor() { WalkerBase.prototype.__init.call(this);WalkerBase.prototype.__init2.call(this);WalkerBase.prototype.__init3.call(this);WalkerBase.prototype.__init4.call(this); }\n\t __init() {this.should_skip = false;}\n\t __init2() {this.should_remove = false;}\n\t __init3() {this.replacement = null;}\n\n\t __init4() {this.context = {\n\t\tskip: () => (this.should_skip = true),\n\t\tremove: () => (this.should_remove = true),\n\t\treplace: (node) => (this.replacement = node)\n\t};}\n\n\t replace(parent, prop, index, node) {\n\t\tif (parent) {\n\t\t\tif (index !== null) {\n\t\t\t\tparent[prop][index] = node;\n\t\t\t} else {\n\t\t\t\tparent[prop] = node;\n\t\t\t}\n\t\t}\n\t}\n\n\t remove(parent, prop, index) {\n\t\tif (parent) {\n\t\t\tif (index !== null) {\n\t\t\t\tparent[prop].splice(index, 1);\n\t\t\t} else {\n\t\t\t\tdelete parent[prop];\n\t\t\t}\n\t\t}\n\t}\n}\n\nclass SyncWalkerClass extends WalkerBase {\n\t\n\t\n\n\tconstructor(walker) {\n\t\tsuper();\n\t\tthis.enter = walker.enter;\n\t\tthis.leave = walker.leave;\n\t}\n\n\t visit(\n\t\tnode,\n\t\tparent,\n\t\tenter,\n\t\tleave,\n\t\tprop,\n\t\tindex\n\t) {\n\t\tif (node) {\n\t\t\tif (enter) {\n\t\t\t\tconst _should_skip = this.should_skip;\n\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\tthis.should_skip = false;\n\t\t\t\tthis.should_remove = false;\n\t\t\t\tthis.replacement = null;\n\n\t\t\t\tenter.call(this.context, node, parent, prop, index);\n\n\t\t\t\tif (this.replacement) {\n\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t}\n\n\t\t\t\tif (this.should_remove) {\n\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t}\n\n\t\t\t\tconst skipped = this.should_skip;\n\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\tthis.should_skip = _should_skip;\n\t\t\t\tthis.should_remove = _should_remove;\n\t\t\t\tthis.replacement = _replacement;\n\n\t\t\t\tif (skipped) return node;\n\t\t\t\tif (removed) return null;\n\t\t\t}\n\n\t\t\tfor (const key in node) {\n\t\t\t\tconst value = (node )[key];\n\n\t\t\t\tif (typeof value !== \"object\") {\n\t\t\t\t\tcontinue;\n\t\t\t\t} else if (Array.isArray(value)) {\n\t\t\t\t\tfor (let i = 0; i < value.length; i += 1) {\n\t\t\t\t\t\tif (value[i] !== null && typeof value[i].type === 'string') {\n\t\t\t\t\t\t\tif (!this.visit(value[i], node, enter, leave, key, i)) {\n\t\t\t\t\t\t\t\t// removed\n\t\t\t\t\t\t\t\ti--;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (value !== null && typeof value.type === \"string\") {\n\t\t\t\t\tthis.visit(value, node, enter, leave, key, null);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (leave) {\n\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\tthis.replacement = null;\n\t\t\t\tthis.should_remove = false;\n\n\t\t\t\tleave.call(this.context, node, parent, prop, index);\n\n\t\t\t\tif (this.replacement) {\n\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t}\n\n\t\t\t\tif (this.should_remove) {\n\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t}\n\n\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\tthis.replacement = _replacement;\n\t\t\t\tthis.should_remove = _should_remove;\n\n\t\t\t\tif (removed) return null;\n\t\t\t}\n\t\t}\n\n\t\treturn node;\n\t}\n}\n\nclass AsyncWalkerClass extends WalkerBase {\n\t\n\t\n\n\tconstructor(walker) {\n\t\tsuper();\n\t\tthis.enter = walker.enter;\n\t\tthis.leave = walker.leave;\n\t}\n\n\t async visit(\n\t\tnode,\n\t\tparent,\n\t\tenter,\n\t\tleave,\n\t\tprop,\n\t\tindex\n\t) {\n\t\tif (node) {\n\t\t\tif (enter) {\n\t\t\t\tconst _should_skip = this.should_skip;\n\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\tthis.should_skip = false;\n\t\t\t\tthis.should_remove = false;\n\t\t\t\tthis.replacement = null;\n\n\t\t\t\tawait enter.call(this.context, node, parent, prop, index);\n\n\t\t\t\tif (this.replacement) {\n\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t}\n\n\t\t\t\tif (this.should_remove) {\n\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t}\n\n\t\t\t\tconst skipped = this.should_skip;\n\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\tthis.should_skip = _should_skip;\n\t\t\t\tthis.should_remove = _should_remove;\n\t\t\t\tthis.replacement = _replacement;\n\n\t\t\t\tif (skipped) return node;\n\t\t\t\tif (removed) return null;\n\t\t\t}\n\n\t\t\tfor (const key in node) {\n\t\t\t\tconst value = (node )[key];\n\n\t\t\t\tif (typeof value !== \"object\") {\n\t\t\t\t\tcontinue;\n\t\t\t\t} else if (Array.isArray(value)) {\n\t\t\t\t\tfor (let i = 0; i < value.length; i += 1) {\n\t\t\t\t\t\tif (value[i] !== null && typeof value[i].type === 'string') {\n\t\t\t\t\t\t\tif (!(await this.visit(value[i], node, enter, leave, key, i))) {\n\t\t\t\t\t\t\t\t// removed\n\t\t\t\t\t\t\t\ti--;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (value !== null && typeof value.type === \"string\") {\n\t\t\t\t\tawait this.visit(value, node, enter, leave, key, null);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (leave) {\n\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\tthis.replacement = null;\n\t\t\t\tthis.should_remove = false;\n\n\t\t\t\tawait leave.call(this.context, node, parent, prop, index);\n\n\t\t\t\tif (this.replacement) {\n\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t}\n\n\t\t\t\tif (this.should_remove) {\n\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t}\n\n\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\tthis.replacement = _replacement;\n\t\t\t\tthis.should_remove = _should_remove;\n\n\t\t\t\tif (removed) return null;\n\t\t\t}\n\t\t}\n\n\t\treturn node;\n\t}\n}\n\nfunction walk(ast, walker) {\n\tconst instance = new SyncWalkerClass(walker);\n\treturn instance.visit(ast, null, walker.enter, walker.leave);\n}\n\nasync function asyncWalk(\n\tast,\n\twalker\n) {\n\tconst instance = new AsyncWalkerClass(walker);\n\treturn await instance.visit(ast, null, walker.enter, walker.leave);\n}\n\nexport { walk, asyncWalk };\n","import { isString, hyphenate, extend, isObject, isArray, NO, makeMap, isSymbol, NOOP, PatchFlagNames, isGloballyWhitelisted, babelParserDefaultPlugins, hasOwn, isOn, isReservedProp, toHandlerKey, camelize } from '@vue/shared';\nexport { generateCodeFrame } from '@vue/shared';\nimport { parse } from '@babel/parser';\nimport { walk as walk$1 } from 'estree-walker';\n\nfunction defaultOnError(error) {\r\n    throw error;\r\n}\r\nfunction createCompilerError(code, loc, messages, additionalMessage) {\r\n    const msg = (process.env.NODE_ENV !== 'production') || !true\r\n        ? (messages || errorMessages)[code] + (additionalMessage || ``)\r\n        : code;\r\n    const error = new SyntaxError(String(msg));\r\n    error.code = code;\r\n    error.loc = loc;\r\n    return error;\r\n}\r\nconst errorMessages = {\r\n    // parse errors\r\n    [0 /* ABRUPT_CLOSING_OF_EMPTY_COMMENT */]: 'Illegal comment.',\r\n    [1 /* CDATA_IN_HTML_CONTENT */]: 'CDATA section is allowed only in XML context.',\r\n    [2 /* DUPLICATE_ATTRIBUTE */]: 'Duplicate attribute.',\r\n    [3 /* END_TAG_WITH_ATTRIBUTES */]: 'End tag cannot have attributes.',\r\n    [4 /* END_TAG_WITH_TRAILING_SOLIDUS */]: \"Illegal '/' in tags.\",\r\n    [5 /* EOF_BEFORE_TAG_NAME */]: 'Unexpected EOF in tag.',\r\n    [6 /* EOF_IN_CDATA */]: 'Unexpected EOF in CDATA section.',\r\n    [7 /* EOF_IN_COMMENT */]: 'Unexpected EOF in comment.',\r\n    [8 /* EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT */]: 'Unexpected EOF in script.',\r\n    [9 /* EOF_IN_TAG */]: 'Unexpected EOF in tag.',\r\n    [10 /* INCORRECTLY_CLOSED_COMMENT */]: 'Incorrectly closed comment.',\r\n    [11 /* INCORRECTLY_OPENED_COMMENT */]: 'Incorrectly opened comment.',\r\n    [12 /* INVALID_FIRST_CHARACTER_OF_TAG_NAME */]: \"Illegal tag name. Use '&lt;' to print '<'.\",\r\n    [13 /* MISSING_ATTRIBUTE_VALUE */]: 'Attribute value was expected.',\r\n    [14 /* MISSING_END_TAG_NAME */]: 'End tag name was expected.',\r\n    [15 /* MISSING_WHITESPACE_BETWEEN_ATTRIBUTES */]: 'Whitespace was expected.',\r\n    [16 /* NESTED_COMMENT */]: \"Unexpected '<!--' in comment.\",\r\n    [17 /* UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME */]: 'Attribute name cannot contain U+0022 (\"), U+0027 (\\'), and U+003C (<).',\r\n    [18 /* UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE */]: 'Unquoted attribute value cannot contain U+0022 (\"), U+0027 (\\'), U+003C (<), U+003D (=), and U+0060 (`).',\r\n    [19 /* UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME */]: \"Attribute name cannot start with '='.\",\r\n    [21 /* UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME */]: \"'<?' is allowed only in XML context.\",\r\n    [22 /* UNEXPECTED_SOLIDUS_IN_TAG */]: \"Illegal '/' in tags.\",\r\n    // Vue-specific parse errors\r\n    [23 /* X_INVALID_END_TAG */]: 'Invalid end tag.',\r\n    [24 /* X_MISSING_END_TAG */]: 'Element is missing end tag.',\r\n    [25 /* X_MISSING_INTERPOLATION_END */]: 'Interpolation end sign was not found.',\r\n    [26 /* X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END */]: 'End bracket for dynamic directive argument was not found. ' +\r\n        'Note that dynamic directive argument cannot contain spaces.',\r\n    // transform errors\r\n    [27 /* X_V_IF_NO_EXPRESSION */]: `v-if/v-else-if is missing expression.`,\r\n    [28 /* X_V_IF_SAME_KEY */]: `v-if/else branches must use unique keys.`,\r\n    [29 /* X_V_ELSE_NO_ADJACENT_IF */]: `v-else/v-else-if has no adjacent v-if.`,\r\n    [30 /* X_V_FOR_NO_EXPRESSION */]: `v-for is missing expression.`,\r\n    [31 /* X_V_FOR_MALFORMED_EXPRESSION */]: `v-for has invalid expression.`,\r\n    [32 /* X_V_FOR_TEMPLATE_KEY_PLACEMENT */]: `<template v-for> key should be placed on the <template> tag.`,\r\n    [33 /* X_V_BIND_NO_EXPRESSION */]: `v-bind is missing expression.`,\r\n    [34 /* X_V_ON_NO_EXPRESSION */]: `v-on is missing expression.`,\r\n    [35 /* X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET */]: `Unexpected custom directive on <slot> outlet.`,\r\n    [36 /* X_V_SLOT_MIXED_SLOT_USAGE */]: `Mixed v-slot usage on both the component and nested <template>.` +\r\n        `When there are multiple named slots, all slots should use <template> ` +\r\n        `syntax to avoid scope ambiguity.`,\r\n    [37 /* X_V_SLOT_DUPLICATE_SLOT_NAMES */]: `Duplicate slot names found. `,\r\n    [38 /* X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN */]: `Extraneous children found when component already has explicitly named ` +\r\n        `default slot. These children will be ignored.`,\r\n    [39 /* X_V_SLOT_MISPLACED */]: `v-slot can only be used on components or <template> tags.`,\r\n    [40 /* X_V_MODEL_NO_EXPRESSION */]: `v-model is missing expression.`,\r\n    [41 /* X_V_MODEL_MALFORMED_EXPRESSION */]: `v-model value must be a valid JavaScript member expression.`,\r\n    [42 /* X_V_MODEL_ON_SCOPE_VARIABLE */]: `v-model cannot be used on v-for or v-slot scope variables because they are not writable.`,\r\n    [43 /* X_INVALID_EXPRESSION */]: `Error parsing JavaScript expression: `,\r\n    [44 /* X_KEEP_ALIVE_INVALID_CHILDREN */]: `<KeepAlive> expects exactly one child component.`,\r\n    // generic errors\r\n    [45 /* X_PREFIX_ID_NOT_SUPPORTED */]: `\"prefixIdentifiers\" option is not supported in this build of compiler.`,\r\n    [46 /* X_MODULE_MODE_NOT_SUPPORTED */]: `ES module mode is not supported in this build of compiler.`,\r\n    [47 /* X_CACHE_HANDLER_NOT_SUPPORTED */]: `\"cacheHandlers\" option is only supported when the \"prefixIdentifiers\" option is enabled.`,\r\n    [48 /* X_SCOPE_ID_NOT_SUPPORTED */]: `\"scopeId\" option is only supported in module mode.`\r\n};\n\nconst FRAGMENT = Symbol((process.env.NODE_ENV !== 'production') ? `Fragment` : ``);\r\nconst TELEPORT = Symbol((process.env.NODE_ENV !== 'production') ? `Teleport` : ``);\r\nconst SUSPENSE = Symbol((process.env.NODE_ENV !== 'production') ? `Suspense` : ``);\r\nconst KEEP_ALIVE = Symbol((process.env.NODE_ENV !== 'production') ? `KeepAlive` : ``);\r\nconst BASE_TRANSITION = Symbol((process.env.NODE_ENV !== 'production') ? `BaseTransition` : ``);\r\nconst OPEN_BLOCK = Symbol((process.env.NODE_ENV !== 'production') ? `openBlock` : ``);\r\nconst CREATE_BLOCK = Symbol((process.env.NODE_ENV !== 'production') ? `createBlock` : ``);\r\nconst CREATE_VNODE = Symbol((process.env.NODE_ENV !== 'production') ? `createVNode` : ``);\r\nconst CREATE_COMMENT = Symbol((process.env.NODE_ENV !== 'production') ? `createCommentVNode` : ``);\r\nconst CREATE_TEXT = Symbol((process.env.NODE_ENV !== 'production') ? `createTextVNode` : ``);\r\nconst CREATE_STATIC = Symbol((process.env.NODE_ENV !== 'production') ? `createStaticVNode` : ``);\r\nconst RESOLVE_COMPONENT = Symbol((process.env.NODE_ENV !== 'production') ? `resolveComponent` : ``);\r\nconst RESOLVE_DYNAMIC_COMPONENT = Symbol((process.env.NODE_ENV !== 'production') ? `resolveDynamicComponent` : ``);\r\nconst RESOLVE_DIRECTIVE = Symbol((process.env.NODE_ENV !== 'production') ? `resolveDirective` : ``);\r\nconst WITH_DIRECTIVES = Symbol((process.env.NODE_ENV !== 'production') ? `withDirectives` : ``);\r\nconst RENDER_LIST = Symbol((process.env.NODE_ENV !== 'production') ? `renderList` : ``);\r\nconst RENDER_SLOT = Symbol((process.env.NODE_ENV !== 'production') ? `renderSlot` : ``);\r\nconst CREATE_SLOTS = Symbol((process.env.NODE_ENV !== 'production') ? `createSlots` : ``);\r\nconst TO_DISPLAY_STRING = Symbol((process.env.NODE_ENV !== 'production') ? `toDisplayString` : ``);\r\nconst MERGE_PROPS = Symbol((process.env.NODE_ENV !== 'production') ? `mergeProps` : ``);\r\nconst TO_HANDLERS = Symbol((process.env.NODE_ENV !== 'production') ? `toHandlers` : ``);\r\nconst CAMELIZE = Symbol((process.env.NODE_ENV !== 'production') ? `camelize` : ``);\r\nconst CAPITALIZE = Symbol((process.env.NODE_ENV !== 'production') ? `capitalize` : ``);\r\nconst TO_HANDLER_KEY = Symbol((process.env.NODE_ENV !== 'production') ? `toHandlerKey` : ``);\r\nconst SET_BLOCK_TRACKING = Symbol((process.env.NODE_ENV !== 'production') ? `setBlockTracking` : ``);\r\nconst PUSH_SCOPE_ID = Symbol((process.env.NODE_ENV !== 'production') ? `pushScopeId` : ``);\r\nconst POP_SCOPE_ID = Symbol((process.env.NODE_ENV !== 'production') ? `popScopeId` : ``);\r\nconst WITH_SCOPE_ID = Symbol((process.env.NODE_ENV !== 'production') ? `withScopeId` : ``);\r\nconst WITH_CTX = Symbol((process.env.NODE_ENV !== 'production') ? `withCtx` : ``);\r\n// Name mapping for runtime helpers that need to be imported from 'vue' in\r\n// generated code. Make sure these are correctly exported in the runtime!\r\n// Using `any` here because TS doesn't allow symbols as index type.\r\nconst helperNameMap = {\r\n    [FRAGMENT]: `Fragment`,\r\n    [TELEPORT]: `Teleport`,\r\n    [SUSPENSE]: `Suspense`,\r\n    [KEEP_ALIVE]: `KeepAlive`,\r\n    [BASE_TRANSITION]: `BaseTransition`,\r\n    [OPEN_BLOCK]: `openBlock`,\r\n    [CREATE_BLOCK]: `createBlock`,\r\n    [CREATE_VNODE]: `createVNode`,\r\n    [CREATE_COMMENT]: `createCommentVNode`,\r\n    [CREATE_TEXT]: `createTextVNode`,\r\n    [CREATE_STATIC]: `createStaticVNode`,\r\n    [RESOLVE_COMPONENT]: `resolveComponent`,\r\n    [RESOLVE_DYNAMIC_COMPONENT]: `resolveDynamicComponent`,\r\n    [RESOLVE_DIRECTIVE]: `resolveDirective`,\r\n    [WITH_DIRECTIVES]: `withDirectives`,\r\n    [RENDER_LIST]: `renderList`,\r\n    [RENDER_SLOT]: `renderSlot`,\r\n    [CREATE_SLOTS]: `createSlots`,\r\n    [TO_DISPLAY_STRING]: `toDisplayString`,\r\n    [MERGE_PROPS]: `mergeProps`,\r\n    [TO_HANDLERS]: `toHandlers`,\r\n    [CAMELIZE]: `camelize`,\r\n    [CAPITALIZE]: `capitalize`,\r\n    [TO_HANDLER_KEY]: `toHandlerKey`,\r\n    [SET_BLOCK_TRACKING]: `setBlockTracking`,\r\n    [PUSH_SCOPE_ID]: `pushScopeId`,\r\n    [POP_SCOPE_ID]: `popScopeId`,\r\n    [WITH_SCOPE_ID]: `withScopeId`,\r\n    [WITH_CTX]: `withCtx`\r\n};\r\nfunction registerRuntimeHelpers(helpers) {\r\n    Object.getOwnPropertySymbols(helpers).forEach(s => {\r\n        helperNameMap[s] = helpers[s];\r\n    });\r\n}\n\n// AST Utilities ---------------------------------------------------------------\r\n// Some expressions, e.g. sequence and conditional expressions, are never\r\n// associated with template nodes, so their source locations are just a stub.\r\n// Container types like CompoundExpression also don't need a real location.\r\nconst locStub = {\r\n    source: '',\r\n    start: { line: 1, column: 1, offset: 0 },\r\n    end: { line: 1, column: 1, offset: 0 }\r\n};\r\nfunction createRoot(children, loc = locStub) {\r\n    return {\r\n        type: 0 /* ROOT */,\r\n        children,\r\n        helpers: [],\r\n        components: [],\r\n        directives: [],\r\n        hoists: [],\r\n        imports: [],\r\n        cached: 0,\r\n        temps: 0,\r\n        codegenNode: undefined,\r\n        loc\r\n    };\r\n}\r\nfunction createVNodeCall(context, tag, props, children, patchFlag, dynamicProps, directives, isBlock = false, disableTracking = false, loc = locStub) {\r\n    if (context) {\r\n        if (isBlock) {\r\n            context.helper(OPEN_BLOCK);\r\n            context.helper(CREATE_BLOCK);\r\n        }\r\n        else {\r\n            context.helper(CREATE_VNODE);\r\n        }\r\n        if (directives) {\r\n            context.helper(WITH_DIRECTIVES);\r\n        }\r\n    }\r\n    return {\r\n        type: 13 /* VNODE_CALL */,\r\n        tag,\r\n        props,\r\n        children,\r\n        patchFlag,\r\n        dynamicProps,\r\n        directives,\r\n        isBlock,\r\n        disableTracking,\r\n        loc\r\n    };\r\n}\r\nfunction createArrayExpression(elements, loc = locStub) {\r\n    return {\r\n        type: 17 /* JS_ARRAY_EXPRESSION */,\r\n        loc,\r\n        elements\r\n    };\r\n}\r\nfunction createObjectExpression(properties, loc = locStub) {\r\n    return {\r\n        type: 15 /* JS_OBJECT_EXPRESSION */,\r\n        loc,\r\n        properties\r\n    };\r\n}\r\nfunction createObjectProperty(key, value) {\r\n    return {\r\n        type: 16 /* JS_PROPERTY */,\r\n        loc: locStub,\r\n        key: isString(key) ? createSimpleExpression(key, true) : key,\r\n        value\r\n    };\r\n}\r\nfunction createSimpleExpression(content, isStatic, loc = locStub, isConstant = false) {\r\n    return {\r\n        type: 4 /* SIMPLE_EXPRESSION */,\r\n        loc,\r\n        isConstant,\r\n        content,\r\n        isStatic\r\n    };\r\n}\r\nfunction createInterpolation(content, loc) {\r\n    return {\r\n        type: 5 /* INTERPOLATION */,\r\n        loc,\r\n        content: isString(content)\r\n            ? createSimpleExpression(content, false, loc)\r\n            : content\r\n    };\r\n}\r\nfunction createCompoundExpression(children, loc = locStub) {\r\n    return {\r\n        type: 8 /* COMPOUND_EXPRESSION */,\r\n        loc,\r\n        children\r\n    };\r\n}\r\nfunction createCallExpression(callee, args = [], loc = locStub) {\r\n    return {\r\n        type: 14 /* JS_CALL_EXPRESSION */,\r\n        loc,\r\n        callee,\r\n        arguments: args\r\n    };\r\n}\r\nfunction createFunctionExpression(params, returns = undefined, newline = false, isSlot = false, loc = locStub) {\r\n    return {\r\n        type: 18 /* JS_FUNCTION_EXPRESSION */,\r\n        params,\r\n        returns,\r\n        newline,\r\n        isSlot,\r\n        loc\r\n    };\r\n}\r\nfunction createConditionalExpression(test, consequent, alternate, newline = true) {\r\n    return {\r\n        type: 19 /* JS_CONDITIONAL_EXPRESSION */,\r\n        test,\r\n        consequent,\r\n        alternate,\r\n        newline,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createCacheExpression(index, value, isVNode = false) {\r\n    return {\r\n        type: 20 /* JS_CACHE_EXPRESSION */,\r\n        index,\r\n        value,\r\n        isVNode,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createBlockStatement(body) {\r\n    return {\r\n        type: 21 /* JS_BLOCK_STATEMENT */,\r\n        body,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createTemplateLiteral(elements) {\r\n    return {\r\n        type: 22 /* JS_TEMPLATE_LITERAL */,\r\n        elements,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createIfStatement(test, consequent, alternate) {\r\n    return {\r\n        type: 23 /* JS_IF_STATEMENT */,\r\n        test,\r\n        consequent,\r\n        alternate,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createAssignmentExpression(left, right) {\r\n    return {\r\n        type: 24 /* JS_ASSIGNMENT_EXPRESSION */,\r\n        left,\r\n        right,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createSequenceExpression(expressions) {\r\n    return {\r\n        type: 25 /* JS_SEQUENCE_EXPRESSION */,\r\n        expressions,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createReturnStatement(returns) {\r\n    return {\r\n        type: 26 /* JS_RETURN_STATEMENT */,\r\n        returns,\r\n        loc: locStub\r\n    };\r\n}\n\nconst isStaticExp = (p) => p.type === 4 /* SIMPLE_EXPRESSION */ && p.isStatic;\r\nconst isBuiltInType = (tag, expected) => tag === expected || tag === hyphenate(expected);\r\nfunction isCoreComponent(tag) {\r\n    if (isBuiltInType(tag, 'Teleport')) {\r\n        return TELEPORT;\r\n    }\r\n    else if (isBuiltInType(tag, 'Suspense')) {\r\n        return SUSPENSE;\r\n    }\r\n    else if (isBuiltInType(tag, 'KeepAlive')) {\r\n        return KEEP_ALIVE;\r\n    }\r\n    else if (isBuiltInType(tag, 'BaseTransition')) {\r\n        return BASE_TRANSITION;\r\n    }\r\n}\r\nconst nonIdentifierRE = /^\\d|[^\\$\\w]/;\r\nconst isSimpleIdentifier = (name) => !nonIdentifierRE.test(name);\r\nconst memberExpRE = /^[A-Za-z_$][\\w$]*(?:\\s*\\.\\s*[A-Za-z_$][\\w$]*|\\[[^\\]]+\\])*$/;\r\nconst isMemberExpression = (path) => {\r\n    if (!path)\r\n        return false;\r\n    return memberExpRE.test(path.trim());\r\n};\r\nfunction getInnerRange(loc, offset, length) {\r\n    const source = loc.source.substr(offset, length);\r\n    const newLoc = {\r\n        source,\r\n        start: advancePositionWithClone(loc.start, loc.source, offset),\r\n        end: loc.end\r\n    };\r\n    if (length != null) {\r\n        newLoc.end = advancePositionWithClone(loc.start, loc.source, offset + length);\r\n    }\r\n    return newLoc;\r\n}\r\nfunction advancePositionWithClone(pos, source, numberOfCharacters = source.length) {\r\n    return advancePositionWithMutation(extend({}, pos), source, numberOfCharacters);\r\n}\r\n// advance by mutation without cloning (for performance reasons), since this\r\n// gets called a lot in the parser\r\nfunction advancePositionWithMutation(pos, source, numberOfCharacters = source.length) {\r\n    let linesCount = 0;\r\n    let lastNewLinePos = -1;\r\n    for (let i = 0; i < numberOfCharacters; i++) {\r\n        if (source.charCodeAt(i) === 10 /* newline char code */) {\r\n            linesCount++;\r\n            lastNewLinePos = i;\r\n        }\r\n    }\r\n    pos.offset += numberOfCharacters;\r\n    pos.line += linesCount;\r\n    pos.column =\r\n        lastNewLinePos === -1\r\n            ? pos.column + numberOfCharacters\r\n            : numberOfCharacters - lastNewLinePos;\r\n    return pos;\r\n}\r\nfunction assert(condition, msg) {\r\n    /* istanbul ignore if */\r\n    if (!condition) {\r\n        throw new Error(msg || `unexpected compiler condition`);\r\n    }\r\n}\r\nfunction findDir(node, name, allowEmpty = false) {\r\n    for (let i = 0; i < node.props.length; i++) {\r\n        const p = node.props[i];\r\n        if (p.type === 7 /* DIRECTIVE */ &&\r\n            (allowEmpty || p.exp) &&\r\n            (isString(name) ? p.name === name : name.test(p.name))) {\r\n            return p;\r\n        }\r\n    }\r\n}\r\nfunction findProp(node, name, dynamicOnly = false, allowEmpty = false) {\r\n    for (let i = 0; i < node.props.length; i++) {\r\n        const p = node.props[i];\r\n        if (p.type === 6 /* ATTRIBUTE */) {\r\n            if (dynamicOnly)\r\n                continue;\r\n            if (p.name === name && (p.value || allowEmpty)) {\r\n                return p;\r\n            }\r\n        }\r\n        else if (p.name === 'bind' &&\r\n            (p.exp || allowEmpty) &&\r\n            isBindKey(p.arg, name)) {\r\n            return p;\r\n        }\r\n    }\r\n}\r\nfunction isBindKey(arg, name) {\r\n    return !!(arg && isStaticExp(arg) && arg.content === name);\r\n}\r\nfunction hasDynamicKeyVBind(node) {\r\n    return node.props.some(p => p.type === 7 /* DIRECTIVE */ &&\r\n        p.name === 'bind' &&\r\n        (!p.arg || // v-bind=\"obj\"\r\n            p.arg.type !== 4 /* SIMPLE_EXPRESSION */ || // v-bind:[_ctx.foo]\r\n            !p.arg.isStatic) // v-bind:[foo]\r\n    );\r\n}\r\nfunction isText(node) {\r\n    return node.type === 5 /* INTERPOLATION */ || node.type === 2 /* TEXT */;\r\n}\r\nfunction isVSlot(p) {\r\n    return p.type === 7 /* DIRECTIVE */ && p.name === 'slot';\r\n}\r\nfunction isTemplateNode(node) {\r\n    return (node.type === 1 /* ELEMENT */ && node.tagType === 3 /* TEMPLATE */);\r\n}\r\nfunction isSlotOutlet(node) {\r\n    return node.type === 1 /* ELEMENT */ && node.tagType === 2 /* SLOT */;\r\n}\r\nfunction injectProp(node, prop, context) {\r\n    let propsWithInjection;\r\n    const props = node.type === 13 /* VNODE_CALL */ ? node.props : node.arguments[2];\r\n    if (props == null || isString(props)) {\r\n        propsWithInjection = createObjectExpression([prop]);\r\n    }\r\n    else if (props.type === 14 /* JS_CALL_EXPRESSION */) {\r\n        // merged props... add ours\r\n        // only inject key to object literal if it's the first argument so that\r\n        // if doesn't override user provided keys\r\n        const first = props.arguments[0];\r\n        if (!isString(first) && first.type === 15 /* JS_OBJECT_EXPRESSION */) {\r\n            first.properties.unshift(prop);\r\n        }\r\n        else {\r\n            if (props.callee === TO_HANDLERS) {\r\n                // #2366\r\n                propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\r\n                    createObjectExpression([prop]),\r\n                    props\r\n                ]);\r\n            }\r\n            else {\r\n                props.arguments.unshift(createObjectExpression([prop]));\r\n            }\r\n        }\r\n        !propsWithInjection && (propsWithInjection = props);\r\n    }\r\n    else if (props.type === 15 /* JS_OBJECT_EXPRESSION */) {\r\n        let alreadyExists = false;\r\n        // check existing key to avoid overriding user provided keys\r\n        if (prop.key.type === 4 /* SIMPLE_EXPRESSION */) {\r\n            const propKeyName = prop.key.content;\r\n            alreadyExists = props.properties.some(p => p.key.type === 4 /* SIMPLE_EXPRESSION */ &&\r\n                p.key.content === propKeyName);\r\n        }\r\n        if (!alreadyExists) {\r\n            props.properties.unshift(prop);\r\n        }\r\n        propsWithInjection = props;\r\n    }\r\n    else {\r\n        // single v-bind with expression, return a merged replacement\r\n        propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\r\n            createObjectExpression([prop]),\r\n            props\r\n        ]);\r\n    }\r\n    if (node.type === 13 /* VNODE_CALL */) {\r\n        node.props = propsWithInjection;\r\n    }\r\n    else {\r\n        node.arguments[2] = propsWithInjection;\r\n    }\r\n}\r\nfunction toValidAssetId(name, type) {\r\n    return `_${type}_${name.replace(/[^\\w]/g, '_')}`;\r\n}\r\n// Check if a node contains expressions that reference current context scope ids\r\nfunction hasScopeRef(node, ids) {\r\n    if (!node || Object.keys(ids).length === 0) {\r\n        return false;\r\n    }\r\n    switch (node.type) {\r\n        case 1 /* ELEMENT */:\r\n            for (let i = 0; i < node.props.length; i++) {\r\n                const p = node.props[i];\r\n                if (p.type === 7 /* DIRECTIVE */ &&\r\n                    (hasScopeRef(p.arg, ids) || hasScopeRef(p.exp, ids))) {\r\n                    return true;\r\n                }\r\n            }\r\n            return node.children.some(c => hasScopeRef(c, ids));\r\n        case 11 /* FOR */:\r\n            if (hasScopeRef(node.source, ids)) {\r\n                return true;\r\n            }\r\n            return node.children.some(c => hasScopeRef(c, ids));\r\n        case 9 /* IF */:\r\n            return node.branches.some(b => hasScopeRef(b, ids));\r\n        case 10 /* IF_BRANCH */:\r\n            if (hasScopeRef(node.condition, ids)) {\r\n                return true;\r\n            }\r\n            return node.children.some(c => hasScopeRef(c, ids));\r\n        case 4 /* SIMPLE_EXPRESSION */:\r\n            return (!node.isStatic &&\r\n                isSimpleIdentifier(node.content) &&\r\n                !!ids[node.content]);\r\n        case 8 /* COMPOUND_EXPRESSION */:\r\n            return node.children.some(c => isObject(c) && hasScopeRef(c, ids));\r\n        case 5 /* INTERPOLATION */:\r\n        case 12 /* TEXT_CALL */:\r\n            return hasScopeRef(node.content, ids);\r\n        case 2 /* TEXT */:\r\n        case 3 /* COMMENT */:\r\n            return false;\r\n        default:\r\n            if ((process.env.NODE_ENV !== 'production')) ;\r\n            return false;\r\n    }\r\n}\n\n// The default decoder only provides escapes for characters reserved as part of\r\n// the template syntax, and is only used if the custom renderer did not provide\r\n// a platform-specific decoder.\r\nconst decodeRE = /&(gt|lt|amp|apos|quot);/g;\r\nconst decodeMap = {\r\n    gt: '>',\r\n    lt: '<',\r\n    amp: '&',\r\n    apos: \"'\",\r\n    quot: '\"'\r\n};\r\nconst defaultParserOptions = {\r\n    delimiters: [`{{`, `}}`],\r\n    getNamespace: () => 0 /* HTML */,\r\n    getTextMode: () => 0 /* DATA */,\r\n    isVoidTag: NO,\r\n    isPreTag: NO,\r\n    isCustomElement: NO,\r\n    decodeEntities: (rawText) => rawText.replace(decodeRE, (_, p1) => decodeMap[p1]),\r\n    onError: defaultOnError,\r\n    comments: false\r\n};\r\nfunction baseParse(content, options = {}) {\r\n    const context = createParserContext(content, options);\r\n    const start = getCursor(context);\r\n    return createRoot(parseChildren(context, 0 /* DATA */, []), getSelection(context, start));\r\n}\r\nfunction createParserContext(content, rawOptions) {\r\n    const options = extend({}, defaultParserOptions);\r\n    for (const key in rawOptions) {\r\n        // @ts-ignore\r\n        options[key] = rawOptions[key] || defaultParserOptions[key];\r\n    }\r\n    return {\r\n        options,\r\n        column: 1,\r\n        line: 1,\r\n        offset: 0,\r\n        originalSource: content,\r\n        source: content,\r\n        inPre: false,\r\n        inVPre: false\r\n    };\r\n}\r\nfunction parseChildren(context, mode, ancestors) {\r\n    const parent = last(ancestors);\r\n    const ns = parent ? parent.ns : 0 /* HTML */;\r\n    const nodes = [];\r\n    while (!isEnd(context, mode, ancestors)) {\r\n        const s = context.source;\r\n        let node = undefined;\r\n        if (mode === 0 /* DATA */ || mode === 1 /* RCDATA */) {\r\n            if (!context.inVPre && startsWith(s, context.options.delimiters[0])) {\r\n                // '{{'\r\n                node = parseInterpolation(context, mode);\r\n            }\r\n            else if (mode === 0 /* DATA */ && s[0] === '<') {\r\n                // https://html.spec.whatwg.org/multipage/parsing.html#tag-open-state\r\n                if (s.length === 1) {\r\n                    emitError(context, 5 /* EOF_BEFORE_TAG_NAME */, 1);\r\n                }\r\n                else if (s[1] === '!') {\r\n                    // https://html.spec.whatwg.org/multipage/parsing.html#markup-declaration-open-state\r\n                    if (startsWith(s, '<!--')) {\r\n                        node = parseComment(context);\r\n                    }\r\n                    else if (startsWith(s, '<!DOCTYPE')) {\r\n                        // Ignore DOCTYPE by a limitation.\r\n                        node = parseBogusComment(context);\r\n                    }\r\n                    else if (startsWith(s, '<![CDATA[')) {\r\n                        if (ns !== 0 /* HTML */) {\r\n                            node = parseCDATA(context, ancestors);\r\n                        }\r\n                        else {\r\n                            emitError(context, 1 /* CDATA_IN_HTML_CONTENT */);\r\n                            node = parseBogusComment(context);\r\n                        }\r\n                    }\r\n                    else {\r\n                        emitError(context, 11 /* INCORRECTLY_OPENED_COMMENT */);\r\n                        node = parseBogusComment(context);\r\n                    }\r\n                }\r\n                else if (s[1] === '/') {\r\n                    // https://html.spec.whatwg.org/multipage/parsing.html#end-tag-open-state\r\n                    if (s.length === 2) {\r\n                        emitError(context, 5 /* EOF_BEFORE_TAG_NAME */, 2);\r\n                    }\r\n                    else if (s[2] === '>') {\r\n                        emitError(context, 14 /* MISSING_END_TAG_NAME */, 2);\r\n                        advanceBy(context, 3);\r\n                        continue;\r\n                    }\r\n                    else if (/[a-z]/i.test(s[2])) {\r\n                        emitError(context, 23 /* X_INVALID_END_TAG */);\r\n                        parseTag(context, 1 /* End */, parent);\r\n                        continue;\r\n                    }\r\n                    else {\r\n                        emitError(context, 12 /* INVALID_FIRST_CHARACTER_OF_TAG_NAME */, 2);\r\n                        node = parseBogusComment(context);\r\n                    }\r\n                }\r\n                else if (/[a-z]/i.test(s[1])) {\r\n                    node = parseElement(context, ancestors);\r\n                }\r\n                else if (s[1] === '?') {\r\n                    emitError(context, 21 /* UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME */, 1);\r\n                    node = parseBogusComment(context);\r\n                }\r\n                else {\r\n                    emitError(context, 12 /* INVALID_FIRST_CHARACTER_OF_TAG_NAME */, 1);\r\n                }\r\n            }\r\n        }\r\n        if (!node) {\r\n            node = parseText(context, mode);\r\n        }\r\n        if (isArray(node)) {\r\n            for (let i = 0; i < node.length; i++) {\r\n                pushNode(nodes, node[i]);\r\n            }\r\n        }\r\n        else {\r\n            pushNode(nodes, node);\r\n        }\r\n    }\r\n    // Whitespace management for more efficient output\r\n    // (same as v2 whitespace: 'condense')\r\n    let removedWhitespace = false;\r\n    if (mode !== 2 /* RAWTEXT */) {\r\n        for (let i = 0; i < nodes.length; i++) {\r\n            const node = nodes[i];\r\n            if (!context.inPre && node.type === 2 /* TEXT */) {\r\n                if (!/[^\\t\\r\\n\\f ]/.test(node.content)) {\r\n                    const prev = nodes[i - 1];\r\n                    const next = nodes[i + 1];\r\n                    // If:\r\n                    // - the whitespace is the first or last node, or:\r\n                    // - the whitespace is adjacent to a comment, or:\r\n                    // - the whitespace is between two elements AND contains newline\r\n                    // Then the whitespace is ignored.\r\n                    if (!prev ||\r\n                        !next ||\r\n                        prev.type === 3 /* COMMENT */ ||\r\n                        next.type === 3 /* COMMENT */ ||\r\n                        (prev.type === 1 /* ELEMENT */ &&\r\n                            next.type === 1 /* ELEMENT */ &&\r\n                            /[\\r\\n]/.test(node.content))) {\r\n                        removedWhitespace = true;\r\n                        nodes[i] = null;\r\n                    }\r\n                    else {\r\n                        // Otherwise, condensed consecutive whitespace inside the text\r\n                        // down to a single space\r\n                        node.content = ' ';\r\n                    }\r\n                }\r\n                else {\r\n                    node.content = node.content.replace(/[\\t\\r\\n\\f ]+/g, ' ');\r\n                }\r\n            }\r\n            // also remove comment nodes in prod by default\r\n            if (!(process.env.NODE_ENV !== 'production') &&\r\n                node.type === 3 /* COMMENT */ &&\r\n                !context.options.comments) {\r\n                removedWhitespace = true;\r\n                nodes[i] = null;\r\n            }\r\n        }\r\n        if (context.inPre && parent && context.options.isPreTag(parent.tag)) {\r\n            // remove leading newline per html spec\r\n            // https://html.spec.whatwg.org/multipage/grouping-content.html#the-pre-element\r\n            const first = nodes[0];\r\n            if (first && first.type === 2 /* TEXT */) {\r\n                first.content = first.content.replace(/^\\r?\\n/, '');\r\n            }\r\n        }\r\n    }\r\n    return removedWhitespace ? nodes.filter(Boolean) : nodes;\r\n}\r\nfunction pushNode(nodes, node) {\r\n    if (node.type === 2 /* TEXT */) {\r\n        const prev = last(nodes);\r\n        // Merge if both this and the previous node are text and those are\r\n        // consecutive. This happens for cases like \"a < b\".\r\n        if (prev &&\r\n            prev.type === 2 /* TEXT */ &&\r\n            prev.loc.end.offset === node.loc.start.offset) {\r\n            prev.content += node.content;\r\n            prev.loc.end = node.loc.end;\r\n            prev.loc.source += node.loc.source;\r\n            return;\r\n        }\r\n    }\r\n    nodes.push(node);\r\n}\r\nfunction parseCDATA(context, ancestors) {\r\n    advanceBy(context, 9);\r\n    const nodes = parseChildren(context, 3 /* CDATA */, ancestors);\r\n    if (context.source.length === 0) {\r\n        emitError(context, 6 /* EOF_IN_CDATA */);\r\n    }\r\n    else {\r\n        advanceBy(context, 3);\r\n    }\r\n    return nodes;\r\n}\r\nfunction parseComment(context) {\r\n    const start = getCursor(context);\r\n    let content;\r\n    // Regular comment.\r\n    const match = /--(\\!)?>/.exec(context.source);\r\n    if (!match) {\r\n        content = context.source.slice(4);\r\n        advanceBy(context, context.source.length);\r\n        emitError(context, 7 /* EOF_IN_COMMENT */);\r\n    }\r\n    else {\r\n        if (match.index <= 3) {\r\n            emitError(context, 0 /* ABRUPT_CLOSING_OF_EMPTY_COMMENT */);\r\n        }\r\n        if (match[1]) {\r\n            emitError(context, 10 /* INCORRECTLY_CLOSED_COMMENT */);\r\n        }\r\n        content = context.source.slice(4, match.index);\r\n        // Advancing with reporting nested comments.\r\n        const s = context.source.slice(0, match.index);\r\n        let prevIndex = 1, nestedIndex = 0;\r\n        while ((nestedIndex = s.indexOf('<!--', prevIndex)) !== -1) {\r\n            advanceBy(context, nestedIndex - prevIndex + 1);\r\n            if (nestedIndex + 4 < s.length) {\r\n                emitError(context, 16 /* NESTED_COMMENT */);\r\n            }\r\n            prevIndex = nestedIndex + 1;\r\n        }\r\n        advanceBy(context, match.index + match[0].length - prevIndex + 1);\r\n    }\r\n    return {\r\n        type: 3 /* COMMENT */,\r\n        content,\r\n        loc: getSelection(context, start)\r\n    };\r\n}\r\nfunction parseBogusComment(context) {\r\n    const start = getCursor(context);\r\n    const contentStart = context.source[1] === '?' ? 1 : 2;\r\n    let content;\r\n    const closeIndex = context.source.indexOf('>');\r\n    if (closeIndex === -1) {\r\n        content = context.source.slice(contentStart);\r\n        advanceBy(context, context.source.length);\r\n    }\r\n    else {\r\n        content = context.source.slice(contentStart, closeIndex);\r\n        advanceBy(context, closeIndex + 1);\r\n    }\r\n    return {\r\n        type: 3 /* COMMENT */,\r\n        content,\r\n        loc: getSelection(context, start)\r\n    };\r\n}\r\nfunction parseElement(context, ancestors) {\r\n    // Start tag.\r\n    const wasInPre = context.inPre;\r\n    const wasInVPre = context.inVPre;\r\n    const parent = last(ancestors);\r\n    const element = parseTag(context, 0 /* Start */, parent);\r\n    const isPreBoundary = context.inPre && !wasInPre;\r\n    const isVPreBoundary = context.inVPre && !wasInVPre;\r\n    if (element.isSelfClosing || context.options.isVoidTag(element.tag)) {\r\n        return element;\r\n    }\r\n    // Children.\r\n    ancestors.push(element);\r\n    const mode = context.options.getTextMode(element, parent);\r\n    const children = parseChildren(context, mode, ancestors);\r\n    ancestors.pop();\r\n    element.children = children;\r\n    // End tag.\r\n    if (startsWithEndTagOpen(context.source, element.tag)) {\r\n        parseTag(context, 1 /* End */, parent);\r\n    }\r\n    else {\r\n        emitError(context, 24 /* X_MISSING_END_TAG */, 0, element.loc.start);\r\n        if (context.source.length === 0 && element.tag.toLowerCase() === 'script') {\r\n            const first = children[0];\r\n            if (first && startsWith(first.loc.source, '<!--')) {\r\n                emitError(context, 8 /* EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT */);\r\n            }\r\n        }\r\n    }\r\n    element.loc = getSelection(context, element.loc.start);\r\n    if (isPreBoundary) {\r\n        context.inPre = false;\r\n    }\r\n    if (isVPreBoundary) {\r\n        context.inVPre = false;\r\n    }\r\n    return element;\r\n}\r\nconst isSpecialTemplateDirective = /*#__PURE__*/ makeMap(`if,else,else-if,for,slot`);\r\n/**\r\n * Parse a tag (E.g. `<div id=a>`) with that type (start tag or end tag).\r\n */\r\nfunction parseTag(context, type, parent) {\r\n    // Tag open.\r\n    const start = getCursor(context);\r\n    const match = /^<\\/?([a-z][^\\t\\r\\n\\f />]*)/i.exec(context.source);\r\n    const tag = match[1];\r\n    const ns = context.options.getNamespace(tag, parent);\r\n    advanceBy(context, match[0].length);\r\n    advanceSpaces(context);\r\n    // save current state in case we need to re-parse attributes with v-pre\r\n    const cursor = getCursor(context);\r\n    const currentSource = context.source;\r\n    // Attributes.\r\n    let props = parseAttributes(context, type);\r\n    // check <pre> tag\r\n    if (context.options.isPreTag(tag)) {\r\n        context.inPre = true;\r\n    }\r\n    // check v-pre\r\n    if (!context.inVPre &&\r\n        props.some(p => p.type === 7 /* DIRECTIVE */ && p.name === 'pre')) {\r\n        context.inVPre = true;\r\n        // reset context\r\n        extend(context, cursor);\r\n        context.source = currentSource;\r\n        // re-parse attrs and filter out v-pre itself\r\n        props = parseAttributes(context, type).filter(p => p.name !== 'v-pre');\r\n    }\r\n    // Tag close.\r\n    let isSelfClosing = false;\r\n    if (context.source.length === 0) {\r\n        emitError(context, 9 /* EOF_IN_TAG */);\r\n    }\r\n    else {\r\n        isSelfClosing = startsWith(context.source, '/>');\r\n        if (type === 1 /* End */ && isSelfClosing) {\r\n            emitError(context, 4 /* END_TAG_WITH_TRAILING_SOLIDUS */);\r\n        }\r\n        advanceBy(context, isSelfClosing ? 2 : 1);\r\n    }\r\n    let tagType = 0 /* ELEMENT */;\r\n    const options = context.options;\r\n    if (!context.inVPre && !options.isCustomElement(tag)) {\r\n        const hasVIs = props.some(p => p.type === 7 /* DIRECTIVE */ && p.name === 'is');\r\n        if (options.isNativeTag && !hasVIs) {\r\n            if (!options.isNativeTag(tag))\r\n                tagType = 1 /* COMPONENT */;\r\n        }\r\n        else if (hasVIs ||\r\n            isCoreComponent(tag) ||\r\n            (options.isBuiltInComponent && options.isBuiltInComponent(tag)) ||\r\n            /^[A-Z]/.test(tag) ||\r\n            tag === 'component') {\r\n            tagType = 1 /* COMPONENT */;\r\n        }\r\n        if (tag === 'slot') {\r\n            tagType = 2 /* SLOT */;\r\n        }\r\n        else if (tag === 'template' &&\r\n            props.some(p => {\r\n                return (p.type === 7 /* DIRECTIVE */ && isSpecialTemplateDirective(p.name));\r\n            })) {\r\n            tagType = 3 /* TEMPLATE */;\r\n        }\r\n    }\r\n    return {\r\n        type: 1 /* ELEMENT */,\r\n        ns,\r\n        tag,\r\n        tagType,\r\n        props,\r\n        isSelfClosing,\r\n        children: [],\r\n        loc: getSelection(context, start),\r\n        codegenNode: undefined // to be created during transform phase\r\n    };\r\n}\r\nfunction parseAttributes(context, type) {\r\n    const props = [];\r\n    const attributeNames = new Set();\r\n    while (context.source.length > 0 &&\r\n        !startsWith(context.source, '>') &&\r\n        !startsWith(context.source, '/>')) {\r\n        if (startsWith(context.source, '/')) {\r\n            emitError(context, 22 /* UNEXPECTED_SOLIDUS_IN_TAG */);\r\n            advanceBy(context, 1);\r\n            advanceSpaces(context);\r\n            continue;\r\n        }\r\n        if (type === 1 /* End */) {\r\n            emitError(context, 3 /* END_TAG_WITH_ATTRIBUTES */);\r\n        }\r\n        const attr = parseAttribute(context, attributeNames);\r\n        if (type === 0 /* Start */) {\r\n            props.push(attr);\r\n        }\r\n        if (/^[^\\t\\r\\n\\f />]/.test(context.source)) {\r\n            emitError(context, 15 /* MISSING_WHITESPACE_BETWEEN_ATTRIBUTES */);\r\n        }\r\n        advanceSpaces(context);\r\n    }\r\n    return props;\r\n}\r\nfunction parseAttribute(context, nameSet) {\r\n    // Name.\r\n    const start = getCursor(context);\r\n    const match = /^[^\\t\\r\\n\\f />][^\\t\\r\\n\\f />=]*/.exec(context.source);\r\n    const name = match[0];\r\n    if (nameSet.has(name)) {\r\n        emitError(context, 2 /* DUPLICATE_ATTRIBUTE */);\r\n    }\r\n    nameSet.add(name);\r\n    if (name[0] === '=') {\r\n        emitError(context, 19 /* UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME */);\r\n    }\r\n    {\r\n        const pattern = /[\"'<]/g;\r\n        let m;\r\n        while ((m = pattern.exec(name))) {\r\n            emitError(context, 17 /* UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME */, m.index);\r\n        }\r\n    }\r\n    advanceBy(context, name.length);\r\n    // Value\r\n    let value = undefined;\r\n    if (/^[\\t\\r\\n\\f ]*=/.test(context.source)) {\r\n        advanceSpaces(context);\r\n        advanceBy(context, 1);\r\n        advanceSpaces(context);\r\n        value = parseAttributeValue(context);\r\n        if (!value) {\r\n            emitError(context, 13 /* MISSING_ATTRIBUTE_VALUE */);\r\n        }\r\n    }\r\n    const loc = getSelection(context, start);\r\n    if (!context.inVPre && /^(v-|:|@|#)/.test(name)) {\r\n        const match = /(?:^v-([a-z0-9-]+))?(?:(?::|^@|^#)(\\[[^\\]]+\\]|[^\\.]+))?(.+)?$/i.exec(name);\r\n        const dirName = match[1] ||\r\n            (startsWith(name, ':') ? 'bind' : startsWith(name, '@') ? 'on' : 'slot');\r\n        let arg;\r\n        if (match[2]) {\r\n            const isSlot = dirName === 'slot';\r\n            const startOffset = name.indexOf(match[2]);\r\n            const loc = getSelection(context, getNewPosition(context, start, startOffset), getNewPosition(context, start, startOffset + match[2].length + ((isSlot && match[3]) || '').length));\r\n            let content = match[2];\r\n            let isStatic = true;\r\n            if (content.startsWith('[')) {\r\n                isStatic = false;\r\n                if (!content.endsWith(']')) {\r\n                    emitError(context, 26 /* X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END */);\r\n                }\r\n                content = content.substr(1, content.length - 2);\r\n            }\r\n            else if (isSlot) {\r\n                // #1241 special case for v-slot: vuetify relies extensively on slot\r\n                // names containing dots. v-slot doesn't have any modifiers and Vue 2.x\r\n                // supports such usage so we are keeping it consistent with 2.x.\r\n                content += match[3] || '';\r\n            }\r\n            arg = {\r\n                type: 4 /* SIMPLE_EXPRESSION */,\r\n                content,\r\n                isStatic,\r\n                isConstant: isStatic,\r\n                loc\r\n            };\r\n        }\r\n        if (value && value.isQuoted) {\r\n            const valueLoc = value.loc;\r\n            valueLoc.start.offset++;\r\n            valueLoc.start.column++;\r\n            valueLoc.end = advancePositionWithClone(valueLoc.start, value.content);\r\n            valueLoc.source = valueLoc.source.slice(1, -1);\r\n        }\r\n        return {\r\n            type: 7 /* DIRECTIVE */,\r\n            name: dirName,\r\n            exp: value && {\r\n                type: 4 /* SIMPLE_EXPRESSION */,\r\n                content: value.content,\r\n                isStatic: false,\r\n                // Treat as non-constant by default. This can be potentially set to\r\n                // true by `transformExpression` to make it eligible for hoisting.\r\n                isConstant: false,\r\n                loc: value.loc\r\n            },\r\n            arg,\r\n            modifiers: match[3] ? match[3].substr(1).split('.') : [],\r\n            loc\r\n        };\r\n    }\r\n    return {\r\n        type: 6 /* ATTRIBUTE */,\r\n        name,\r\n        value: value && {\r\n            type: 2 /* TEXT */,\r\n            content: value.content,\r\n            loc: value.loc\r\n        },\r\n        loc\r\n    };\r\n}\r\nfunction parseAttributeValue(context) {\r\n    const start = getCursor(context);\r\n    let content;\r\n    const quote = context.source[0];\r\n    const isQuoted = quote === `\"` || quote === `'`;\r\n    if (isQuoted) {\r\n        // Quoted value.\r\n        advanceBy(context, 1);\r\n        const endIndex = context.source.indexOf(quote);\r\n        if (endIndex === -1) {\r\n            content = parseTextData(context, context.source.length, 4 /* ATTRIBUTE_VALUE */);\r\n        }\r\n        else {\r\n            content = parseTextData(context, endIndex, 4 /* ATTRIBUTE_VALUE */);\r\n            advanceBy(context, 1);\r\n        }\r\n    }\r\n    else {\r\n        // Unquoted\r\n        const match = /^[^\\t\\r\\n\\f >]+/.exec(context.source);\r\n        if (!match) {\r\n            return undefined;\r\n        }\r\n        const unexpectedChars = /[\"'<=`]/g;\r\n        let m;\r\n        while ((m = unexpectedChars.exec(match[0]))) {\r\n            emitError(context, 18 /* UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE */, m.index);\r\n        }\r\n        content = parseTextData(context, match[0].length, 4 /* ATTRIBUTE_VALUE */);\r\n    }\r\n    return { content, isQuoted, loc: getSelection(context, start) };\r\n}\r\nfunction parseInterpolation(context, mode) {\r\n    const [open, close] = context.options.delimiters;\r\n    const closeIndex = context.source.indexOf(close, open.length);\r\n    if (closeIndex === -1) {\r\n        emitError(context, 25 /* X_MISSING_INTERPOLATION_END */);\r\n        return undefined;\r\n    }\r\n    const start = getCursor(context);\r\n    advanceBy(context, open.length);\r\n    const innerStart = getCursor(context);\r\n    const innerEnd = getCursor(context);\r\n    const rawContentLength = closeIndex - open.length;\r\n    const rawContent = context.source.slice(0, rawContentLength);\r\n    const preTrimContent = parseTextData(context, rawContentLength, mode);\r\n    const content = preTrimContent.trim();\r\n    const startOffset = preTrimContent.indexOf(content);\r\n    if (startOffset > 0) {\r\n        advancePositionWithMutation(innerStart, rawContent, startOffset);\r\n    }\r\n    const endOffset = rawContentLength - (preTrimContent.length - content.length - startOffset);\r\n    advancePositionWithMutation(innerEnd, rawContent, endOffset);\r\n    advanceBy(context, close.length);\r\n    return {\r\n        type: 5 /* INTERPOLATION */,\r\n        content: {\r\n            type: 4 /* SIMPLE_EXPRESSION */,\r\n            isStatic: false,\r\n            // Set `isConstant` to false by default and will decide in transformExpression\r\n            isConstant: false,\r\n            content,\r\n            loc: getSelection(context, innerStart, innerEnd)\r\n        },\r\n        loc: getSelection(context, start)\r\n    };\r\n}\r\nfunction parseText(context, mode) {\r\n    const endTokens = ['<', context.options.delimiters[0]];\r\n    if (mode === 3 /* CDATA */) {\r\n        endTokens.push(']]>');\r\n    }\r\n    let endIndex = context.source.length;\r\n    for (let i = 0; i < endTokens.length; i++) {\r\n        const index = context.source.indexOf(endTokens[i], 1);\r\n        if (index !== -1 && endIndex > index) {\r\n            endIndex = index;\r\n        }\r\n    }\r\n    const start = getCursor(context);\r\n    const content = parseTextData(context, endIndex, mode);\r\n    return {\r\n        type: 2 /* TEXT */,\r\n        content,\r\n        loc: getSelection(context, start)\r\n    };\r\n}\r\n/**\r\n * Get text data with a given length from the current location.\r\n * This translates HTML entities in the text data.\r\n */\r\nfunction parseTextData(context, length, mode) {\r\n    const rawText = context.source.slice(0, length);\r\n    advanceBy(context, length);\r\n    if (mode === 2 /* RAWTEXT */ ||\r\n        mode === 3 /* CDATA */ ||\r\n        rawText.indexOf('&') === -1) {\r\n        return rawText;\r\n    }\r\n    else {\r\n        // DATA or RCDATA containing \"&\"\". Entity decoding required.\r\n        return context.options.decodeEntities(rawText, mode === 4 /* ATTRIBUTE_VALUE */);\r\n    }\r\n}\r\nfunction getCursor(context) {\r\n    const { column, line, offset } = context;\r\n    return { column, line, offset };\r\n}\r\nfunction getSelection(context, start, end) {\r\n    end = end || getCursor(context);\r\n    return {\r\n        start,\r\n        end,\r\n        source: context.originalSource.slice(start.offset, end.offset)\r\n    };\r\n}\r\nfunction last(xs) {\r\n    return xs[xs.length - 1];\r\n}\r\nfunction startsWith(source, searchString) {\r\n    return source.startsWith(searchString);\r\n}\r\nfunction advanceBy(context, numberOfCharacters) {\r\n    const { source } = context;\r\n    advancePositionWithMutation(context, source, numberOfCharacters);\r\n    context.source = source.slice(numberOfCharacters);\r\n}\r\nfunction advanceSpaces(context) {\r\n    const match = /^[\\t\\r\\n\\f ]+/.exec(context.source);\r\n    if (match) {\r\n        advanceBy(context, match[0].length);\r\n    }\r\n}\r\nfunction getNewPosition(context, start, numberOfCharacters) {\r\n    return advancePositionWithClone(start, context.originalSource.slice(start.offset, numberOfCharacters), numberOfCharacters);\r\n}\r\nfunction emitError(context, code, offset, loc = getCursor(context)) {\r\n    if (offset) {\r\n        loc.offset += offset;\r\n        loc.column += offset;\r\n    }\r\n    context.options.onError(createCompilerError(code, {\r\n        start: loc,\r\n        end: loc,\r\n        source: ''\r\n    }));\r\n}\r\nfunction isEnd(context, mode, ancestors) {\r\n    const s = context.source;\r\n    switch (mode) {\r\n        case 0 /* DATA */:\r\n            if (startsWith(s, '</')) {\r\n                //TODO: probably bad performance\r\n                for (let i = ancestors.length - 1; i >= 0; --i) {\r\n                    if (startsWithEndTagOpen(s, ancestors[i].tag)) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            break;\r\n        case 1 /* RCDATA */:\r\n        case 2 /* RAWTEXT */: {\r\n            const parent = last(ancestors);\r\n            if (parent && startsWithEndTagOpen(s, parent.tag)) {\r\n                return true;\r\n            }\r\n            break;\r\n        }\r\n        case 3 /* CDATA */:\r\n            if (startsWith(s, ']]>')) {\r\n                return true;\r\n            }\r\n            break;\r\n    }\r\n    return !s;\r\n}\r\nfunction startsWithEndTagOpen(source, tag) {\r\n    return (startsWith(source, '</') &&\r\n        source.substr(2, tag.length).toLowerCase() === tag.toLowerCase() &&\r\n        /[\\t\\r\\n\\f />]/.test(source[2 + tag.length] || '>'));\r\n}\n\nfunction hoistStatic(root, context) {\r\n    walk(root, context, new Map(), \r\n    // Root node is unfortunately non-hoistable due to potential parent\r\n    // fallthrough attributes.\r\n    isSingleElementRoot(root, root.children[0]));\r\n}\r\nfunction isSingleElementRoot(root, child) {\r\n    const { children } = root;\r\n    return (children.length === 1 &&\r\n        child.type === 1 /* ELEMENT */ &&\r\n        !isSlotOutlet(child));\r\n}\r\nfunction walk(node, context, resultCache, doNotHoistNode = false) {\r\n    let hasHoistedNode = false;\r\n    // Some transforms, e.g. transformAssetUrls from @vue/compiler-sfc, replaces\r\n    // static bindings with expressions. These expressions are guaranteed to be\r\n    // constant so they are still eligible for hoisting, but they are only\r\n    // available at runtime and therefore cannot be evaluated ahead of time.\r\n    // This is only a concern for pre-stringification (via transformHoist by\r\n    // @vue/compiler-dom), but doing it here allows us to perform only one full\r\n    // walk of the AST and allow `stringifyStatic` to stop walking as soon as its\r\n    // stringficiation threshold is met.\r\n    let hasRuntimeConstant = false;\r\n    const { children } = node;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        // only plain elements & text calls are eligible for hoisting.\r\n        if (child.type === 1 /* ELEMENT */ &&\r\n            child.tagType === 0 /* ELEMENT */) {\r\n            let staticType;\r\n            if (!doNotHoistNode &&\r\n                (staticType = getStaticType(child, resultCache)) > 0) {\r\n                if (staticType === 2 /* HAS_RUNTIME_CONSTANT */) {\r\n                    hasRuntimeConstant = true;\r\n                }\r\n                child.codegenNode.patchFlag =\r\n                    -1 /* HOISTED */ + ((process.env.NODE_ENV !== 'production') ? ` /* HOISTED */` : ``);\r\n                child.codegenNode = context.hoist(child.codegenNode);\r\n                hasHoistedNode = true;\r\n                continue;\r\n            }\r\n            else {\r\n                // node may contain dynamic children, but its props may be eligible for\r\n                // hoisting.\r\n                const codegenNode = child.codegenNode;\r\n                if (codegenNode.type === 13 /* VNODE_CALL */) {\r\n                    const flag = getPatchFlag(codegenNode);\r\n                    if ((!flag ||\r\n                        flag === 512 /* NEED_PATCH */ ||\r\n                        flag === 1 /* TEXT */) &&\r\n                        !hasNonHoistableProps(child)) {\r\n                        const props = getNodeProps(child);\r\n                        if (props) {\r\n                            codegenNode.props = context.hoist(props);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (child.type === 12 /* TEXT_CALL */) {\r\n            const staticType = getStaticType(child.content, resultCache);\r\n            if (staticType > 0) {\r\n                if (staticType === 2 /* HAS_RUNTIME_CONSTANT */) {\r\n                    hasRuntimeConstant = true;\r\n                }\r\n                child.codegenNode = context.hoist(child.codegenNode);\r\n                hasHoistedNode = true;\r\n            }\r\n        }\r\n        // walk further\r\n        if (child.type === 1 /* ELEMENT */) {\r\n            walk(child, context, resultCache);\r\n        }\r\n        else if (child.type === 11 /* FOR */) {\r\n            // Do not hoist v-for single child because it has to be a block\r\n            walk(child, context, resultCache, child.children.length === 1);\r\n        }\r\n        else if (child.type === 9 /* IF */) {\r\n            for (let i = 0; i < child.branches.length; i++) {\r\n                // Do not hoist v-if single child because it has to be a block\r\n                walk(child.branches[i], context, resultCache, child.branches[i].children.length === 1);\r\n            }\r\n        }\r\n    }\r\n    if (!hasRuntimeConstant && hasHoistedNode && context.transformHoist) {\r\n        context.transformHoist(children, context, node);\r\n    }\r\n}\r\nfunction getStaticType(node, resultCache = new Map()) {\r\n    switch (node.type) {\r\n        case 1 /* ELEMENT */:\r\n            if (node.tagType !== 0 /* ELEMENT */) {\r\n                return 0 /* NOT_STATIC */;\r\n            }\r\n            const cached = resultCache.get(node);\r\n            if (cached !== undefined) {\r\n                return cached;\r\n            }\r\n            const codegenNode = node.codegenNode;\r\n            if (codegenNode.type !== 13 /* VNODE_CALL */) {\r\n                return 0 /* NOT_STATIC */;\r\n            }\r\n            const flag = getPatchFlag(codegenNode);\r\n            if (!flag && !hasNonHoistableProps(node)) {\r\n                // element self is static. check its children.\r\n                let returnType = 1 /* FULL_STATIC */;\r\n                for (let i = 0; i < node.children.length; i++) {\r\n                    const childType = getStaticType(node.children[i], resultCache);\r\n                    if (childType === 0 /* NOT_STATIC */) {\r\n                        resultCache.set(node, 0 /* NOT_STATIC */);\r\n                        return 0 /* NOT_STATIC */;\r\n                    }\r\n                    else if (childType === 2 /* HAS_RUNTIME_CONSTANT */) {\r\n                        returnType = 2 /* HAS_RUNTIME_CONSTANT */;\r\n                    }\r\n                }\r\n                // check if any of the props contain runtime constants\r\n                if (returnType !== 2 /* HAS_RUNTIME_CONSTANT */) {\r\n                    for (let i = 0; i < node.props.length; i++) {\r\n                        const p = node.props[i];\r\n                        if (p.type === 7 /* DIRECTIVE */ &&\r\n                            p.name === 'bind' &&\r\n                            p.exp &&\r\n                            (p.exp.type === 8 /* COMPOUND_EXPRESSION */ ||\r\n                                p.exp.isRuntimeConstant)) {\r\n                            returnType = 2 /* HAS_RUNTIME_CONSTANT */;\r\n                        }\r\n                    }\r\n                }\r\n                // only svg/foreignObject could be block here, however if they are\r\n                // stati then they don't need to be blocks since there will be no\r\n                // nested updates.\r\n                if (codegenNode.isBlock) {\r\n                    codegenNode.isBlock = false;\r\n                }\r\n                resultCache.set(node, returnType);\r\n                return returnType;\r\n            }\r\n            else {\r\n                resultCache.set(node, 0 /* NOT_STATIC */);\r\n                return 0 /* NOT_STATIC */;\r\n            }\r\n        case 2 /* TEXT */:\r\n        case 3 /* COMMENT */:\r\n            return 1 /* FULL_STATIC */;\r\n        case 9 /* IF */:\r\n        case 11 /* FOR */:\r\n        case 10 /* IF_BRANCH */:\r\n            return 0 /* NOT_STATIC */;\r\n        case 5 /* INTERPOLATION */:\r\n        case 12 /* TEXT_CALL */:\r\n            return getStaticType(node.content, resultCache);\r\n        case 4 /* SIMPLE_EXPRESSION */:\r\n            return node.isConstant\r\n                ? node.isRuntimeConstant\r\n                    ? 2 /* HAS_RUNTIME_CONSTANT */\r\n                    : 1 /* FULL_STATIC */\r\n                : 0 /* NOT_STATIC */;\r\n        case 8 /* COMPOUND_EXPRESSION */:\r\n            let returnType = 1 /* FULL_STATIC */;\r\n            for (let i = 0; i < node.children.length; i++) {\r\n                const child = node.children[i];\r\n                if (isString(child) || isSymbol(child)) {\r\n                    continue;\r\n                }\r\n                const childType = getStaticType(child, resultCache);\r\n                if (childType === 0 /* NOT_STATIC */) {\r\n                    return 0 /* NOT_STATIC */;\r\n                }\r\n                else if (childType === 2 /* HAS_RUNTIME_CONSTANT */) {\r\n                    returnType = 2 /* HAS_RUNTIME_CONSTANT */;\r\n                }\r\n            }\r\n            return returnType;\r\n        default:\r\n            if ((process.env.NODE_ENV !== 'production')) ;\r\n            return 0 /* NOT_STATIC */;\r\n    }\r\n}\r\n/**\r\n * Even for a node with no patch flag, it is possible for it to contain\r\n * non-hoistable expressions that refers to scope variables, e.g. compiler\r\n * injected keys or cached event handlers. Therefore we need to always check the\r\n * codegenNode's props to be sure.\r\n */\r\nfunction hasNonHoistableProps(node) {\r\n    const props = getNodeProps(node);\r\n    if (props && props.type === 15 /* JS_OBJECT_EXPRESSION */) {\r\n        const { properties } = props;\r\n        for (let i = 0; i < properties.length; i++) {\r\n            const { key, value } = properties[i];\r\n            if (key.type !== 4 /* SIMPLE_EXPRESSION */ ||\r\n                !key.isStatic ||\r\n                (value.type !== 4 /* SIMPLE_EXPRESSION */ ||\r\n                    (!value.isStatic && !value.isConstant))) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction getNodeProps(node) {\r\n    const codegenNode = node.codegenNode;\r\n    if (codegenNode.type === 13 /* VNODE_CALL */) {\r\n        return codegenNode.props;\r\n    }\r\n}\r\nfunction getPatchFlag(node) {\r\n    const flag = node.patchFlag;\r\n    return flag ? parseInt(flag, 10) : undefined;\r\n}\n\nfunction createTransformContext(root, { prefixIdentifiers = false, hoistStatic = false, cacheHandlers = false, nodeTransforms = [], directiveTransforms = {}, transformHoist = null, isBuiltInComponent = NOOP, isCustomElement = NOOP, expressionPlugins = [], scopeId = null, ssr = false, ssrCssVars = ``, bindingMetadata = {}, onError = defaultOnError }) {\r\n    const context = {\r\n        // options\r\n        prefixIdentifiers,\r\n        hoistStatic,\r\n        cacheHandlers,\r\n        nodeTransforms,\r\n        directiveTransforms,\r\n        transformHoist,\r\n        isBuiltInComponent,\r\n        isCustomElement,\r\n        expressionPlugins,\r\n        scopeId,\r\n        ssr,\r\n        ssrCssVars,\r\n        bindingMetadata,\r\n        onError,\r\n        // state\r\n        root,\r\n        helpers: new Set(),\r\n        components: new Set(),\r\n        directives: new Set(),\r\n        hoists: [],\r\n        imports: new Set(),\r\n        temps: 0,\r\n        cached: 0,\r\n        identifiers: Object.create(null),\r\n        scopes: {\r\n            vFor: 0,\r\n            vSlot: 0,\r\n            vPre: 0,\r\n            vOnce: 0\r\n        },\r\n        parent: null,\r\n        currentNode: root,\r\n        childIndex: 0,\r\n        // methods\r\n        helper(name) {\r\n            context.helpers.add(name);\r\n            return name;\r\n        },\r\n        helperString(name) {\r\n            return `_${helperNameMap[context.helper(name)]}`;\r\n        },\r\n        replaceNode(node) {\r\n            /* istanbul ignore if */\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (!context.currentNode) {\r\n                    throw new Error(`Node being replaced is already removed.`);\r\n                }\r\n                if (!context.parent) {\r\n                    throw new Error(`Cannot replace root node.`);\r\n                }\r\n            }\r\n            context.parent.children[context.childIndex] = context.currentNode = node;\r\n        },\r\n        removeNode(node) {\r\n            if ((process.env.NODE_ENV !== 'production') && !context.parent) {\r\n                throw new Error(`Cannot remove root node.`);\r\n            }\r\n            const list = context.parent.children;\r\n            const removalIndex = node\r\n                ? list.indexOf(node)\r\n                : context.currentNode\r\n                    ? context.childIndex\r\n                    : -1;\r\n            /* istanbul ignore if */\r\n            if ((process.env.NODE_ENV !== 'production') && removalIndex < 0) {\r\n                throw new Error(`node being removed is not a child of current parent`);\r\n            }\r\n            if (!node || node === context.currentNode) {\r\n                // current node removed\r\n                context.currentNode = null;\r\n                context.onNodeRemoved();\r\n            }\r\n            else {\r\n                // sibling node removed\r\n                if (context.childIndex > removalIndex) {\r\n                    context.childIndex--;\r\n                    context.onNodeRemoved();\r\n                }\r\n            }\r\n            context.parent.children.splice(removalIndex, 1);\r\n        },\r\n        onNodeRemoved: () => { },\r\n        addIdentifiers(exp) {\r\n        },\r\n        removeIdentifiers(exp) {\r\n        },\r\n        hoist(exp) {\r\n            context.hoists.push(exp);\r\n            const identifier = createSimpleExpression(`_hoisted_${context.hoists.length}`, false, exp.loc, true);\r\n            identifier.hoisted = exp;\r\n            return identifier;\r\n        },\r\n        cache(exp, isVNode = false) {\r\n            return createCacheExpression(++context.cached, exp, isVNode);\r\n        }\r\n    };\r\n    return context;\r\n}\r\nfunction transform(root, options) {\r\n    const context = createTransformContext(root, options);\r\n    traverseNode(root, context);\r\n    if (options.hoistStatic) {\r\n        hoistStatic(root, context);\r\n    }\r\n    if (!options.ssr) {\r\n        createRootCodegen(root, context);\r\n    }\r\n    // finalize meta information\r\n    root.helpers = [...context.helpers];\r\n    root.components = [...context.components];\r\n    root.directives = [...context.directives];\r\n    root.imports = [...context.imports];\r\n    root.hoists = context.hoists;\r\n    root.temps = context.temps;\r\n    root.cached = context.cached;\r\n}\r\nfunction createRootCodegen(root, context) {\r\n    const { helper } = context;\r\n    const { children } = root;\r\n    if (children.length === 1) {\r\n        const child = children[0];\r\n        // if the single child is an element, turn it into a block.\r\n        if (isSingleElementRoot(root, child) && child.codegenNode) {\r\n            // single element root is never hoisted so codegenNode will never be\r\n            // SimpleExpressionNode\r\n            const codegenNode = child.codegenNode;\r\n            if (codegenNode.type === 13 /* VNODE_CALL */) {\r\n                codegenNode.isBlock = true;\r\n                helper(OPEN_BLOCK);\r\n                helper(CREATE_BLOCK);\r\n            }\r\n            root.codegenNode = codegenNode;\r\n        }\r\n        else {\r\n            // - single <slot/>, IfNode, ForNode: already blocks.\r\n            // - single text node: always patched.\r\n            // root codegen falls through via genNode()\r\n            root.codegenNode = child;\r\n        }\r\n    }\r\n    else if (children.length > 1) {\r\n        // root has multiple nodes - return a fragment block.\r\n        root.codegenNode = createVNodeCall(context, helper(FRAGMENT), undefined, root.children, `${64 /* STABLE_FRAGMENT */} /* ${PatchFlagNames[64 /* STABLE_FRAGMENT */]} */`, undefined, undefined, true);\r\n    }\r\n    else ;\r\n}\r\nfunction traverseChildren(parent, context) {\r\n    let i = 0;\r\n    const nodeRemoved = () => {\r\n        i--;\r\n    };\r\n    for (; i < parent.children.length; i++) {\r\n        const child = parent.children[i];\r\n        if (isString(child))\r\n            continue;\r\n        context.parent = parent;\r\n        context.childIndex = i;\r\n        context.onNodeRemoved = nodeRemoved;\r\n        traverseNode(child, context);\r\n    }\r\n}\r\nfunction traverseNode(node, context) {\r\n    context.currentNode = node;\r\n    // apply transform plugins\r\n    const { nodeTransforms } = context;\r\n    const exitFns = [];\r\n    for (let i = 0; i < nodeTransforms.length; i++) {\r\n        const onExit = nodeTransforms[i](node, context);\r\n        if (onExit) {\r\n            if (isArray(onExit)) {\r\n                exitFns.push(...onExit);\r\n            }\r\n            else {\r\n                exitFns.push(onExit);\r\n            }\r\n        }\r\n        if (!context.currentNode) {\r\n            // node was removed\r\n            return;\r\n        }\r\n        else {\r\n            // node may have been replaced\r\n            node = context.currentNode;\r\n        }\r\n    }\r\n    switch (node.type) {\r\n        case 3 /* COMMENT */:\r\n            if (!context.ssr) {\r\n                // inject import for the Comment symbol, which is needed for creating\r\n                // comment nodes with `createVNode`\r\n                context.helper(CREATE_COMMENT);\r\n            }\r\n            break;\r\n        case 5 /* INTERPOLATION */:\r\n            // no need to traverse, but we need to inject toString helper\r\n            if (!context.ssr) {\r\n                context.helper(TO_DISPLAY_STRING);\r\n            }\r\n            break;\r\n        // for container types, further traverse downwards\r\n        case 9 /* IF */:\r\n            for (let i = 0; i < node.branches.length; i++) {\r\n                traverseNode(node.branches[i], context);\r\n            }\r\n            break;\r\n        case 10 /* IF_BRANCH */:\r\n        case 11 /* FOR */:\r\n        case 1 /* ELEMENT */:\r\n        case 0 /* ROOT */:\r\n            traverseChildren(node, context);\r\n            break;\r\n    }\r\n    // exit transforms\r\n    context.currentNode = node;\r\n    let i = exitFns.length;\r\n    while (i--) {\r\n        exitFns[i]();\r\n    }\r\n}\r\nfunction createStructuralDirectiveTransform(name, fn) {\r\n    const matches = isString(name)\r\n        ? (n) => n === name\r\n        : (n) => name.test(n);\r\n    return (node, context) => {\r\n        if (node.type === 1 /* ELEMENT */) {\r\n            const { props } = node;\r\n            // structural directive transforms are not concerned with slots\r\n            // as they are handled separately in vSlot.ts\r\n            if (node.tagType === 3 /* TEMPLATE */ && props.some(isVSlot)) {\r\n                return;\r\n            }\r\n            const exitFns = [];\r\n            for (let i = 0; i < props.length; i++) {\r\n                const prop = props[i];\r\n                if (prop.type === 7 /* DIRECTIVE */ && matches(prop.name)) {\r\n                    // structural directives are removed to avoid infinite recursion\r\n                    // also we remove them *before* applying so that it can further\r\n                    // traverse itself in case it moves the node around\r\n                    props.splice(i, 1);\r\n                    i--;\r\n                    const onExit = fn(node, prop, context);\r\n                    if (onExit)\r\n                        exitFns.push(onExit);\r\n                }\r\n            }\r\n            return exitFns;\r\n        }\r\n    };\r\n}\n\nconst PURE_ANNOTATION = `/*#__PURE__*/`;\r\nfunction createCodegenContext(ast, { mode = 'function', prefixIdentifiers = mode === 'module', sourceMap = false, filename = `template.vue.html`, scopeId = null, optimizeImports = false, runtimeGlobalName = `Vue`, runtimeModuleName = `vue`, ssr = false }) {\r\n    const context = {\r\n        mode,\r\n        prefixIdentifiers,\r\n        sourceMap,\r\n        filename,\r\n        scopeId,\r\n        optimizeImports,\r\n        runtimeGlobalName,\r\n        runtimeModuleName,\r\n        ssr,\r\n        source: ast.loc.source,\r\n        code: ``,\r\n        column: 1,\r\n        line: 1,\r\n        offset: 0,\r\n        indentLevel: 0,\r\n        pure: false,\r\n        map: undefined,\r\n        helper(key) {\r\n            return `_${helperNameMap[key]}`;\r\n        },\r\n        push(code, node) {\r\n            context.code += code;\r\n        },\r\n        indent() {\r\n            newline(++context.indentLevel);\r\n        },\r\n        deindent(withoutNewLine = false) {\r\n            if (withoutNewLine) {\r\n                --context.indentLevel;\r\n            }\r\n            else {\r\n                newline(--context.indentLevel);\r\n            }\r\n        },\r\n        newline() {\r\n            newline(context.indentLevel);\r\n        }\r\n    };\r\n    function newline(n) {\r\n        context.push('\\n' + `  `.repeat(n));\r\n    }\r\n    return context;\r\n}\r\nfunction generate(ast, options = {}) {\r\n    const context = createCodegenContext(ast, options);\r\n    if (options.onContextCreated)\r\n        options.onContextCreated(context);\r\n    const { mode, push, prefixIdentifiers, indent, deindent, newline, scopeId, ssr } = context;\r\n    const hasHelpers = ast.helpers.length > 0;\r\n    const useWithBlock = !prefixIdentifiers && mode !== 'module';\r\n    // preambles\r\n    {\r\n        genFunctionPreamble(ast, context);\r\n    }\r\n    // binding optimizations\r\n    const optimizeSources = options.bindingMetadata\r\n        ? `, $props, $setup, $data, $options`\r\n        : ``;\r\n    // enter render function\r\n    if (!ssr) {\r\n        push(`function render(_ctx, _cache${optimizeSources}) {`);\r\n    }\r\n    else {\r\n        push(`function ssrRender(_ctx, _push, _parent, _attrs${optimizeSources}) {`);\r\n    }\r\n    indent();\r\n    if (useWithBlock) {\r\n        push(`with (_ctx) {`);\r\n        indent();\r\n        // function mode const declarations should be inside with block\r\n        // also they should be renamed to avoid collision with user properties\r\n        if (hasHelpers) {\r\n            push(`const { ${ast.helpers\r\n                .map(s => `${helperNameMap[s]}: _${helperNameMap[s]}`)\r\n                .join(', ')} } = _Vue`);\r\n            push(`\\n`);\r\n            newline();\r\n        }\r\n    }\r\n    // generate asset resolution statements\r\n    if (ast.components.length) {\r\n        genAssets(ast.components, 'component', context);\r\n        if (ast.directives.length || ast.temps > 0) {\r\n            newline();\r\n        }\r\n    }\r\n    if (ast.directives.length) {\r\n        genAssets(ast.directives, 'directive', context);\r\n        if (ast.temps > 0) {\r\n            newline();\r\n        }\r\n    }\r\n    if (ast.temps > 0) {\r\n        push(`let `);\r\n        for (let i = 0; i < ast.temps; i++) {\r\n            push(`${i > 0 ? `, ` : ``}_temp${i}`);\r\n        }\r\n    }\r\n    if (ast.components.length || ast.directives.length || ast.temps) {\r\n        push(`\\n`);\r\n        newline();\r\n    }\r\n    // generate the VNode tree expression\r\n    if (!ssr) {\r\n        push(`return `);\r\n    }\r\n    if (ast.codegenNode) {\r\n        genNode(ast.codegenNode, context);\r\n    }\r\n    else {\r\n        push(`null`);\r\n    }\r\n    if (useWithBlock) {\r\n        deindent();\r\n        push(`}`);\r\n    }\r\n    deindent();\r\n    push(`}`);\r\n    return {\r\n        ast,\r\n        code: context.code,\r\n        // SourceMapGenerator does have toJSON() method but it's not in the types\r\n        map: context.map ? context.map.toJSON() : undefined\r\n    };\r\n}\r\nfunction genFunctionPreamble(ast, context) {\r\n    const { ssr, prefixIdentifiers, push, newline, runtimeModuleName, runtimeGlobalName } = context;\r\n    const VueBinding =  runtimeGlobalName;\r\n    const aliasHelper = (s) => `${helperNameMap[s]}: _${helperNameMap[s]}`;\r\n    // Generate const declaration for helpers\r\n    // In prefix mode, we place the const declaration at top so it's done\r\n    // only once; But if we not prefixing, we place the declaration inside the\r\n    // with block so it doesn't incur the `in` check cost for every helper access.\r\n    if (ast.helpers.length > 0) {\r\n        {\r\n            // \"with\" mode.\r\n            // save Vue in a separate variable to avoid collision\r\n            push(`const _Vue = ${VueBinding}\\n`);\r\n            // in \"with\" mode, helpers are declared inside the with block to avoid\r\n            // has check cost, but hoists are lifted out of the function - we need\r\n            // to provide the helper here.\r\n            if (ast.hoists.length) {\r\n                const staticHelpers = [\r\n                    CREATE_VNODE,\r\n                    CREATE_COMMENT,\r\n                    CREATE_TEXT,\r\n                    CREATE_STATIC\r\n                ]\r\n                    .filter(helper => ast.helpers.includes(helper))\r\n                    .map(aliasHelper)\r\n                    .join(', ');\r\n                push(`const { ${staticHelpers} } = _Vue\\n`);\r\n            }\r\n        }\r\n    }\r\n    genHoists(ast.hoists, context);\r\n    newline();\r\n    push(`return `);\r\n}\r\nfunction genAssets(assets, type, { helper, push, newline }) {\r\n    const resolver = helper(type === 'component' ? RESOLVE_COMPONENT : RESOLVE_DIRECTIVE);\r\n    for (let i = 0; i < assets.length; i++) {\r\n        const id = assets[i];\r\n        push(`const ${toValidAssetId(id, type)} = ${resolver}(${JSON.stringify(id)})`);\r\n        if (i < assets.length - 1) {\r\n            newline();\r\n        }\r\n    }\r\n}\r\nfunction genHoists(hoists, context) {\r\n    if (!hoists.length) {\r\n        return;\r\n    }\r\n    context.pure = true;\r\n    const { push, newline, helper, scopeId, mode } = context;\r\n    newline();\r\n    hoists.forEach((exp, i) => {\r\n        if (exp) {\r\n            push(`const _hoisted_${i + 1} = `);\r\n            genNode(exp, context);\r\n            newline();\r\n        }\r\n    });\r\n    context.pure = false;\r\n}\r\nfunction isText$1(n) {\r\n    return (isString(n) ||\r\n        n.type === 4 /* SIMPLE_EXPRESSION */ ||\r\n        n.type === 2 /* TEXT */ ||\r\n        n.type === 5 /* INTERPOLATION */ ||\r\n        n.type === 8 /* COMPOUND_EXPRESSION */);\r\n}\r\nfunction genNodeListAsArray(nodes, context) {\r\n    const multilines = nodes.length > 3 ||\r\n        (( (process.env.NODE_ENV !== 'production')) && nodes.some(n => isArray(n) || !isText$1(n)));\r\n    context.push(`[`);\r\n    multilines && context.indent();\r\n    genNodeList(nodes, context, multilines);\r\n    multilines && context.deindent();\r\n    context.push(`]`);\r\n}\r\nfunction genNodeList(nodes, context, multilines = false, comma = true) {\r\n    const { push, newline } = context;\r\n    for (let i = 0; i < nodes.length; i++) {\r\n        const node = nodes[i];\r\n        if (isString(node)) {\r\n            push(node);\r\n        }\r\n        else if (isArray(node)) {\r\n            genNodeListAsArray(node, context);\r\n        }\r\n        else {\r\n            genNode(node, context);\r\n        }\r\n        if (i < nodes.length - 1) {\r\n            if (multilines) {\r\n                comma && push(',');\r\n                newline();\r\n            }\r\n            else {\r\n                comma && push(', ');\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction genNode(node, context) {\r\n    if (isString(node)) {\r\n        context.push(node);\r\n        return;\r\n    }\r\n    if (isSymbol(node)) {\r\n        context.push(context.helper(node));\r\n        return;\r\n    }\r\n    switch (node.type) {\r\n        case 1 /* ELEMENT */:\r\n        case 9 /* IF */:\r\n        case 11 /* FOR */:\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                assert(node.codegenNode != null, `Codegen node is missing for element/if/for node. ` +\r\n                    `Apply appropriate transforms first.`);\r\n            genNode(node.codegenNode, context);\r\n            break;\r\n        case 2 /* TEXT */:\r\n            genText(node, context);\r\n            break;\r\n        case 4 /* SIMPLE_EXPRESSION */:\r\n            genExpression(node, context);\r\n            break;\r\n        case 5 /* INTERPOLATION */:\r\n            genInterpolation(node, context);\r\n            break;\r\n        case 12 /* TEXT_CALL */:\r\n            genNode(node.codegenNode, context);\r\n            break;\r\n        case 8 /* COMPOUND_EXPRESSION */:\r\n            genCompoundExpression(node, context);\r\n            break;\r\n        case 3 /* COMMENT */:\r\n            genComment(node, context);\r\n            break;\r\n        case 13 /* VNODE_CALL */:\r\n            genVNodeCall(node, context);\r\n            break;\r\n        case 14 /* JS_CALL_EXPRESSION */:\r\n            genCallExpression(node, context);\r\n            break;\r\n        case 15 /* JS_OBJECT_EXPRESSION */:\r\n            genObjectExpression(node, context);\r\n            break;\r\n        case 17 /* JS_ARRAY_EXPRESSION */:\r\n            genArrayExpression(node, context);\r\n            break;\r\n        case 18 /* JS_FUNCTION_EXPRESSION */:\r\n            genFunctionExpression(node, context);\r\n            break;\r\n        case 19 /* JS_CONDITIONAL_EXPRESSION */:\r\n            genConditionalExpression(node, context);\r\n            break;\r\n        case 20 /* JS_CACHE_EXPRESSION */:\r\n            genCacheExpression(node, context);\r\n            break;\r\n        // SSR only types\r\n        case 21 /* JS_BLOCK_STATEMENT */:\r\n            break;\r\n        case 22 /* JS_TEMPLATE_LITERAL */:\r\n            break;\r\n        case 23 /* JS_IF_STATEMENT */:\r\n            break;\r\n        case 24 /* JS_ASSIGNMENT_EXPRESSION */:\r\n            break;\r\n        case 25 /* JS_SEQUENCE_EXPRESSION */:\r\n            break;\r\n        case 26 /* JS_RETURN_STATEMENT */:\r\n            break;\r\n        /* istanbul ignore next */\r\n        case 10 /* IF_BRANCH */:\r\n            // noop\r\n            break;\r\n        default:\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                assert(false, `unhandled codegen node type: ${node.type}`);\r\n                // make sure we exhaust all possible types\r\n                const exhaustiveCheck = node;\r\n                return exhaustiveCheck;\r\n            }\r\n    }\r\n}\r\nfunction genText(node, context) {\r\n    context.push(JSON.stringify(node.content), node);\r\n}\r\nfunction genExpression(node, context) {\r\n    const { content, isStatic } = node;\r\n    context.push(isStatic ? JSON.stringify(content) : content, node);\r\n}\r\nfunction genInterpolation(node, context) {\r\n    const { push, helper, pure } = context;\r\n    if (pure)\r\n        push(PURE_ANNOTATION);\r\n    push(`${helper(TO_DISPLAY_STRING)}(`);\r\n    genNode(node.content, context);\r\n    push(`)`);\r\n}\r\nfunction genCompoundExpression(node, context) {\r\n    for (let i = 0; i < node.children.length; i++) {\r\n        const child = node.children[i];\r\n        if (isString(child)) {\r\n            context.push(child);\r\n        }\r\n        else {\r\n            genNode(child, context);\r\n        }\r\n    }\r\n}\r\nfunction genExpressionAsPropertyKey(node, context) {\r\n    const { push } = context;\r\n    if (node.type === 8 /* COMPOUND_EXPRESSION */) {\r\n        push(`[`);\r\n        genCompoundExpression(node, context);\r\n        push(`]`);\r\n    }\r\n    else if (node.isStatic) {\r\n        // only quote keys if necessary\r\n        const text = isSimpleIdentifier(node.content)\r\n            ? node.content\r\n            : JSON.stringify(node.content);\r\n        push(text, node);\r\n    }\r\n    else {\r\n        push(`[${node.content}]`, node);\r\n    }\r\n}\r\nfunction genComment(node, context) {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const { push, helper, pure } = context;\r\n        if (pure) {\r\n            push(PURE_ANNOTATION);\r\n        }\r\n        push(`${helper(CREATE_COMMENT)}(${JSON.stringify(node.content)})`, node);\r\n    }\r\n}\r\nfunction genVNodeCall(node, context) {\r\n    const { push, helper, pure } = context;\r\n    const { tag, props, children, patchFlag, dynamicProps, directives, isBlock, disableTracking } = node;\r\n    if (directives) {\r\n        push(helper(WITH_DIRECTIVES) + `(`);\r\n    }\r\n    if (isBlock) {\r\n        push(`(${helper(OPEN_BLOCK)}(${disableTracking ? `true` : ``}), `);\r\n    }\r\n    if (pure) {\r\n        push(PURE_ANNOTATION);\r\n    }\r\n    push(helper(isBlock ? CREATE_BLOCK : CREATE_VNODE) + `(`, node);\r\n    genNodeList(genNullableArgs([tag, props, children, patchFlag, dynamicProps]), context);\r\n    push(`)`);\r\n    if (isBlock) {\r\n        push(`)`);\r\n    }\r\n    if (directives) {\r\n        push(`, `);\r\n        genNode(directives, context);\r\n        push(`)`);\r\n    }\r\n}\r\nfunction genNullableArgs(args) {\r\n    let i = args.length;\r\n    while (i--) {\r\n        if (args[i] != null)\r\n            break;\r\n    }\r\n    return args.slice(0, i + 1).map(arg => arg || `null`);\r\n}\r\n// JavaScript\r\nfunction genCallExpression(node, context) {\r\n    const { push, helper, pure } = context;\r\n    const callee = isString(node.callee) ? node.callee : helper(node.callee);\r\n    if (pure) {\r\n        push(PURE_ANNOTATION);\r\n    }\r\n    push(callee + `(`, node);\r\n    genNodeList(node.arguments, context);\r\n    push(`)`);\r\n}\r\nfunction genObjectExpression(node, context) {\r\n    const { push, indent, deindent, newline } = context;\r\n    const { properties } = node;\r\n    if (!properties.length) {\r\n        push(`{}`, node);\r\n        return;\r\n    }\r\n    const multilines = properties.length > 1 ||\r\n        (( (process.env.NODE_ENV !== 'production')) &&\r\n            properties.some(p => p.value.type !== 4 /* SIMPLE_EXPRESSION */));\r\n    push(multilines ? `{` : `{ `);\r\n    multilines && indent();\r\n    for (let i = 0; i < properties.length; i++) {\r\n        const { key, value } = properties[i];\r\n        // key\r\n        genExpressionAsPropertyKey(key, context);\r\n        push(`: `);\r\n        // value\r\n        genNode(value, context);\r\n        if (i < properties.length - 1) {\r\n            // will only reach this if it's multilines\r\n            push(`,`);\r\n            newline();\r\n        }\r\n    }\r\n    multilines && deindent();\r\n    push(multilines ? `}` : ` }`);\r\n}\r\nfunction genArrayExpression(node, context) {\r\n    genNodeListAsArray(node.elements, context);\r\n}\r\nfunction genFunctionExpression(node, context) {\r\n    const { push, indent, deindent, scopeId, mode } = context;\r\n    const { params, returns, body, newline, isSlot } = node;\r\n    if (isSlot) {\r\n        push(`_${helperNameMap[WITH_CTX]}(`);\r\n    }\r\n    push(`(`, node);\r\n    if (isArray(params)) {\r\n        genNodeList(params, context);\r\n    }\r\n    else if (params) {\r\n        genNode(params, context);\r\n    }\r\n    push(`) => `);\r\n    if (newline || body) {\r\n        push(`{`);\r\n        indent();\r\n    }\r\n    if (returns) {\r\n        if (newline) {\r\n            push(`return `);\r\n        }\r\n        if (isArray(returns)) {\r\n            genNodeListAsArray(returns, context);\r\n        }\r\n        else {\r\n            genNode(returns, context);\r\n        }\r\n    }\r\n    else if (body) {\r\n        genNode(body, context);\r\n    }\r\n    if (newline || body) {\r\n        deindent();\r\n        push(`}`);\r\n    }\r\n    if ( isSlot) {\r\n        push(`)`);\r\n    }\r\n}\r\nfunction genConditionalExpression(node, context) {\r\n    const { test, consequent, alternate, newline: needNewline } = node;\r\n    const { push, indent, deindent, newline } = context;\r\n    if (test.type === 4 /* SIMPLE_EXPRESSION */) {\r\n        const needsParens = !isSimpleIdentifier(test.content);\r\n        needsParens && push(`(`);\r\n        genExpression(test, context);\r\n        needsParens && push(`)`);\r\n    }\r\n    else {\r\n        push(`(`);\r\n        genNode(test, context);\r\n        push(`)`);\r\n    }\r\n    needNewline && indent();\r\n    context.indentLevel++;\r\n    needNewline || push(` `);\r\n    push(`? `);\r\n    genNode(consequent, context);\r\n    context.indentLevel--;\r\n    needNewline && newline();\r\n    needNewline || push(` `);\r\n    push(`: `);\r\n    const isNested = alternate.type === 19 /* JS_CONDITIONAL_EXPRESSION */;\r\n    if (!isNested) {\r\n        context.indentLevel++;\r\n    }\r\n    genNode(alternate, context);\r\n    if (!isNested) {\r\n        context.indentLevel--;\r\n    }\r\n    needNewline && deindent(true /* without newline */);\r\n}\r\nfunction genCacheExpression(node, context) {\r\n    const { push, helper, indent, deindent, newline } = context;\r\n    push(`_cache[${node.index}] || (`);\r\n    if (node.isVNode) {\r\n        indent();\r\n        push(`${helper(SET_BLOCK_TRACKING)}(-1),`);\r\n        newline();\r\n    }\r\n    push(`_cache[${node.index}] = `);\r\n    genNode(node.value, context);\r\n    if (node.isVNode) {\r\n        push(`,`);\r\n        newline();\r\n        push(`${helper(SET_BLOCK_TRACKING)}(1),`);\r\n        newline();\r\n        push(`_cache[${node.index}]`);\r\n        deindent();\r\n    }\r\n    push(`)`);\r\n}\n\n// these keywords should not appear inside expressions, but operators like\r\n// typeof, instanceof and in are allowed\r\nconst prohibitedKeywordRE = new RegExp('\\\\b' +\r\n    ('do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\r\n        'super,throw,while,yield,delete,export,import,return,switch,default,' +\r\n        'extends,finally,continue,debugger,function,arguments,typeof,void')\r\n        .split(',')\r\n        .join('\\\\b|\\\\b') +\r\n    '\\\\b');\r\n// strip strings in expressions\r\nconst stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\r\n/**\r\n * Validate a non-prefixed expression.\r\n * This is only called when using the in-browser runtime compiler since it\r\n * doesn't prefix expressions.\r\n */\r\nfunction validateBrowserExpression(node, context, asParams = false, asRawStatements = false) {\r\n    const exp = node.content;\r\n    // empty expressions are validated per-directive since some directives\r\n    // do allow empty expressions.\r\n    if (!exp.trim()) {\r\n        return;\r\n    }\r\n    try {\r\n        new Function(asRawStatements\r\n            ? ` ${exp} `\r\n            : `return ${asParams ? `(${exp}) => {}` : `(${exp})`}`);\r\n    }\r\n    catch (e) {\r\n        let message = e.message;\r\n        const keywordMatch = exp\r\n            .replace(stripStringRE, '')\r\n            .match(prohibitedKeywordRE);\r\n        if (keywordMatch) {\r\n            message = `avoid using JavaScript keyword as property name: \"${keywordMatch[0]}\"`;\r\n        }\r\n        context.onError(createCompilerError(43 /* X_INVALID_EXPRESSION */, node.loc, undefined, message));\r\n    }\r\n}\n\nconst isLiteralWhitelisted = /*#__PURE__*/ makeMap('true,false,null,this');\r\nconst transformExpression = (node, context) => {\r\n    if (node.type === 5 /* INTERPOLATION */) {\r\n        node.content = processExpression(node.content, context);\r\n    }\r\n    else if (node.type === 1 /* ELEMENT */) {\r\n        // handle directives on element\r\n        for (let i = 0; i < node.props.length; i++) {\r\n            const dir = node.props[i];\r\n            // do not process for v-on & v-for since they are special handled\r\n            if (dir.type === 7 /* DIRECTIVE */ && dir.name !== 'for') {\r\n                const exp = dir.exp;\r\n                const arg = dir.arg;\r\n                // do not process exp if this is v-on:arg - we need special handling\r\n                // for wrapping inline statements.\r\n                if (exp &&\r\n                    exp.type === 4 /* SIMPLE_EXPRESSION */ &&\r\n                    !(dir.name === 'on' && arg)) {\r\n                    dir.exp = processExpression(exp, context, \r\n                    // slot args must be processed as function params\r\n                    dir.name === 'slot');\r\n                }\r\n                if (arg && arg.type === 4 /* SIMPLE_EXPRESSION */ && !arg.isStatic) {\r\n                    dir.arg = processExpression(arg, context);\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n// Important: since this function uses Node.js only dependencies, it should\r\n// always be used with a leading !true check so that it can be\r\n// tree-shaken from the browser build.\r\nfunction processExpression(node, context, \r\n// some expressions like v-slot props & v-for aliases should be parsed as\r\n// function params\r\nasParams = false, \r\n// v-on handler values may contain multiple statements\r\nasRawStatements = false) {\r\n    if ((process.env.NODE_ENV !== 'production') && true) {\r\n        // simple in-browser validation (same logic in 2.x)\r\n        validateBrowserExpression(node, context, asParams, asRawStatements);\r\n        return node;\r\n    }\r\n    if (!context.prefixIdentifiers || !node.content.trim()) {\r\n        return node;\r\n    }\r\n    const { bindingMetadata } = context;\r\n    const prefix = (raw) => {\r\n        const source = hasOwn(bindingMetadata, raw)\r\n            ? `$` + bindingMetadata[raw]\r\n            : `_ctx`;\r\n        return `${source}.${raw}`;\r\n    };\r\n    // fast path if expression is a simple identifier.\r\n    const rawExp = node.content;\r\n    // bail on parens to prevent any possible function invocations.\r\n    const bailConstant = rawExp.indexOf(`(`) > -1;\r\n    if (isSimpleIdentifier(rawExp)) {\r\n        if (!asParams &&\r\n            !context.identifiers[rawExp] &&\r\n            !isGloballyWhitelisted(rawExp) &&\r\n            !isLiteralWhitelisted(rawExp)) {\r\n            node.content = prefix(rawExp);\r\n        }\r\n        else if (!context.identifiers[rawExp] && !bailConstant) {\r\n            // mark node constant for hoisting unless it's referring a scope variable\r\n            node.isConstant = true;\r\n        }\r\n        return node;\r\n    }\r\n    let ast;\r\n    // exp needs to be parsed differently:\r\n    // 1. Multiple inline statements (v-on, with presence of `;`): parse as raw\r\n    //    exp, but make sure to pad with spaces for consistent ranges\r\n    // 2. Expressions: wrap with parens (for e.g. object expressions)\r\n    // 3. Function arguments (v-for, v-slot): place in a function argument position\r\n    const source = asRawStatements\r\n        ? ` ${rawExp} `\r\n        : `(${rawExp})${asParams ? `=>{}` : ``}`;\r\n    try {\r\n        ast = parse(source, {\r\n            plugins: [...context.expressionPlugins, ...babelParserDefaultPlugins]\r\n        }).program;\r\n    }\r\n    catch (e) {\r\n        context.onError(createCompilerError(43 /* X_INVALID_EXPRESSION */, node.loc, undefined, e.message));\r\n        return node;\r\n    }\r\n    const ids = [];\r\n    const knownIds = Object.create(context.identifiers);\r\n    const isDuplicate = (node) => ids.some(id => id.start === node.start);\r\n    walk$1(ast, {\r\n        enter(node, parent) {\r\n            if (node.type === 'Identifier') {\r\n                if (!isDuplicate(node)) {\r\n                    const needPrefix = shouldPrefix(node, parent);\r\n                    if (!knownIds[node.name] && needPrefix) {\r\n                        if (isPropertyShorthand(node, parent)) {\r\n                            // property shorthand like { foo }, we need to add the key since we\r\n                            // rewrite the value\r\n                            node.prefix = `${node.name}: `;\r\n                        }\r\n                        node.name = prefix(node.name);\r\n                        ids.push(node);\r\n                    }\r\n                    else if (!isStaticPropertyKey(node, parent)) {\r\n                        // The identifier is considered constant unless it's pointing to a\r\n                        // scope variable (a v-for alias, or a v-slot prop)\r\n                        if (!(needPrefix && knownIds[node.name]) && !bailConstant) {\r\n                            node.isConstant = true;\r\n                        }\r\n                        // also generate sub-expressions for other identifiers for better\r\n                        // source map support. (except for property keys which are static)\r\n                        ids.push(node);\r\n                    }\r\n                }\r\n            }\r\n            else if (isFunction(node)) {\r\n                // walk function expressions and add its arguments to known identifiers\r\n                // so that we don't prefix them\r\n                node.params.forEach(p => walk$1(p, {\r\n                    enter(child, parent) {\r\n                        if (child.type === 'Identifier' &&\r\n                            // do not record as scope variable if is a destructured key\r\n                            !isStaticPropertyKey(child, parent) &&\r\n                            // do not record if this is a default value\r\n                            // assignment of a destructured variable\r\n                            !(parent &&\r\n                                parent.type === 'AssignmentPattern' &&\r\n                                parent.right === child)) {\r\n                            const { name } = child;\r\n                            if (node.scopeIds && node.scopeIds.has(name)) {\r\n                                return;\r\n                            }\r\n                            if (name in knownIds) {\r\n                                knownIds[name]++;\r\n                            }\r\n                            else {\r\n                                knownIds[name] = 1;\r\n                            }\r\n                            (node.scopeIds || (node.scopeIds = new Set())).add(name);\r\n                        }\r\n                    }\r\n                }));\r\n            }\r\n        },\r\n        leave(node) {\r\n            if (node !== ast.body[0].expression && node.scopeIds) {\r\n                node.scopeIds.forEach((id) => {\r\n                    knownIds[id]--;\r\n                    if (knownIds[id] === 0) {\r\n                        delete knownIds[id];\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    });\r\n    // We break up the compound expression into an array of strings and sub\r\n    // expressions (for identifiers that have been prefixed). In codegen, if\r\n    // an ExpressionNode has the `.children` property, it will be used instead of\r\n    // `.content`.\r\n    const children = [];\r\n    ids.sort((a, b) => a.start - b.start);\r\n    ids.forEach((id, i) => {\r\n        // range is offset by -1 due to the wrapping parens when parsed\r\n        const start = id.start - 1;\r\n        const end = id.end - 1;\r\n        const last = ids[i - 1];\r\n        const leadingText = rawExp.slice(last ? last.end - 1 : 0, start);\r\n        if (leadingText.length || id.prefix) {\r\n            children.push(leadingText + (id.prefix || ``));\r\n        }\r\n        const source = rawExp.slice(start, end);\r\n        children.push(createSimpleExpression(id.name, false, {\r\n            source,\r\n            start: advancePositionWithClone(node.loc.start, source, start),\r\n            end: advancePositionWithClone(node.loc.start, source, end)\r\n        }, id.isConstant /* isConstant */));\r\n        if (i === ids.length - 1 && end < rawExp.length) {\r\n            children.push(rawExp.slice(end));\r\n        }\r\n    });\r\n    let ret;\r\n    if (children.length) {\r\n        ret = createCompoundExpression(children, node.loc);\r\n    }\r\n    else {\r\n        ret = node;\r\n        ret.isConstant = !bailConstant;\r\n    }\r\n    ret.identifiers = Object.keys(knownIds);\r\n    return ret;\r\n}\r\nconst isFunction = (node) => {\r\n    return /Function(?:Expression|Declaration)$|Method$/.test(node.type);\r\n};\r\nconst isStaticProperty = (node) => node &&\r\n    (node.type === 'ObjectProperty' || node.type === 'ObjectMethod') &&\r\n    !node.computed;\r\nconst isPropertyShorthand = (node, parent) => {\r\n    return (isStaticProperty(parent) &&\r\n        parent.value === node &&\r\n        parent.key.type === 'Identifier' &&\r\n        parent.key.name === node.name &&\r\n        parent.key.start === node.start);\r\n};\r\nconst isStaticPropertyKey = (node, parent) => isStaticProperty(parent) && parent.key === node;\r\nfunction shouldPrefix(identifier, parent) {\r\n    if (!(isFunction(parent) &&\r\n        // not id of a FunctionDeclaration\r\n        (parent.id === identifier ||\r\n            // not a params of a function\r\n            parent.params.includes(identifier))) &&\r\n        // not a key of Property\r\n        !isStaticPropertyKey(identifier, parent) &&\r\n        // not a property of a MemberExpression\r\n        !((parent.type === 'MemberExpression' ||\r\n            parent.type === 'OptionalMemberExpression') &&\r\n            parent.property === identifier &&\r\n            !parent.computed) &&\r\n        // not in an Array destructure pattern\r\n        !(parent.type === 'ArrayPattern') &&\r\n        // skip whitelisted globals\r\n        !isGloballyWhitelisted(identifier.name) &&\r\n        // special case for webpack compilation\r\n        identifier.name !== `require` &&\r\n        // is a special keyword but parsed as identifier\r\n        identifier.name !== `arguments`) {\r\n        return true;\r\n    }\r\n}\n\nconst transformIf = createStructuralDirectiveTransform(/^(if|else|else-if)$/, (node, dir, context) => {\r\n    return processIf(node, dir, context, (ifNode, branch, isRoot) => {\r\n        // #1587: We need to dynamically increment the key based on the current\r\n        // node's sibling nodes, since chained v-if/else branches are\r\n        // rendered at the same depth\r\n        const siblings = context.parent.children;\r\n        let i = siblings.indexOf(ifNode);\r\n        let key = 0;\r\n        while (i-- >= 0) {\r\n            const sibling = siblings[i];\r\n            if (sibling && sibling.type === 9 /* IF */) {\r\n                key += sibling.branches.length;\r\n            }\r\n        }\r\n        // Exit callback. Complete the codegenNode when all children have been\r\n        // transformed.\r\n        return () => {\r\n            if (isRoot) {\r\n                ifNode.codegenNode = createCodegenNodeForBranch(branch, key, context);\r\n            }\r\n            else {\r\n                // attach this branch's codegen node to the v-if root.\r\n                const parentCondition = getParentCondition(ifNode.codegenNode);\r\n                parentCondition.alternate = createCodegenNodeForBranch(branch, key + ifNode.branches.length - 1, context);\r\n            }\r\n        };\r\n    });\r\n});\r\n// target-agnostic transform used for both Client and SSR\r\nfunction processIf(node, dir, context, processCodegen) {\r\n    if (dir.name !== 'else' &&\r\n        (!dir.exp || !dir.exp.content.trim())) {\r\n        const loc = dir.exp ? dir.exp.loc : node.loc;\r\n        context.onError(createCompilerError(27 /* X_V_IF_NO_EXPRESSION */, dir.loc));\r\n        dir.exp = createSimpleExpression(`true`, false, loc);\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && true && dir.exp) {\r\n        validateBrowserExpression(dir.exp, context);\r\n    }\r\n    if (dir.name === 'if') {\r\n        const branch = createIfBranch(node, dir);\r\n        const ifNode = {\r\n            type: 9 /* IF */,\r\n            loc: node.loc,\r\n            branches: [branch]\r\n        };\r\n        context.replaceNode(ifNode);\r\n        if (processCodegen) {\r\n            return processCodegen(ifNode, branch, true);\r\n        }\r\n    }\r\n    else {\r\n        // locate the adjacent v-if\r\n        const siblings = context.parent.children;\r\n        const comments = [];\r\n        let i = siblings.indexOf(node);\r\n        while (i-- >= -1) {\r\n            const sibling = siblings[i];\r\n            if ((process.env.NODE_ENV !== 'production') && sibling && sibling.type === 3 /* COMMENT */) {\r\n                context.removeNode(sibling);\r\n                comments.unshift(sibling);\r\n                continue;\r\n            }\r\n            if (sibling &&\r\n                sibling.type === 2 /* TEXT */ &&\r\n                !sibling.content.trim().length) {\r\n                context.removeNode(sibling);\r\n                continue;\r\n            }\r\n            if (sibling && sibling.type === 9 /* IF */) {\r\n                // move the node to the if node's branches\r\n                context.removeNode();\r\n                const branch = createIfBranch(node, dir);\r\n                if ((process.env.NODE_ENV !== 'production') && comments.length) {\r\n                    branch.children = [...comments, ...branch.children];\r\n                }\r\n                // check if user is forcing same key on different branches\r\n                if ((process.env.NODE_ENV !== 'production') || !true) {\r\n                    const key = branch.userKey;\r\n                    if (key) {\r\n                        sibling.branches.forEach(({ userKey }) => {\r\n                            if (isSameKey(userKey, key)) {\r\n                                context.onError(createCompilerError(28 /* X_V_IF_SAME_KEY */, branch.userKey.loc));\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                sibling.branches.push(branch);\r\n                const onExit = processCodegen && processCodegen(sibling, branch, false);\r\n                // since the branch was removed, it will not be traversed.\r\n                // make sure to traverse here.\r\n                traverseNode(branch, context);\r\n                // call on exit\r\n                if (onExit)\r\n                    onExit();\r\n                // make sure to reset currentNode after traversal to indicate this\r\n                // node has been removed.\r\n                context.currentNode = null;\r\n            }\r\n            else {\r\n                context.onError(createCompilerError(29 /* X_V_ELSE_NO_ADJACENT_IF */, node.loc));\r\n            }\r\n            break;\r\n        }\r\n    }\r\n}\r\nfunction createIfBranch(node, dir) {\r\n    return {\r\n        type: 10 /* IF_BRANCH */,\r\n        loc: node.loc,\r\n        condition: dir.name === 'else' ? undefined : dir.exp,\r\n        children: node.tagType === 3 /* TEMPLATE */ && !findDir(node, 'for')\r\n            ? node.children\r\n            : [node],\r\n        userKey: findProp(node, `key`)\r\n    };\r\n}\r\nfunction createCodegenNodeForBranch(branch, keyIndex, context) {\r\n    if (branch.condition) {\r\n        return createConditionalExpression(branch.condition, createChildrenCodegenNode(branch, keyIndex, context), \r\n        // make sure to pass in asBlock: true so that the comment node call\r\n        // closes the current block.\r\n        createCallExpression(context.helper(CREATE_COMMENT), [\r\n            (process.env.NODE_ENV !== 'production') ? '\"v-if\"' : '\"\"',\r\n            'true'\r\n        ]));\r\n    }\r\n    else {\r\n        return createChildrenCodegenNode(branch, keyIndex, context);\r\n    }\r\n}\r\nfunction createChildrenCodegenNode(branch, keyIndex, context) {\r\n    const { helper } = context;\r\n    const keyProperty = createObjectProperty(`key`, createSimpleExpression(`${keyIndex}`, false, locStub, true));\r\n    const { children } = branch;\r\n    const firstChild = children[0];\r\n    const needFragmentWrapper = children.length !== 1 || firstChild.type !== 1 /* ELEMENT */;\r\n    if (needFragmentWrapper) {\r\n        if (children.length === 1 && firstChild.type === 11 /* FOR */) {\r\n            // optimize away nested fragments when child is a ForNode\r\n            const vnodeCall = firstChild.codegenNode;\r\n            injectProp(vnodeCall, keyProperty, context);\r\n            return vnodeCall;\r\n        }\r\n        else {\r\n            return createVNodeCall(context, helper(FRAGMENT), createObjectExpression([keyProperty]), children, `${64 /* STABLE_FRAGMENT */} /* ${PatchFlagNames[64 /* STABLE_FRAGMENT */]} */`, undefined, undefined, true, false, branch.loc);\r\n        }\r\n    }\r\n    else {\r\n        const vnodeCall = firstChild\r\n            .codegenNode;\r\n        // Change createVNode to createBlock.\r\n        if (vnodeCall.type === 13 /* VNODE_CALL */) {\r\n            vnodeCall.isBlock = true;\r\n            helper(OPEN_BLOCK);\r\n            helper(CREATE_BLOCK);\r\n        }\r\n        // inject branch key\r\n        injectProp(vnodeCall, keyProperty, context);\r\n        return vnodeCall;\r\n    }\r\n}\r\nfunction isSameKey(a, b) {\r\n    if (!a || a.type !== b.type) {\r\n        return false;\r\n    }\r\n    if (a.type === 6 /* ATTRIBUTE */) {\r\n        if (a.value.content !== b.value.content) {\r\n            return false;\r\n        }\r\n    }\r\n    else {\r\n        // directive\r\n        const exp = a.exp;\r\n        const branchExp = b.exp;\r\n        if (exp.type !== branchExp.type) {\r\n            return false;\r\n        }\r\n        if (exp.type !== 4 /* SIMPLE_EXPRESSION */ ||\r\n            (exp.isStatic !== branchExp.isStatic ||\r\n                exp.content !== branchExp.content)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction getParentCondition(node) {\r\n    while (true) {\r\n        if (node.type === 19 /* JS_CONDITIONAL_EXPRESSION */) {\r\n            if (node.alternate.type === 19 /* JS_CONDITIONAL_EXPRESSION */) {\r\n                node = node.alternate;\r\n            }\r\n            else {\r\n                return node;\r\n            }\r\n        }\r\n        else if (node.type === 20 /* JS_CACHE_EXPRESSION */) {\r\n            node = node.value;\r\n        }\r\n    }\r\n}\n\nconst transformFor = createStructuralDirectiveTransform('for', (node, dir, context) => {\r\n    const { helper } = context;\r\n    return processFor(node, dir, context, forNode => {\r\n        // create the loop render function expression now, and add the\r\n        // iterator on exit after all children have been traversed\r\n        const renderExp = createCallExpression(helper(RENDER_LIST), [\r\n            forNode.source\r\n        ]);\r\n        const keyProp = findProp(node, `key`);\r\n        const keyProperty = keyProp\r\n            ? createObjectProperty(`key`, keyProp.type === 6 /* ATTRIBUTE */\r\n                ? createSimpleExpression(keyProp.value.content, true)\r\n                : keyProp.exp)\r\n            : null;\r\n        const isStableFragment = forNode.source.type === 4 /* SIMPLE_EXPRESSION */ &&\r\n            forNode.source.isConstant;\r\n        const fragmentFlag = isStableFragment\r\n            ? 64 /* STABLE_FRAGMENT */\r\n            : keyProp\r\n                ? 128 /* KEYED_FRAGMENT */\r\n                : 256 /* UNKEYED_FRAGMENT */;\r\n        forNode.codegenNode = createVNodeCall(context, helper(FRAGMENT), undefined, renderExp, `${fragmentFlag} /* ${PatchFlagNames[fragmentFlag]} */`, undefined, undefined, true /* isBlock */, !isStableFragment /* disableTracking */, node.loc);\r\n        return () => {\r\n            // finish the codegen now that all children have been traversed\r\n            let childBlock;\r\n            const isTemplate = isTemplateNode(node);\r\n            const { children } = forNode;\r\n            // check <template v-for> key placement\r\n            if (((process.env.NODE_ENV !== 'production') || !true) && isTemplate) {\r\n                node.children.some(c => {\r\n                    if (c.type === 1 /* ELEMENT */) {\r\n                        const key = findProp(c, 'key');\r\n                        if (key) {\r\n                            context.onError(createCompilerError(32 /* X_V_FOR_TEMPLATE_KEY_PLACEMENT */, key.loc));\r\n                            return true;\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            const needFragmentWrapper = children.length !== 1 || children[0].type !== 1 /* ELEMENT */;\r\n            const slotOutlet = isSlotOutlet(node)\r\n                ? node\r\n                : isTemplate &&\r\n                    node.children.length === 1 &&\r\n                    isSlotOutlet(node.children[0])\r\n                    ? node.children[0] // api-extractor somehow fails to infer this\r\n                    : null;\r\n            if (slotOutlet) {\r\n                // <slot v-for=\"...\"> or <template v-for=\"...\"><slot/></template>\r\n                childBlock = slotOutlet.codegenNode;\r\n                if (isTemplate && keyProperty) {\r\n                    // <template v-for=\"...\" :key=\"...\"><slot/></template>\r\n                    // we need to inject the key to the renderSlot() call.\r\n                    // the props for renderSlot is passed as the 3rd argument.\r\n                    injectProp(childBlock, keyProperty, context);\r\n                }\r\n            }\r\n            else if (needFragmentWrapper) {\r\n                // <template v-for=\"...\"> with text or multi-elements\r\n                // should generate a fragment block for each loop\r\n                childBlock = createVNodeCall(context, helper(FRAGMENT), keyProperty ? createObjectExpression([keyProperty]) : undefined, node.children, `${64 /* STABLE_FRAGMENT */} /* ${PatchFlagNames[64 /* STABLE_FRAGMENT */]} */`, undefined, undefined, true);\r\n            }\r\n            else {\r\n                // Normal element v-for. Directly use the child's codegenNode\r\n                // but mark it as a block.\r\n                childBlock = children[0]\r\n                    .codegenNode;\r\n                if (isTemplate && keyProperty) {\r\n                    injectProp(childBlock, keyProperty, context);\r\n                }\r\n                childBlock.isBlock = !isStableFragment;\r\n                if (childBlock.isBlock) {\r\n                    helper(OPEN_BLOCK);\r\n                    helper(CREATE_BLOCK);\r\n                }\r\n            }\r\n            renderExp.arguments.push(createFunctionExpression(createForLoopParams(forNode.parseResult), childBlock, true /* force newline */));\r\n        };\r\n    });\r\n});\r\n// target-agnostic transform used for both Client and SSR\r\nfunction processFor(node, dir, context, processCodegen) {\r\n    if (!dir.exp) {\r\n        context.onError(createCompilerError(30 /* X_V_FOR_NO_EXPRESSION */, dir.loc));\r\n        return;\r\n    }\r\n    const parseResult = parseForExpression(\r\n    // can only be simple expression because vFor transform is applied\r\n    // before expression transform.\r\n    dir.exp, context);\r\n    if (!parseResult) {\r\n        context.onError(createCompilerError(31 /* X_V_FOR_MALFORMED_EXPRESSION */, dir.loc));\r\n        return;\r\n    }\r\n    const { addIdentifiers, removeIdentifiers, scopes } = context;\r\n    const { source, value, key, index } = parseResult;\r\n    const forNode = {\r\n        type: 11 /* FOR */,\r\n        loc: dir.loc,\r\n        source,\r\n        valueAlias: value,\r\n        keyAlias: key,\r\n        objectIndexAlias: index,\r\n        parseResult,\r\n        children: isTemplateNode(node) ? node.children : [node]\r\n    };\r\n    context.replaceNode(forNode);\r\n    // bookkeeping\r\n    scopes.vFor++;\r\n    const onExit = processCodegen && processCodegen(forNode);\r\n    return () => {\r\n        scopes.vFor--;\r\n        if (onExit)\r\n            onExit();\r\n    };\r\n}\r\nconst forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/;\r\n// This regex doesn't cover the case if key or index aliases have destructuring,\r\n// but those do not make sense in the first place, so this works in practice.\r\nconst forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\r\nconst stripParensRE = /^\\(|\\)$/g;\r\nfunction parseForExpression(input, context) {\r\n    const loc = input.loc;\r\n    const exp = input.content;\r\n    const inMatch = exp.match(forAliasRE);\r\n    if (!inMatch)\r\n        return;\r\n    const [, LHS, RHS] = inMatch;\r\n    const result = {\r\n        source: createAliasExpression(loc, RHS.trim(), exp.indexOf(RHS, LHS.length)),\r\n        value: undefined,\r\n        key: undefined,\r\n        index: undefined\r\n    };\r\n    if ((process.env.NODE_ENV !== 'production') && true) {\r\n        validateBrowserExpression(result.source, context);\r\n    }\r\n    let valueContent = LHS.trim()\r\n        .replace(stripParensRE, '')\r\n        .trim();\r\n    const trimmedOffset = LHS.indexOf(valueContent);\r\n    const iteratorMatch = valueContent.match(forIteratorRE);\r\n    if (iteratorMatch) {\r\n        valueContent = valueContent.replace(forIteratorRE, '').trim();\r\n        const keyContent = iteratorMatch[1].trim();\r\n        let keyOffset;\r\n        if (keyContent) {\r\n            keyOffset = exp.indexOf(keyContent, trimmedOffset + valueContent.length);\r\n            result.key = createAliasExpression(loc, keyContent, keyOffset);\r\n            if ((process.env.NODE_ENV !== 'production') && true) {\r\n                validateBrowserExpression(result.key, context, true);\r\n            }\r\n        }\r\n        if (iteratorMatch[2]) {\r\n            const indexContent = iteratorMatch[2].trim();\r\n            if (indexContent) {\r\n                result.index = createAliasExpression(loc, indexContent, exp.indexOf(indexContent, result.key\r\n                    ? keyOffset + keyContent.length\r\n                    : trimmedOffset + valueContent.length));\r\n                if ((process.env.NODE_ENV !== 'production') && true) {\r\n                    validateBrowserExpression(result.index, context, true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (valueContent) {\r\n        result.value = createAliasExpression(loc, valueContent, trimmedOffset);\r\n        if ((process.env.NODE_ENV !== 'production') && true) {\r\n            validateBrowserExpression(result.value, context, true);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction createAliasExpression(range, content, offset) {\r\n    return createSimpleExpression(content, false, getInnerRange(range, offset, content.length));\r\n}\r\nfunction createForLoopParams({ value, key, index }) {\r\n    const params = [];\r\n    if (value) {\r\n        params.push(value);\r\n    }\r\n    if (key) {\r\n        if (!value) {\r\n            params.push(createSimpleExpression(`_`, false));\r\n        }\r\n        params.push(key);\r\n    }\r\n    if (index) {\r\n        if (!key) {\r\n            if (!value) {\r\n                params.push(createSimpleExpression(`_`, false));\r\n            }\r\n            params.push(createSimpleExpression(`__`, false));\r\n        }\r\n        params.push(index);\r\n    }\r\n    return params;\r\n}\n\nconst defaultFallback = createSimpleExpression(`undefined`, false);\r\n// A NodeTransform that:\r\n// 1. Tracks scope identifiers for scoped slots so that they don't get prefixed\r\n//    by transformExpression. This is only applied in non-browser builds with\r\n//    { prefixIdentifiers: true }.\r\n// 2. Track v-slot depths so that we know a slot is inside another slot.\r\n//    Note the exit callback is executed before buildSlots() on the same node,\r\n//    so only nested slots see positive numbers.\r\nconst trackSlotScopes = (node, context) => {\r\n    if (node.type === 1 /* ELEMENT */ &&\r\n        (node.tagType === 1 /* COMPONENT */ ||\r\n            node.tagType === 3 /* TEMPLATE */)) {\r\n        // We are only checking non-empty v-slot here\r\n        // since we only care about slots that introduce scope variables.\r\n        const vSlot = findDir(node, 'slot');\r\n        if (vSlot) {\r\n            const slotProps = vSlot.exp;\r\n            context.scopes.vSlot++;\r\n            return () => {\r\n                context.scopes.vSlot--;\r\n            };\r\n        }\r\n    }\r\n};\r\n// A NodeTransform that tracks scope identifiers for scoped slots with v-for.\r\n// This transform is only applied in non-browser builds with { prefixIdentifiers: true }\r\nconst trackVForSlotScopes = (node, context) => {\r\n    let vFor;\r\n    if (isTemplateNode(node) &&\r\n        node.props.some(isVSlot) &&\r\n        (vFor = findDir(node, 'for'))) {\r\n        const result = (vFor.parseResult = parseForExpression(vFor.exp, context));\r\n        if (result) {\r\n            const { value, key, index } = result;\r\n            const { addIdentifiers, removeIdentifiers } = context;\r\n            value && addIdentifiers(value);\r\n            key && addIdentifiers(key);\r\n            index && addIdentifiers(index);\r\n            return () => {\r\n                value && removeIdentifiers(value);\r\n                key && removeIdentifiers(key);\r\n                index && removeIdentifiers(index);\r\n            };\r\n        }\r\n    }\r\n};\r\nconst buildClientSlotFn = (props, children, loc) => createFunctionExpression(props, children, false /* newline */, true /* isSlot */, children.length ? children[0].loc : loc);\r\n// Instead of being a DirectiveTransform, v-slot processing is called during\r\n// transformElement to build the slots object for a component.\r\nfunction buildSlots(node, context, buildSlotFn = buildClientSlotFn) {\r\n    context.helper(WITH_CTX);\r\n    const { children, loc } = node;\r\n    const slotsProperties = [];\r\n    const dynamicSlots = [];\r\n    const buildDefaultSlotProperty = (props, children) => createObjectProperty(`default`, buildSlotFn(props, children, loc));\r\n    // If the slot is inside a v-for or another v-slot, force it to be dynamic\r\n    // since it likely uses a scope variable.\r\n    let hasDynamicSlots = context.scopes.vSlot > 0 || context.scopes.vFor > 0;\r\n    // 1. Check for slot with slotProps on component itself.\r\n    //    <Comp v-slot=\"{ prop }\"/>\r\n    const onComponentSlot = findDir(node, 'slot', true);\r\n    if (onComponentSlot) {\r\n        const { arg, exp } = onComponentSlot;\r\n        if (arg && !isStaticExp(arg)) {\r\n            hasDynamicSlots = true;\r\n        }\r\n        slotsProperties.push(createObjectProperty(arg || createSimpleExpression('default', true), buildSlotFn(exp, children, loc)));\r\n    }\r\n    // 2. Iterate through children and check for template slots\r\n    //    <template v-slot:foo=\"{ prop }\">\r\n    let hasTemplateSlots = false;\r\n    let hasNamedDefaultSlot = false;\r\n    const implicitDefaultChildren = [];\r\n    const seenSlotNames = new Set();\r\n    for (let i = 0; i < children.length; i++) {\r\n        const slotElement = children[i];\r\n        let slotDir;\r\n        if (!isTemplateNode(slotElement) ||\r\n            !(slotDir = findDir(slotElement, 'slot', true))) {\r\n            // not a <template v-slot>, skip.\r\n            if (slotElement.type !== 3 /* COMMENT */) {\r\n                implicitDefaultChildren.push(slotElement);\r\n            }\r\n            continue;\r\n        }\r\n        if (onComponentSlot) {\r\n            // already has on-component slot - this is incorrect usage.\r\n            context.onError(createCompilerError(36 /* X_V_SLOT_MIXED_SLOT_USAGE */, slotDir.loc));\r\n            break;\r\n        }\r\n        hasTemplateSlots = true;\r\n        const { children: slotChildren, loc: slotLoc } = slotElement;\r\n        const { arg: slotName = createSimpleExpression(`default`, true), exp: slotProps, loc: dirLoc } = slotDir;\r\n        // check if name is dynamic.\r\n        let staticSlotName;\r\n        if (isStaticExp(slotName)) {\r\n            staticSlotName = slotName ? slotName.content : `default`;\r\n        }\r\n        else {\r\n            hasDynamicSlots = true;\r\n        }\r\n        const slotFunction = buildSlotFn(slotProps, slotChildren, slotLoc);\r\n        // check if this slot is conditional (v-if/v-for)\r\n        let vIf;\r\n        let vElse;\r\n        let vFor;\r\n        if ((vIf = findDir(slotElement, 'if'))) {\r\n            hasDynamicSlots = true;\r\n            dynamicSlots.push(createConditionalExpression(vIf.exp, buildDynamicSlot(slotName, slotFunction), defaultFallback));\r\n        }\r\n        else if ((vElse = findDir(slotElement, /^else(-if)?$/, true /* allowEmpty */))) {\r\n            // find adjacent v-if\r\n            let j = i;\r\n            let prev;\r\n            while (j--) {\r\n                prev = children[j];\r\n                if (prev.type !== 3 /* COMMENT */) {\r\n                    break;\r\n                }\r\n            }\r\n            if (prev && isTemplateNode(prev) && findDir(prev, 'if')) {\r\n                // remove node\r\n                children.splice(i, 1);\r\n                i--;\r\n                // attach this slot to previous conditional\r\n                let conditional = dynamicSlots[dynamicSlots.length - 1];\r\n                while (conditional.alternate.type === 19 /* JS_CONDITIONAL_EXPRESSION */) {\r\n                    conditional = conditional.alternate;\r\n                }\r\n                conditional.alternate = vElse.exp\r\n                    ? createConditionalExpression(vElse.exp, buildDynamicSlot(slotName, slotFunction), defaultFallback)\r\n                    : buildDynamicSlot(slotName, slotFunction);\r\n            }\r\n            else {\r\n                context.onError(createCompilerError(29 /* X_V_ELSE_NO_ADJACENT_IF */, vElse.loc));\r\n            }\r\n        }\r\n        else if ((vFor = findDir(slotElement, 'for'))) {\r\n            hasDynamicSlots = true;\r\n            const parseResult = vFor.parseResult ||\r\n                parseForExpression(vFor.exp, context);\r\n            if (parseResult) {\r\n                // Render the dynamic slots as an array and add it to the createSlot()\r\n                // args. The runtime knows how to handle it appropriately.\r\n                dynamicSlots.push(createCallExpression(context.helper(RENDER_LIST), [\r\n                    parseResult.source,\r\n                    createFunctionExpression(createForLoopParams(parseResult), buildDynamicSlot(slotName, slotFunction), true /* force newline */)\r\n                ]));\r\n            }\r\n            else {\r\n                context.onError(createCompilerError(31 /* X_V_FOR_MALFORMED_EXPRESSION */, vFor.loc));\r\n            }\r\n        }\r\n        else {\r\n            // check duplicate static names\r\n            if (staticSlotName) {\r\n                if (seenSlotNames.has(staticSlotName)) {\r\n                    context.onError(createCompilerError(37 /* X_V_SLOT_DUPLICATE_SLOT_NAMES */, dirLoc));\r\n                    continue;\r\n                }\r\n                seenSlotNames.add(staticSlotName);\r\n                if (staticSlotName === 'default') {\r\n                    hasNamedDefaultSlot = true;\r\n                }\r\n            }\r\n            slotsProperties.push(createObjectProperty(slotName, slotFunction));\r\n        }\r\n    }\r\n    if (!onComponentSlot) {\r\n        if (!hasTemplateSlots) {\r\n            // implicit default slot (on component)\r\n            slotsProperties.push(buildDefaultSlotProperty(undefined, children));\r\n        }\r\n        else if (implicitDefaultChildren.length) {\r\n            // implicit default slot (mixed with named slots)\r\n            if (hasNamedDefaultSlot) {\r\n                context.onError(createCompilerError(38 /* X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN */, implicitDefaultChildren[0].loc));\r\n            }\r\n            else {\r\n                slotsProperties.push(buildDefaultSlotProperty(undefined, implicitDefaultChildren));\r\n            }\r\n        }\r\n    }\r\n    const slotFlag = hasDynamicSlots\r\n        ? 2 /* DYNAMIC */\r\n        : hasForwardedSlots(node.children)\r\n            ? 3 /* FORWARDED */\r\n            : 1 /* STABLE */;\r\n    let slots = createObjectExpression(slotsProperties.concat(createObjectProperty(`_`, \r\n    // 2 = compiled but dynamic = can skip normalization, but must run diff\r\n    // 1 = compiled and static = can skip normalization AND diff as optimized\r\n    createSimpleExpression('' + slotFlag, false))), loc);\r\n    if (dynamicSlots.length) {\r\n        slots = createCallExpression(context.helper(CREATE_SLOTS), [\r\n            slots,\r\n            createArrayExpression(dynamicSlots)\r\n        ]);\r\n    }\r\n    return {\r\n        slots,\r\n        hasDynamicSlots\r\n    };\r\n}\r\nfunction buildDynamicSlot(name, fn) {\r\n    return createObjectExpression([\r\n        createObjectProperty(`name`, name),\r\n        createObjectProperty(`fn`, fn)\r\n    ]);\r\n}\r\nfunction hasForwardedSlots(children) {\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        if (child.type === 1 /* ELEMENT */) {\r\n            if (child.tagType === 2 /* SLOT */ ||\r\n                (child.tagType === 0 /* ELEMENT */ &&\r\n                    hasForwardedSlots(child.children))) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\n\n// some directive transforms (e.g. v-model) may return a symbol for runtime\r\n// import, which should be used instead of a resolveDirective call.\r\nconst directiveImportMap = new WeakMap();\r\n// generate a JavaScript AST for this element's codegen\r\nconst transformElement = (node, context) => {\r\n    if (!(node.type === 1 /* ELEMENT */ &&\r\n        (node.tagType === 0 /* ELEMENT */ ||\r\n            node.tagType === 1 /* COMPONENT */))) {\r\n        return;\r\n    }\r\n    // perform the work on exit, after all child expressions have been\r\n    // processed and merged.\r\n    return function postTransformElement() {\r\n        const { tag, props } = node;\r\n        const isComponent = node.tagType === 1 /* COMPONENT */;\r\n        // The goal of the transform is to create a codegenNode implementing the\r\n        // VNodeCall interface.\r\n        const vnodeTag = isComponent\r\n            ? resolveComponentType(node, context)\r\n            : `\"${tag}\"`;\r\n        const isDynamicComponent = isObject(vnodeTag) && vnodeTag.callee === RESOLVE_DYNAMIC_COMPONENT;\r\n        let vnodeProps;\r\n        let vnodeChildren;\r\n        let vnodePatchFlag;\r\n        let patchFlag = 0;\r\n        let vnodeDynamicProps;\r\n        let dynamicPropNames;\r\n        let vnodeDirectives;\r\n        let shouldUseBlock = \r\n        // dynamic component may resolve to plain elements\r\n        isDynamicComponent ||\r\n            vnodeTag === TELEPORT ||\r\n            vnodeTag === SUSPENSE ||\r\n            (!isComponent &&\r\n                // <svg> and <foreignObject> must be forced into blocks so that block\r\n                // updates inside get proper isSVG flag at runtime. (#639, #643)\r\n                // This is technically web-specific, but splitting the logic out of core\r\n                // leads to too much unnecessary complexity.\r\n                (tag === 'svg' ||\r\n                    tag === 'foreignObject' ||\r\n                    // #938: elements with dynamic keys should be forced into blocks\r\n                    findProp(node, 'key', true)));\r\n        // props\r\n        if (props.length > 0) {\r\n            const propsBuildResult = buildProps(node, context);\r\n            vnodeProps = propsBuildResult.props;\r\n            patchFlag = propsBuildResult.patchFlag;\r\n            dynamicPropNames = propsBuildResult.dynamicPropNames;\r\n            const directives = propsBuildResult.directives;\r\n            vnodeDirectives =\r\n                directives && directives.length\r\n                    ? createArrayExpression(directives.map(dir => buildDirectiveArgs(dir, context)))\r\n                    : undefined;\r\n        }\r\n        // children\r\n        if (node.children.length > 0) {\r\n            if (vnodeTag === KEEP_ALIVE) {\r\n                // Although a built-in component, we compile KeepAlive with raw children\r\n                // instead of slot functions so that it can be used inside Transition\r\n                // or other Transition-wrapping HOCs.\r\n                // To ensure correct updates with block optimizations, we need to:\r\n                // 1. Force keep-alive into a block. This avoids its children being\r\n                //    collected by a parent block.\r\n                shouldUseBlock = true;\r\n                // 2. Force keep-alive to always be updated, since it uses raw children.\r\n                patchFlag |= 1024 /* DYNAMIC_SLOTS */;\r\n                if ((process.env.NODE_ENV !== 'production') && node.children.length > 1) {\r\n                    context.onError(createCompilerError(44 /* X_KEEP_ALIVE_INVALID_CHILDREN */, {\r\n                        start: node.children[0].loc.start,\r\n                        end: node.children[node.children.length - 1].loc.end,\r\n                        source: ''\r\n                    }));\r\n                }\r\n            }\r\n            const shouldBuildAsSlots = isComponent &&\r\n                // Teleport is not a real component and has dedicated runtime handling\r\n                vnodeTag !== TELEPORT &&\r\n                // explained above.\r\n                vnodeTag !== KEEP_ALIVE;\r\n            if (shouldBuildAsSlots) {\r\n                const { slots, hasDynamicSlots } = buildSlots(node, context);\r\n                vnodeChildren = slots;\r\n                if (hasDynamicSlots) {\r\n                    patchFlag |= 1024 /* DYNAMIC_SLOTS */;\r\n                }\r\n            }\r\n            else if (node.children.length === 1 && vnodeTag !== TELEPORT) {\r\n                const child = node.children[0];\r\n                const type = child.type;\r\n                // check for dynamic text children\r\n                const hasDynamicTextChild = type === 5 /* INTERPOLATION */ ||\r\n                    type === 8 /* COMPOUND_EXPRESSION */;\r\n                if (hasDynamicTextChild && !getStaticType(child)) {\r\n                    patchFlag |= 1 /* TEXT */;\r\n                }\r\n                // pass directly if the only child is a text node\r\n                // (plain / interpolation / expression)\r\n                if (hasDynamicTextChild || type === 2 /* TEXT */) {\r\n                    vnodeChildren = child;\r\n                }\r\n                else {\r\n                    vnodeChildren = node.children;\r\n                }\r\n            }\r\n            else {\r\n                vnodeChildren = node.children;\r\n            }\r\n        }\r\n        // patchFlag & dynamicPropNames\r\n        if (patchFlag !== 0) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (patchFlag < 0) {\r\n                    // special flags (negative and mutually exclusive)\r\n                    vnodePatchFlag = patchFlag + ` /* ${PatchFlagNames[patchFlag]} */`;\r\n                }\r\n                else {\r\n                    // bitwise flags\r\n                    const flagNames = Object.keys(PatchFlagNames)\r\n                        .map(Number)\r\n                        .filter(n => n > 0 && patchFlag & n)\r\n                        .map(n => PatchFlagNames[n])\r\n                        .join(`, `);\r\n                    vnodePatchFlag = patchFlag + ` /* ${flagNames} */`;\r\n                }\r\n            }\r\n            else {\r\n                vnodePatchFlag = String(patchFlag);\r\n            }\r\n            if (dynamicPropNames && dynamicPropNames.length) {\r\n                vnodeDynamicProps = stringifyDynamicPropNames(dynamicPropNames);\r\n            }\r\n        }\r\n        node.codegenNode = createVNodeCall(context, vnodeTag, vnodeProps, vnodeChildren, vnodePatchFlag, vnodeDynamicProps, vnodeDirectives, !!shouldUseBlock, false /* disableTracking */, node.loc);\r\n    };\r\n};\r\nfunction resolveComponentType(node, context, ssr = false) {\r\n    const { tag } = node;\r\n    // 1. dynamic component\r\n    const isProp = node.tag === 'component' ? findProp(node, 'is') : findDir(node, 'is');\r\n    if (isProp) {\r\n        const exp = isProp.type === 6 /* ATTRIBUTE */\r\n            ? isProp.value && createSimpleExpression(isProp.value.content, true)\r\n            : isProp.exp;\r\n        if (exp) {\r\n            return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [\r\n                exp\r\n            ]);\r\n        }\r\n    }\r\n    // 2. built-in components (Teleport, Transition, KeepAlive, Suspense...)\r\n    const builtIn = isCoreComponent(tag) || context.isBuiltInComponent(tag);\r\n    if (builtIn) {\r\n        // built-ins are simply fallthroughs / have special handling during ssr\r\n        // no we don't need to import their runtime equivalents\r\n        if (!ssr)\r\n            context.helper(builtIn);\r\n        return builtIn;\r\n    }\r\n    // 3. user component (from setup bindings)\r\n    if (context.bindingMetadata[tag] === 'setup') {\r\n        return `$setup[${JSON.stringify(tag)}]`;\r\n    }\r\n    // 4. user component (resolve)\r\n    context.helper(RESOLVE_COMPONENT);\r\n    context.components.add(tag);\r\n    return toValidAssetId(tag, `component`);\r\n}\r\nfunction buildProps(node, context, props = node.props, ssr = false) {\r\n    const { tag, loc: elementLoc } = node;\r\n    const isComponent = node.tagType === 1 /* COMPONENT */;\r\n    let properties = [];\r\n    const mergeArgs = [];\r\n    const runtimeDirectives = [];\r\n    // patchFlag analysis\r\n    let patchFlag = 0;\r\n    let hasRef = false;\r\n    let hasClassBinding = false;\r\n    let hasStyleBinding = false;\r\n    let hasHydrationEventBinding = false;\r\n    let hasDynamicKeys = false;\r\n    let hasVnodeHook = false;\r\n    const dynamicPropNames = [];\r\n    const analyzePatchFlag = ({ key, value }) => {\r\n        if (isStaticExp(key)) {\r\n            const name = key.content;\r\n            const isEventHandler = isOn(name);\r\n            if (!isComponent &&\r\n                isEventHandler &&\r\n                // omit the flag for click handlers because hydration gives click\r\n                // dedicated fast path.\r\n                name.toLowerCase() !== 'onclick' &&\r\n                // omit v-model handlers\r\n                name !== 'onUpdate:modelValue' &&\r\n                // omit onVnodeXXX hooks\r\n                !isReservedProp(name)) {\r\n                hasHydrationEventBinding = true;\r\n            }\r\n            if (isEventHandler && isReservedProp(name)) {\r\n                hasVnodeHook = true;\r\n            }\r\n            if (value.type === 20 /* JS_CACHE_EXPRESSION */ ||\r\n                ((value.type === 4 /* SIMPLE_EXPRESSION */ ||\r\n                    value.type === 8 /* COMPOUND_EXPRESSION */) &&\r\n                    getStaticType(value) > 0)) {\r\n                // skip if the prop is a cached handler or has constant value\r\n                return;\r\n            }\r\n            if (name === 'ref') {\r\n                hasRef = true;\r\n            }\r\n            else if (name === 'class' && !isComponent) {\r\n                hasClassBinding = true;\r\n            }\r\n            else if (name === 'style' && !isComponent) {\r\n                hasStyleBinding = true;\r\n            }\r\n            else if (name !== 'key' && !dynamicPropNames.includes(name)) {\r\n                dynamicPropNames.push(name);\r\n            }\r\n        }\r\n        else {\r\n            hasDynamicKeys = true;\r\n        }\r\n    };\r\n    for (let i = 0; i < props.length; i++) {\r\n        // static attribute\r\n        const prop = props[i];\r\n        if (prop.type === 6 /* ATTRIBUTE */) {\r\n            const { loc, name, value } = prop;\r\n            if (name === 'ref') {\r\n                hasRef = true;\r\n            }\r\n            // skip :is on <component>\r\n            if (name === 'is' && tag === 'component') {\r\n                continue;\r\n            }\r\n            properties.push(createObjectProperty(createSimpleExpression(name, true, getInnerRange(loc, 0, name.length)), createSimpleExpression(value ? value.content : '', true, value ? value.loc : loc)));\r\n        }\r\n        else {\r\n            // directives\r\n            const { name, arg, exp, loc } = prop;\r\n            const isBind = name === 'bind';\r\n            const isOn = name === 'on';\r\n            // skip v-slot - it is handled by its dedicated transform.\r\n            if (name === 'slot') {\r\n                if (!isComponent) {\r\n                    context.onError(createCompilerError(39 /* X_V_SLOT_MISPLACED */, loc));\r\n                }\r\n                continue;\r\n            }\r\n            // skip v-once - it is handled by its dedicated transform.\r\n            if (name === 'once') {\r\n                continue;\r\n            }\r\n            // skip v-is and :is on <component>\r\n            if (name === 'is' ||\r\n                (isBind && tag === 'component' && isBindKey(arg, 'is'))) {\r\n                continue;\r\n            }\r\n            // skip v-on in SSR compilation\r\n            if (isOn && ssr) {\r\n                continue;\r\n            }\r\n            // special case for v-bind and v-on with no argument\r\n            if (!arg && (isBind || isOn)) {\r\n                hasDynamicKeys = true;\r\n                if (exp) {\r\n                    if (properties.length) {\r\n                        mergeArgs.push(createObjectExpression(dedupeProperties(properties), elementLoc));\r\n                        properties = [];\r\n                    }\r\n                    if (isBind) {\r\n                        mergeArgs.push(exp);\r\n                    }\r\n                    else {\r\n                        // v-on=\"obj\" -> toHandlers(obj)\r\n                        mergeArgs.push({\r\n                            type: 14 /* JS_CALL_EXPRESSION */,\r\n                            loc,\r\n                            callee: context.helper(TO_HANDLERS),\r\n                            arguments: [exp]\r\n                        });\r\n                    }\r\n                }\r\n                else {\r\n                    context.onError(createCompilerError(isBind\r\n                        ? 33 /* X_V_BIND_NO_EXPRESSION */\r\n                        : 34 /* X_V_ON_NO_EXPRESSION */, loc));\r\n                }\r\n                continue;\r\n            }\r\n            const directiveTransform = context.directiveTransforms[name];\r\n            if (directiveTransform) {\r\n                // has built-in directive transform.\r\n                const { props, needRuntime } = directiveTransform(prop, node, context);\r\n                !ssr && props.forEach(analyzePatchFlag);\r\n                properties.push(...props);\r\n                if (needRuntime) {\r\n                    runtimeDirectives.push(prop);\r\n                    if (isSymbol(needRuntime)) {\r\n                        directiveImportMap.set(prop, needRuntime);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // no built-in transform, this is a user custom directive.\r\n                runtimeDirectives.push(prop);\r\n            }\r\n        }\r\n    }\r\n    let propsExpression = undefined;\r\n    // has v-bind=\"object\" or v-on=\"object\", wrap with mergeProps\r\n    if (mergeArgs.length) {\r\n        if (properties.length) {\r\n            mergeArgs.push(createObjectExpression(dedupeProperties(properties), elementLoc));\r\n        }\r\n        if (mergeArgs.length > 1) {\r\n            propsExpression = createCallExpression(context.helper(MERGE_PROPS), mergeArgs, elementLoc);\r\n        }\r\n        else {\r\n            // single v-bind with nothing else - no need for a mergeProps call\r\n            propsExpression = mergeArgs[0];\r\n        }\r\n    }\r\n    else if (properties.length) {\r\n        propsExpression = createObjectExpression(dedupeProperties(properties), elementLoc);\r\n    }\r\n    // patchFlag analysis\r\n    if (hasDynamicKeys) {\r\n        patchFlag |= 16 /* FULL_PROPS */;\r\n    }\r\n    else {\r\n        if (hasClassBinding) {\r\n            patchFlag |= 2 /* CLASS */;\r\n        }\r\n        if (hasStyleBinding) {\r\n            patchFlag |= 4 /* STYLE */;\r\n        }\r\n        if (dynamicPropNames.length) {\r\n            patchFlag |= 8 /* PROPS */;\r\n        }\r\n        if (hasHydrationEventBinding) {\r\n            patchFlag |= 32 /* HYDRATE_EVENTS */;\r\n        }\r\n    }\r\n    if ((patchFlag === 0 || patchFlag === 32 /* HYDRATE_EVENTS */) &&\r\n        (hasRef || hasVnodeHook || runtimeDirectives.length > 0)) {\r\n        patchFlag |= 512 /* NEED_PATCH */;\r\n    }\r\n    return {\r\n        props: propsExpression,\r\n        directives: runtimeDirectives,\r\n        patchFlag,\r\n        dynamicPropNames\r\n    };\r\n}\r\n// Dedupe props in an object literal.\r\n// Literal duplicated attributes would have been warned during the parse phase,\r\n// however, it's possible to encounter duplicated `onXXX` handlers with different\r\n// modifiers. We also need to merge static and dynamic class / style attributes.\r\n// - onXXX handlers / style: merge into array\r\n// - class: merge into single expression with concatenation\r\nfunction dedupeProperties(properties) {\r\n    const knownProps = new Map();\r\n    const deduped = [];\r\n    for (let i = 0; i < properties.length; i++) {\r\n        const prop = properties[i];\r\n        // dynamic keys are always allowed\r\n        if (prop.key.type === 8 /* COMPOUND_EXPRESSION */ || !prop.key.isStatic) {\r\n            deduped.push(prop);\r\n            continue;\r\n        }\r\n        const name = prop.key.content;\r\n        const existing = knownProps.get(name);\r\n        if (existing) {\r\n            if (name === 'style' || name === 'class' || name.startsWith('on')) {\r\n                mergeAsArray(existing, prop);\r\n            }\r\n            // unexpected duplicate, should have emitted error during parse\r\n        }\r\n        else {\r\n            knownProps.set(name, prop);\r\n            deduped.push(prop);\r\n        }\r\n    }\r\n    return deduped;\r\n}\r\nfunction mergeAsArray(existing, incoming) {\r\n    if (existing.value.type === 17 /* JS_ARRAY_EXPRESSION */) {\r\n        existing.value.elements.push(incoming.value);\r\n    }\r\n    else {\r\n        existing.value = createArrayExpression([existing.value, incoming.value], existing.loc);\r\n    }\r\n}\r\nfunction buildDirectiveArgs(dir, context) {\r\n    const dirArgs = [];\r\n    const runtime = directiveImportMap.get(dir);\r\n    if (runtime) {\r\n        dirArgs.push(context.helperString(runtime));\r\n    }\r\n    else {\r\n        // inject statement for resolving directive\r\n        context.helper(RESOLVE_DIRECTIVE);\r\n        context.directives.add(dir.name);\r\n        dirArgs.push(toValidAssetId(dir.name, `directive`));\r\n    }\r\n    const { loc } = dir;\r\n    if (dir.exp)\r\n        dirArgs.push(dir.exp);\r\n    if (dir.arg) {\r\n        if (!dir.exp) {\r\n            dirArgs.push(`void 0`);\r\n        }\r\n        dirArgs.push(dir.arg);\r\n    }\r\n    if (Object.keys(dir.modifiers).length) {\r\n        if (!dir.arg) {\r\n            if (!dir.exp) {\r\n                dirArgs.push(`void 0`);\r\n            }\r\n            dirArgs.push(`void 0`);\r\n        }\r\n        const trueExpression = createSimpleExpression(`true`, false, loc);\r\n        dirArgs.push(createObjectExpression(dir.modifiers.map(modifier => createObjectProperty(modifier, trueExpression)), loc));\r\n    }\r\n    return createArrayExpression(dirArgs, dir.loc);\r\n}\r\nfunction stringifyDynamicPropNames(props) {\r\n    let propsNamesString = `[`;\r\n    for (let i = 0, l = props.length; i < l; i++) {\r\n        propsNamesString += JSON.stringify(props[i]);\r\n        if (i < l - 1)\r\n            propsNamesString += ', ';\r\n    }\r\n    return propsNamesString + `]`;\r\n}\n\nconst transformSlotOutlet = (node, context) => {\r\n    if (isSlotOutlet(node)) {\r\n        const { children, loc } = node;\r\n        const { slotName, slotProps } = processSlotOutlet(node, context);\r\n        const slotArgs = [\r\n            context.prefixIdentifiers ? `_ctx.$slots` : `$slots`,\r\n            slotName\r\n        ];\r\n        if (slotProps) {\r\n            slotArgs.push(slotProps);\r\n        }\r\n        if (children.length) {\r\n            if (!slotProps) {\r\n                slotArgs.push(`{}`);\r\n            }\r\n            slotArgs.push(createFunctionExpression([], children, false, false, loc));\r\n        }\r\n        node.codegenNode = createCallExpression(context.helper(RENDER_SLOT), slotArgs, loc);\r\n    }\r\n};\r\nfunction processSlotOutlet(node, context) {\r\n    let slotName = `\"default\"`;\r\n    let slotProps = undefined;\r\n    // check for <slot name=\"xxx\" OR :name=\"xxx\" />\r\n    const name = findProp(node, 'name');\r\n    if (name) {\r\n        if (name.type === 6 /* ATTRIBUTE */ && name.value) {\r\n            // static name\r\n            slotName = JSON.stringify(name.value.content);\r\n        }\r\n        else if (name.type === 7 /* DIRECTIVE */ && name.exp) {\r\n            // dynamic name\r\n            slotName = name.exp;\r\n        }\r\n    }\r\n    const propsWithoutName = name\r\n        ? node.props.filter(p => p !== name)\r\n        : node.props;\r\n    if (propsWithoutName.length > 0) {\r\n        const { props, directives } = buildProps(node, context, propsWithoutName);\r\n        slotProps = props;\r\n        if (directives.length) {\r\n            context.onError(createCompilerError(35 /* X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET */, directives[0].loc));\r\n        }\r\n    }\r\n    return {\r\n        slotName,\r\n        slotProps\r\n    };\r\n}\n\nconst fnExpRE = /^\\s*([\\w$_]+|\\([^)]*?\\))\\s*=>|^\\s*function(?:\\s+[\\w$]+)?\\s*\\(/;\r\nconst transformOn = (dir, node, context, augmentor) => {\r\n    const { loc, modifiers, arg } = dir;\r\n    if (!dir.exp && !modifiers.length) {\r\n        context.onError(createCompilerError(34 /* X_V_ON_NO_EXPRESSION */, loc));\r\n    }\r\n    let eventName;\r\n    if (arg.type === 4 /* SIMPLE_EXPRESSION */) {\r\n        if (arg.isStatic) {\r\n            const rawName = arg.content;\r\n            // for all event listeners, auto convert it to camelCase. See issue #2249\r\n            eventName = createSimpleExpression(toHandlerKey(camelize(rawName)), true, arg.loc);\r\n        }\r\n        else {\r\n            // #2388\r\n            eventName = createCompoundExpression([\r\n                `${context.helperString(TO_HANDLER_KEY)}(`,\r\n                arg,\r\n                `)`\r\n            ]);\r\n        }\r\n    }\r\n    else {\r\n        // already a compound expression.\r\n        eventName = arg;\r\n        eventName.children.unshift(`${context.helperString(TO_HANDLER_KEY)}(`);\r\n        eventName.children.push(`)`);\r\n    }\r\n    // handler processing\r\n    let exp = dir.exp;\r\n    if (exp && !exp.content.trim()) {\r\n        exp = undefined;\r\n    }\r\n    let isCacheable = context.cacheHandlers && !exp;\r\n    if (exp) {\r\n        const isMemberExp = isMemberExpression(exp.content);\r\n        const isInlineStatement = !(isMemberExp || fnExpRE.test(exp.content));\r\n        const hasMultipleStatements = exp.content.includes(`;`);\r\n        if ((process.env.NODE_ENV !== 'production') && true) {\r\n            validateBrowserExpression(exp, context, false, hasMultipleStatements);\r\n        }\r\n        if (isInlineStatement || (isCacheable && isMemberExp)) {\r\n            // wrap inline statement in a function expression\r\n            exp = createCompoundExpression([\r\n                `${isInlineStatement ? `$event` : `(...args)`} => ${hasMultipleStatements ? `{` : `(`}`,\r\n                exp,\r\n                hasMultipleStatements ? `}` : `)`\r\n            ]);\r\n        }\r\n    }\r\n    let ret = {\r\n        props: [\r\n            createObjectProperty(eventName, exp || createSimpleExpression(`() => {}`, false, loc))\r\n        ]\r\n    };\r\n    // apply extended compiler augmentor\r\n    if (augmentor) {\r\n        ret = augmentor(ret);\r\n    }\r\n    if (isCacheable) {\r\n        // cache handlers so that it's always the same handler being passed down.\r\n        // this avoids unnecessary re-renders when users use inline handlers on\r\n        // components.\r\n        ret.props[0].value = context.cache(ret.props[0].value);\r\n    }\r\n    return ret;\r\n};\n\n// v-bind without arg is handled directly in ./transformElements.ts due to it affecting\r\n// codegen for the entire props object. This transform here is only for v-bind\r\n// *with* args.\r\nconst transformBind = (dir, node, context) => {\r\n    const { exp, modifiers, loc } = dir;\r\n    const arg = dir.arg;\r\n    if (arg.type !== 4 /* SIMPLE_EXPRESSION */) {\r\n        arg.children.unshift(`(`);\r\n        arg.children.push(`) || \"\"`);\r\n    }\r\n    else if (!arg.isStatic) {\r\n        arg.content = `${arg.content} || \"\"`;\r\n    }\r\n    // .prop is no longer necessary due to new patch behavior\r\n    // .sync is replaced by v-model:arg\r\n    if (modifiers.includes('camel')) {\r\n        if (arg.type === 4 /* SIMPLE_EXPRESSION */) {\r\n            if (arg.isStatic) {\r\n                arg.content = camelize(arg.content);\r\n            }\r\n            else {\r\n                arg.content = `${context.helperString(CAMELIZE)}(${arg.content})`;\r\n            }\r\n        }\r\n        else {\r\n            arg.children.unshift(`${context.helperString(CAMELIZE)}(`);\r\n            arg.children.push(`)`);\r\n        }\r\n    }\r\n    if (!exp ||\r\n        (exp.type === 4 /* SIMPLE_EXPRESSION */ && !exp.content.trim())) {\r\n        context.onError(createCompilerError(33 /* X_V_BIND_NO_EXPRESSION */, loc));\r\n        return {\r\n            props: [createObjectProperty(arg, createSimpleExpression('', true, loc))]\r\n        };\r\n    }\r\n    return {\r\n        props: [createObjectProperty(arg, exp)]\r\n    };\r\n};\n\n// Merge adjacent text nodes and expressions into a single expression\r\n// e.g. <div>abc {{ d }} {{ e }}</div> should have a single expression node as child.\r\nconst transformText = (node, context) => {\r\n    if (node.type === 0 /* ROOT */ ||\r\n        node.type === 1 /* ELEMENT */ ||\r\n        node.type === 11 /* FOR */ ||\r\n        node.type === 10 /* IF_BRANCH */) {\r\n        // perform the transform on node exit so that all expressions have already\r\n        // been processed.\r\n        return () => {\r\n            const children = node.children;\r\n            let currentContainer = undefined;\r\n            let hasText = false;\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (isText(child)) {\r\n                    hasText = true;\r\n                    for (let j = i + 1; j < children.length; j++) {\r\n                        const next = children[j];\r\n                        if (isText(next)) {\r\n                            if (!currentContainer) {\r\n                                currentContainer = children[i] = {\r\n                                    type: 8 /* COMPOUND_EXPRESSION */,\r\n                                    loc: child.loc,\r\n                                    children: [child]\r\n                                };\r\n                            }\r\n                            // merge adjacent text node into current\r\n                            currentContainer.children.push(` + `, next);\r\n                            children.splice(j, 1);\r\n                            j--;\r\n                        }\r\n                        else {\r\n                            currentContainer = undefined;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (!hasText ||\r\n                // if this is a plain element with a single text child, leave it\r\n                // as-is since the runtime has dedicated fast path for this by directly\r\n                // setting textContent of the element.\r\n                // for component root it's always normalized anyway.\r\n                (children.length === 1 &&\r\n                    (node.type === 0 /* ROOT */ ||\r\n                        (node.type === 1 /* ELEMENT */ &&\r\n                            node.tagType === 0 /* ELEMENT */)))) {\r\n                return;\r\n            }\r\n            // pre-convert text nodes into createTextVNode(text) calls to avoid\r\n            // runtime normalization.\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (isText(child) || child.type === 8 /* COMPOUND_EXPRESSION */) {\r\n                    const callArgs = [];\r\n                    // createTextVNode defaults to single whitespace, so if it is a\r\n                    // single space the code could be an empty call to save bytes.\r\n                    if (child.type !== 2 /* TEXT */ || child.content !== ' ') {\r\n                        callArgs.push(child);\r\n                    }\r\n                    // mark dynamic text with flag so it gets patched inside a block\r\n                    if (!context.ssr && child.type !== 2 /* TEXT */) {\r\n                        callArgs.push(`${1 /* TEXT */} /* ${PatchFlagNames[1 /* TEXT */]} */`);\r\n                    }\r\n                    children[i] = {\r\n                        type: 12 /* TEXT_CALL */,\r\n                        content: child,\r\n                        loc: child.loc,\r\n                        codegenNode: createCallExpression(context.helper(CREATE_TEXT), callArgs)\r\n                    };\r\n                }\r\n            }\r\n        };\r\n    }\r\n};\n\nconst seen = new WeakSet();\r\nconst transformOnce = (node, context) => {\r\n    if (node.type === 1 /* ELEMENT */ && findDir(node, 'once', true)) {\r\n        if (seen.has(node)) {\r\n            return;\r\n        }\r\n        seen.add(node);\r\n        context.helper(SET_BLOCK_TRACKING);\r\n        return () => {\r\n            const cur = context.currentNode;\r\n            if (cur.codegenNode) {\r\n                cur.codegenNode = context.cache(cur.codegenNode, true /* isVNode */);\r\n            }\r\n        };\r\n    }\r\n};\n\nconst transformModel = (dir, node, context) => {\r\n    const { exp, arg } = dir;\r\n    if (!exp) {\r\n        context.onError(createCompilerError(40 /* X_V_MODEL_NO_EXPRESSION */, dir.loc));\r\n        return createTransformProps();\r\n    }\r\n    const expString = exp.type === 4 /* SIMPLE_EXPRESSION */ ? exp.content : exp.loc.source;\r\n    if (!isMemberExpression(expString)) {\r\n        context.onError(createCompilerError(41 /* X_V_MODEL_MALFORMED_EXPRESSION */, exp.loc));\r\n        return createTransformProps();\r\n    }\r\n    const propName = arg ? arg : createSimpleExpression('modelValue', true);\r\n    const eventName = arg\r\n        ? isStaticExp(arg)\r\n            ? `onUpdate:${arg.content}`\r\n            : createCompoundExpression(['\"onUpdate:\" + ', arg])\r\n        : `onUpdate:modelValue`;\r\n    const props = [\r\n        // modelValue: foo\r\n        createObjectProperty(propName, dir.exp),\r\n        // \"onUpdate:modelValue\": $event => (foo = $event)\r\n        createObjectProperty(eventName, createCompoundExpression([`$event => (`, exp, ` = $event)`]))\r\n    ];\r\n    // modelModifiers: { foo: true, \"bar-baz\": true }\r\n    if (dir.modifiers.length && node.tagType === 1 /* COMPONENT */) {\r\n        const modifiers = dir.modifiers\r\n            .map(m => (isSimpleIdentifier(m) ? m : JSON.stringify(m)) + `: true`)\r\n            .join(`, `);\r\n        const modifiersKey = arg\r\n            ? isStaticExp(arg)\r\n                ? `${arg.content}Modifiers`\r\n                : createCompoundExpression([arg, ' + \"Modifiers\"'])\r\n            : `modelModifiers`;\r\n        props.push(createObjectProperty(modifiersKey, createSimpleExpression(`{ ${modifiers} }`, false, dir.loc, true)));\r\n    }\r\n    return createTransformProps(props);\r\n};\r\nfunction createTransformProps(props = []) {\r\n    return { props };\r\n}\n\nfunction getBaseTransformPreset(prefixIdentifiers) {\r\n    return [\r\n        [\r\n            transformOnce,\r\n            transformIf,\r\n            transformFor,\r\n            ...(  (process.env.NODE_ENV !== 'production')\r\n                    ? [transformExpression]\r\n                    : []),\r\n            transformSlotOutlet,\r\n            transformElement,\r\n            trackSlotScopes,\r\n            transformText\r\n        ],\r\n        {\r\n            on: transformOn,\r\n            bind: transformBind,\r\n            model: transformModel\r\n        }\r\n    ];\r\n}\r\n// we name it `baseCompile` so that higher order compilers like\r\n// @vue/compiler-dom can export `compile` while re-exporting everything else.\r\nfunction baseCompile(template, options = {}) {\r\n    const onError = options.onError || defaultOnError;\r\n    const isModuleMode = options.mode === 'module';\r\n    /* istanbul ignore if */\r\n    {\r\n        if (options.prefixIdentifiers === true) {\r\n            onError(createCompilerError(45 /* X_PREFIX_ID_NOT_SUPPORTED */));\r\n        }\r\n        else if (isModuleMode) {\r\n            onError(createCompilerError(46 /* X_MODULE_MODE_NOT_SUPPORTED */));\r\n        }\r\n    }\r\n    const prefixIdentifiers = !true ;\r\n    if ( options.cacheHandlers) {\r\n        onError(createCompilerError(47 /* X_CACHE_HANDLER_NOT_SUPPORTED */));\r\n    }\r\n    if (options.scopeId && !isModuleMode) {\r\n        onError(createCompilerError(48 /* X_SCOPE_ID_NOT_SUPPORTED */));\r\n    }\r\n    const ast = isString(template) ? baseParse(template, options) : template;\r\n    const [nodeTransforms, directiveTransforms] = getBaseTransformPreset();\r\n    transform(ast, extend({}, options, {\r\n        prefixIdentifiers,\r\n        nodeTransforms: [\r\n            ...nodeTransforms,\r\n            ...(options.nodeTransforms || []) // user transforms\r\n        ],\r\n        directiveTransforms: extend({}, directiveTransforms, options.directiveTransforms || {} // user transforms\r\n        )\r\n    }));\r\n    return generate(ast, extend({}, options, {\r\n        prefixIdentifiers\r\n    }));\r\n}\n\nconst noopDirectiveTransform = () => ({ props: [] });\n\nexport { BASE_TRANSITION, CAMELIZE, CAPITALIZE, CREATE_BLOCK, CREATE_COMMENT, CREATE_SLOTS, CREATE_STATIC, CREATE_TEXT, CREATE_VNODE, FRAGMENT, KEEP_ALIVE, MERGE_PROPS, OPEN_BLOCK, POP_SCOPE_ID, PUSH_SCOPE_ID, RENDER_LIST, RENDER_SLOT, RESOLVE_COMPONENT, RESOLVE_DIRECTIVE, RESOLVE_DYNAMIC_COMPONENT, SET_BLOCK_TRACKING, SUSPENSE, TELEPORT, TO_DISPLAY_STRING, TO_HANDLERS, TO_HANDLER_KEY, WITH_CTX, WITH_DIRECTIVES, WITH_SCOPE_ID, advancePositionWithClone, advancePositionWithMutation, assert, baseCompile, baseParse, buildProps, buildSlots, createArrayExpression, createAssignmentExpression, createBlockStatement, createCacheExpression, createCallExpression, createCompilerError, createCompoundExpression, createConditionalExpression, createForLoopParams, createFunctionExpression, createIfStatement, createInterpolation, createObjectExpression, createObjectProperty, createReturnStatement, createRoot, createSequenceExpression, createSimpleExpression, createStructuralDirectiveTransform, createTemplateLiteral, createTransformContext, createVNodeCall, findDir, findProp, generate, getBaseTransformPreset, getInnerRange, hasDynamicKeyVBind, hasScopeRef, helperNameMap, injectProp, isBindKey, isBuiltInType, isCoreComponent, isMemberExpression, isSimpleIdentifier, isSlotOutlet, isStaticExp, isTemplateNode, isText, isVSlot, locStub, noopDirectiveTransform, processExpression, processFor, processIf, processSlotOutlet, registerRuntimeHelpers, resolveComponentType, toValidAssetId, trackSlotScopes, trackVForSlotScopes, transform, transformBind, transformElement, transformExpression, transformModel, transformOn, traverseNode };\n","import { registerRuntimeHelpers, isBuiltInType, createSimpleExpression, createCompilerError, createObjectProperty, createCallExpression, TO_DISPLAY_STRING, transformModel as transformModel$1, findProp, hasDynamicKeyVBind, transformOn as transformOn$1, createCompoundExpression, isStaticExp, noopDirectiveTransform, baseCompile, baseParse } from '@vue/compiler-core';\nexport * from '@vue/compiler-core';\nimport { isVoidTag, isHTMLTag, isSVGTag, makeMap, parseStringStyle, capitalize, extend } from '@vue/shared';\n\nconst V_MODEL_RADIO = Symbol((process.env.NODE_ENV !== 'production') ? `vModelRadio` : ``);\r\nconst V_MODEL_CHECKBOX = Symbol((process.env.NODE_ENV !== 'production') ? `vModelCheckbox` : ``);\r\nconst V_MODEL_TEXT = Symbol((process.env.NODE_ENV !== 'production') ? `vModelText` : ``);\r\nconst V_MODEL_SELECT = Symbol((process.env.NODE_ENV !== 'production') ? `vModelSelect` : ``);\r\nconst V_MODEL_DYNAMIC = Symbol((process.env.NODE_ENV !== 'production') ? `vModelDynamic` : ``);\r\nconst V_ON_WITH_MODIFIERS = Symbol((process.env.NODE_ENV !== 'production') ? `vOnModifiersGuard` : ``);\r\nconst V_ON_WITH_KEYS = Symbol((process.env.NODE_ENV !== 'production') ? `vOnKeysGuard` : ``);\r\nconst V_SHOW = Symbol((process.env.NODE_ENV !== 'production') ? `vShow` : ``);\r\nconst TRANSITION = Symbol((process.env.NODE_ENV !== 'production') ? `Transition` : ``);\r\nconst TRANSITION_GROUP = Symbol((process.env.NODE_ENV !== 'production') ? `TransitionGroup` : ``);\r\nregisterRuntimeHelpers({\r\n    [V_MODEL_RADIO]: `vModelRadio`,\r\n    [V_MODEL_CHECKBOX]: `vModelCheckbox`,\r\n    [V_MODEL_TEXT]: `vModelText`,\r\n    [V_MODEL_SELECT]: `vModelSelect`,\r\n    [V_MODEL_DYNAMIC]: `vModelDynamic`,\r\n    [V_ON_WITH_MODIFIERS]: `withModifiers`,\r\n    [V_ON_WITH_KEYS]: `withKeys`,\r\n    [V_SHOW]: `vShow`,\r\n    [TRANSITION]: `Transition`,\r\n    [TRANSITION_GROUP]: `TransitionGroup`\r\n});\n\n/* eslint-disable no-restricted-globals */\r\nlet decoder;\r\nfunction decodeHtmlBrowser(raw) {\r\n    (decoder || (decoder = document.createElement('div'))).innerHTML = raw;\r\n    return decoder.textContent;\r\n}\n\nconst isRawTextContainer = /*#__PURE__*/ makeMap('style,iframe,script,noscript', true);\r\nconst parserOptions = {\r\n    isVoidTag,\r\n    isNativeTag: tag => isHTMLTag(tag) || isSVGTag(tag),\r\n    isPreTag: tag => tag === 'pre',\r\n    decodeEntities:  decodeHtmlBrowser ,\r\n    isBuiltInComponent: (tag) => {\r\n        if (isBuiltInType(tag, `Transition`)) {\r\n            return TRANSITION;\r\n        }\r\n        else if (isBuiltInType(tag, `TransitionGroup`)) {\r\n            return TRANSITION_GROUP;\r\n        }\r\n    },\r\n    // https://html.spec.whatwg.org/multipage/parsing.html#tree-construction-dispatcher\r\n    getNamespace(tag, parent) {\r\n        let ns = parent ? parent.ns : 0 /* HTML */;\r\n        if (parent && ns === 2 /* MATH_ML */) {\r\n            if (parent.tag === 'annotation-xml') {\r\n                if (tag === 'svg') {\r\n                    return 1 /* SVG */;\r\n                }\r\n                if (parent.props.some(a => a.type === 6 /* ATTRIBUTE */ &&\r\n                    a.name === 'encoding' &&\r\n                    a.value != null &&\r\n                    (a.value.content === 'text/html' ||\r\n                        a.value.content === 'application/xhtml+xml'))) {\r\n                    ns = 0 /* HTML */;\r\n                }\r\n            }\r\n            else if (/^m(?:[ions]|text)$/.test(parent.tag) &&\r\n                tag !== 'mglyph' &&\r\n                tag !== 'malignmark') {\r\n                ns = 0 /* HTML */;\r\n            }\r\n        }\r\n        else if (parent && ns === 1 /* SVG */) {\r\n            if (parent.tag === 'foreignObject' ||\r\n                parent.tag === 'desc' ||\r\n                parent.tag === 'title') {\r\n                ns = 0 /* HTML */;\r\n            }\r\n        }\r\n        if (ns === 0 /* HTML */) {\r\n            if (tag === 'svg') {\r\n                return 1 /* SVG */;\r\n            }\r\n            if (tag === 'math') {\r\n                return 2 /* MATH_ML */;\r\n            }\r\n        }\r\n        return ns;\r\n    },\r\n    // https://html.spec.whatwg.org/multipage/parsing.html#parsing-html-fragments\r\n    getTextMode({ tag, ns }) {\r\n        if (ns === 0 /* HTML */) {\r\n            if (tag === 'textarea' || tag === 'title') {\r\n                return 1 /* RCDATA */;\r\n            }\r\n            if (isRawTextContainer(tag)) {\r\n                return 2 /* RAWTEXT */;\r\n            }\r\n        }\r\n        return 0 /* DATA */;\r\n    }\r\n};\n\n// Parse inline CSS strings for static style attributes into an object.\r\n// This is a NodeTransform since it works on the static `style` attribute and\r\n// converts it into a dynamic equivalent:\r\n// style=\"color: red\" -> :style='{ \"color\": \"red\" }'\r\n// It is then processed by `transformElement` and included in the generated\r\n// props.\r\nconst transformStyle = node => {\r\n    if (node.type === 1 /* ELEMENT */) {\r\n        node.props.forEach((p, i) => {\r\n            if (p.type === 6 /* ATTRIBUTE */ && p.name === 'style' && p.value) {\r\n                // replace p with an expression node\r\n                node.props[i] = {\r\n                    type: 7 /* DIRECTIVE */,\r\n                    name: `bind`,\r\n                    arg: createSimpleExpression(`style`, true, p.loc),\r\n                    exp: parseInlineCSS(p.value.content, p.loc),\r\n                    modifiers: [],\r\n                    loc: p.loc\r\n                };\r\n            }\r\n        });\r\n    }\r\n};\r\nconst parseInlineCSS = (cssText, loc) => {\r\n    const normalized = parseStringStyle(cssText);\r\n    return createSimpleExpression(JSON.stringify(normalized), false, loc, true);\r\n};\n\nfunction createDOMCompilerError(code, loc) {\r\n    return createCompilerError(code, loc, (process.env.NODE_ENV !== 'production') || !true ? DOMErrorMessages : undefined);\r\n}\r\nconst DOMErrorMessages = {\r\n    [49 /* X_V_HTML_NO_EXPRESSION */]: `v-html is missing expression.`,\r\n    [50 /* X_V_HTML_WITH_CHILDREN */]: `v-html will override element children.`,\r\n    [51 /* X_V_TEXT_NO_EXPRESSION */]: `v-text is missing expression.`,\r\n    [52 /* X_V_TEXT_WITH_CHILDREN */]: `v-text will override element children.`,\r\n    [53 /* X_V_MODEL_ON_INVALID_ELEMENT */]: `v-model can only be used on <input>, <textarea> and <select> elements.`,\r\n    [54 /* X_V_MODEL_ARG_ON_ELEMENT */]: `v-model argument is not supported on plain elements.`,\r\n    [55 /* X_V_MODEL_ON_FILE_INPUT_ELEMENT */]: `v-model cannot be used on file inputs since they are read-only. Use a v-on:change listener instead.`,\r\n    [56 /* X_V_MODEL_UNNECESSARY_VALUE */]: `Unnecessary value binding used alongside v-model. It will interfere with v-model's behavior.`,\r\n    [57 /* X_V_SHOW_NO_EXPRESSION */]: `v-show is missing expression.`,\r\n    [58 /* X_TRANSITION_INVALID_CHILDREN */]: `<Transition> expects exactly one child element or component.`,\r\n    [59 /* X_IGNORED_SIDE_EFFECT_TAG */]: `Tags with side effect (<script> and <style>) are ignored in client component templates.`\r\n};\n\nconst transformVHtml = (dir, node, context) => {\r\n    const { exp, loc } = dir;\r\n    if (!exp) {\r\n        context.onError(createDOMCompilerError(49 /* X_V_HTML_NO_EXPRESSION */, loc));\r\n    }\r\n    if (node.children.length) {\r\n        context.onError(createDOMCompilerError(50 /* X_V_HTML_WITH_CHILDREN */, loc));\r\n        node.children.length = 0;\r\n    }\r\n    return {\r\n        props: [\r\n            createObjectProperty(createSimpleExpression(`innerHTML`, true, loc), exp || createSimpleExpression('', true))\r\n        ]\r\n    };\r\n};\n\nconst transformVText = (dir, node, context) => {\r\n    const { exp, loc } = dir;\r\n    if (!exp) {\r\n        context.onError(createDOMCompilerError(51 /* X_V_TEXT_NO_EXPRESSION */, loc));\r\n    }\r\n    if (node.children.length) {\r\n        context.onError(createDOMCompilerError(52 /* X_V_TEXT_WITH_CHILDREN */, loc));\r\n        node.children.length = 0;\r\n    }\r\n    return {\r\n        props: [\r\n            createObjectProperty(createSimpleExpression(`textContent`, true), exp\r\n                ? createCallExpression(context.helperString(TO_DISPLAY_STRING), [exp], loc)\r\n                : createSimpleExpression('', true))\r\n        ]\r\n    };\r\n};\n\nconst transformModel = (dir, node, context) => {\r\n    const baseResult = transformModel$1(dir, node, context);\r\n    // base transform has errors OR component v-model (only need props)\r\n    if (!baseResult.props.length || node.tagType === 1 /* COMPONENT */) {\r\n        return baseResult;\r\n    }\r\n    if (dir.arg) {\r\n        context.onError(createDOMCompilerError(54 /* X_V_MODEL_ARG_ON_ELEMENT */, dir.arg.loc));\r\n    }\r\n    function checkDuplicatedValue() {\r\n        const value = findProp(node, 'value');\r\n        if (value) {\r\n            context.onError(createDOMCompilerError(56 /* X_V_MODEL_UNNECESSARY_VALUE */, value.loc));\r\n        }\r\n    }\r\n    const { tag } = node;\r\n    const isCustomElement = context.isCustomElement(tag);\r\n    if (tag === 'input' ||\r\n        tag === 'textarea' ||\r\n        tag === 'select' ||\r\n        isCustomElement) {\r\n        let directiveToUse = V_MODEL_TEXT;\r\n        let isInvalidType = false;\r\n        if (tag === 'input' || isCustomElement) {\r\n            const type = findProp(node, `type`);\r\n            if (type) {\r\n                if (type.type === 7 /* DIRECTIVE */) {\r\n                    // :type=\"foo\"\r\n                    directiveToUse = V_MODEL_DYNAMIC;\r\n                }\r\n                else if (type.value) {\r\n                    switch (type.value.content) {\r\n                        case 'radio':\r\n                            directiveToUse = V_MODEL_RADIO;\r\n                            break;\r\n                        case 'checkbox':\r\n                            directiveToUse = V_MODEL_CHECKBOX;\r\n                            break;\r\n                        case 'file':\r\n                            isInvalidType = true;\r\n                            context.onError(createDOMCompilerError(55 /* X_V_MODEL_ON_FILE_INPUT_ELEMENT */, dir.loc));\r\n                            break;\r\n                        default:\r\n                            // text type\r\n                            (process.env.NODE_ENV !== 'production') && checkDuplicatedValue();\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            else if (hasDynamicKeyVBind(node)) {\r\n                // element has bindings with dynamic keys, which can possibly contain\r\n                // \"type\".\r\n                directiveToUse = V_MODEL_DYNAMIC;\r\n            }\r\n            else {\r\n                // text type\r\n                (process.env.NODE_ENV !== 'production') && checkDuplicatedValue();\r\n            }\r\n        }\r\n        else if (tag === 'select') {\r\n            directiveToUse = V_MODEL_SELECT;\r\n        }\r\n        else {\r\n            // textarea\r\n            (process.env.NODE_ENV !== 'production') && checkDuplicatedValue();\r\n        }\r\n        // inject runtime directive\r\n        // by returning the helper symbol via needRuntime\r\n        // the import will replaced a resolveDirective call.\r\n        if (!isInvalidType) {\r\n            baseResult.needRuntime = context.helper(directiveToUse);\r\n        }\r\n    }\r\n    else {\r\n        context.onError(createDOMCompilerError(53 /* X_V_MODEL_ON_INVALID_ELEMENT */, dir.loc));\r\n    }\r\n    // native vmodel doesn't need the `modelValue` props since they are also\r\n    // passed to the runtime as `binding.value`. removing it reduces code size.\r\n    baseResult.props = baseResult.props.filter(p => !(p.key.type === 4 /* SIMPLE_EXPRESSION */ &&\r\n        p.key.content === 'modelValue'));\r\n    return baseResult;\r\n};\n\nconst isEventOptionModifier = /*#__PURE__*/ makeMap(`passive,once,capture`);\r\nconst isNonKeyModifier = /*#__PURE__*/ makeMap(\r\n// event propagation management\r\n`stop,prevent,self,` +\r\n    // system modifiers + exact\r\n    `ctrl,shift,alt,meta,exact,` +\r\n    // mouse\r\n    `middle`);\r\n// left & right could be mouse or key modifiers based on event type\r\nconst maybeKeyModifier = /*#__PURE__*/ makeMap('left,right');\r\nconst isKeyboardEvent = /*#__PURE__*/ makeMap(`onkeyup,onkeydown,onkeypress`, true);\r\nconst resolveModifiers = (key, modifiers) => {\r\n    const keyModifiers = [];\r\n    const nonKeyModifiers = [];\r\n    const eventOptionModifiers = [];\r\n    for (let i = 0; i < modifiers.length; i++) {\r\n        const modifier = modifiers[i];\r\n        if (isEventOptionModifier(modifier)) {\r\n            // eventOptionModifiers: modifiers for addEventListener() options,\r\n            // e.g. .passive & .capture\r\n            eventOptionModifiers.push(modifier);\r\n        }\r\n        else {\r\n            // runtimeModifiers: modifiers that needs runtime guards\r\n            if (maybeKeyModifier(modifier)) {\r\n                if (isStaticExp(key)) {\r\n                    if (isKeyboardEvent(key.content)) {\r\n                        keyModifiers.push(modifier);\r\n                    }\r\n                    else {\r\n                        nonKeyModifiers.push(modifier);\r\n                    }\r\n                }\r\n                else {\r\n                    keyModifiers.push(modifier);\r\n                    nonKeyModifiers.push(modifier);\r\n                }\r\n            }\r\n            else {\r\n                if (isNonKeyModifier(modifier)) {\r\n                    nonKeyModifiers.push(modifier);\r\n                }\r\n                else {\r\n                    keyModifiers.push(modifier);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        keyModifiers,\r\n        nonKeyModifiers,\r\n        eventOptionModifiers\r\n    };\r\n};\r\nconst transformClick = (key, event) => {\r\n    const isStaticClick = isStaticExp(key) && key.content.toLowerCase() === 'onclick';\r\n    return isStaticClick\r\n        ? createSimpleExpression(event, true)\r\n        : key.type !== 4 /* SIMPLE_EXPRESSION */\r\n            ? createCompoundExpression([\r\n                `(`,\r\n                key,\r\n                `) === \"onClick\" ? \"${event}\" : (`,\r\n                key,\r\n                `)`\r\n            ])\r\n            : key;\r\n};\r\nconst transformOn = (dir, node, context) => {\r\n    return transformOn$1(dir, node, context, baseResult => {\r\n        const { modifiers } = dir;\r\n        if (!modifiers.length)\r\n            return baseResult;\r\n        let { key, value: handlerExp } = baseResult.props[0];\r\n        const { keyModifiers, nonKeyModifiers, eventOptionModifiers } = resolveModifiers(key, modifiers);\r\n        // normalize click.right and click.middle since they don't actually fire\r\n        if (nonKeyModifiers.includes('right')) {\r\n            key = transformClick(key, `onContextmenu`);\r\n        }\r\n        if (nonKeyModifiers.includes('middle')) {\r\n            key = transformClick(key, `onMouseup`);\r\n        }\r\n        if (nonKeyModifiers.length) {\r\n            handlerExp = createCallExpression(context.helper(V_ON_WITH_MODIFIERS), [\r\n                handlerExp,\r\n                JSON.stringify(nonKeyModifiers)\r\n            ]);\r\n        }\r\n        if (keyModifiers.length &&\r\n            // if event name is dynamic, always wrap with keys guard\r\n            (!isStaticExp(key) || isKeyboardEvent(key.content))) {\r\n            handlerExp = createCallExpression(context.helper(V_ON_WITH_KEYS), [\r\n                handlerExp,\r\n                JSON.stringify(keyModifiers)\r\n            ]);\r\n        }\r\n        if (eventOptionModifiers.length) {\r\n            const modifierPostfix = eventOptionModifiers.map(capitalize).join('');\r\n            key = isStaticExp(key)\r\n                ? createSimpleExpression(`${key.content}${modifierPostfix}`, true)\r\n                : createCompoundExpression([`(`, key, `) + \"${modifierPostfix}\"`]);\r\n        }\r\n        return {\r\n            props: [createObjectProperty(key, handlerExp)]\r\n        };\r\n    });\r\n};\n\nconst transformShow = (dir, node, context) => {\r\n    const { exp, loc } = dir;\r\n    if (!exp) {\r\n        context.onError(createDOMCompilerError(57 /* X_V_SHOW_NO_EXPRESSION */, loc));\r\n    }\r\n    return {\r\n        props: [],\r\n        needRuntime: context.helper(V_SHOW)\r\n    };\r\n};\n\nconst warnTransitionChildren = (node, context) => {\r\n    if (node.type === 1 /* ELEMENT */ &&\r\n        node.tagType === 1 /* COMPONENT */) {\r\n        const component = context.isBuiltInComponent(node.tag);\r\n        if (component === TRANSITION) {\r\n            return () => {\r\n                if (node.children.length && hasMultipleChildren(node)) {\r\n                    context.onError(createDOMCompilerError(58 /* X_TRANSITION_INVALID_CHILDREN */, {\r\n                        start: node.children[0].loc.start,\r\n                        end: node.children[node.children.length - 1].loc.end,\r\n                        source: ''\r\n                    }));\r\n                }\r\n            };\r\n        }\r\n    }\r\n};\r\nfunction hasMultipleChildren(node) {\r\n    // #1352 filter out potential comment nodes.\r\n    const children = (node.children = node.children.filter(c => c.type !== 3 /* COMMENT */));\r\n    const child = children[0];\r\n    return (children.length !== 1 ||\r\n        child.type === 11 /* FOR */ ||\r\n        (child.type === 9 /* IF */ && child.branches.some(hasMultipleChildren)));\r\n}\n\nconst ignoreSideEffectTags = (node, context) => {\r\n    if (node.type === 1 /* ELEMENT */ &&\r\n        node.tagType === 0 /* ELEMENT */ &&\r\n        (node.tag === 'script' || node.tag === 'style')) {\r\n        context.onError(createDOMCompilerError(59 /* X_IGNORED_SIDE_EFFECT_TAG */, node.loc));\r\n        context.removeNode();\r\n    }\r\n};\n\nconst DOMNodeTransforms = [\r\n    transformStyle,\r\n    ...((process.env.NODE_ENV !== 'production') ? [warnTransitionChildren] : [])\r\n];\r\nconst DOMDirectiveTransforms = {\r\n    cloak: noopDirectiveTransform,\r\n    html: transformVHtml,\r\n    text: transformVText,\r\n    model: transformModel,\r\n    on: transformOn,\r\n    show: transformShow\r\n};\r\nfunction compile(template, options = {}) {\r\n    return baseCompile(template, extend({}, parserOptions, options, {\r\n        nodeTransforms: [\r\n            // ignore <script> and <tag>\r\n            // this is not put inside DOMNodeTransforms because that list is used\r\n            // by compiler-ssr to generate vnode fallback branches\r\n            ignoreSideEffectTags,\r\n            ...DOMNodeTransforms,\r\n            ...(options.nodeTransforms || [])\r\n        ],\r\n        directiveTransforms: extend({}, DOMDirectiveTransforms, options.directiveTransforms || {}),\r\n        transformHoist:  null \r\n    }));\r\n}\r\nfunction parse(template, options = {}) {\r\n    return baseParse(template, extend({}, parserOptions, options));\r\n}\n\nexport { DOMDirectiveTransforms, DOMNodeTransforms, TRANSITION, TRANSITION_GROUP, V_MODEL_CHECKBOX, V_MODEL_DYNAMIC, V_MODEL_RADIO, V_MODEL_SELECT, V_MODEL_TEXT, V_ON_WITH_KEYS, V_ON_WITH_MODIFIERS, V_SHOW, compile, createDOMCompilerError, parse, parserOptions, transformStyle };\n","import * as runtimeDom from '@vue/runtime-dom';\nimport { setDevtoolsHook, initCustomFormatter, warn, registerRuntimeCompiler } from '@vue/runtime-dom';\nexport * from '@vue/runtime-dom';\nimport { getGlobalThis, isString, NOOP, extend, generateCodeFrame } from '@vue/shared';\nimport { compile } from '@vue/compiler-dom';\n\nfunction initDev() {\r\n    const target = getGlobalThis();\r\n    target.__VUE__ = true;\r\n    setDevtoolsHook(target.__VUE_DEVTOOLS_GLOBAL_HOOK__);\r\n    {\r\n        console.info(`You are running a development build of Vue.\\n` +\r\n            `Make sure to use the production build (*.prod.js) when deploying for production.`);\r\n        initCustomFormatter();\r\n    }\r\n}\n\n// This entry is the \"full-build\" that includes both the runtime\r\n(process.env.NODE_ENV !== 'production') && initDev();\r\nconst compileCache = Object.create(null);\r\nfunction compileToFunction(template, options) {\r\n    if (!isString(template)) {\r\n        if (template.nodeType) {\r\n            template = template.innerHTML;\r\n        }\r\n        else {\r\n            (process.env.NODE_ENV !== 'production') && warn(`invalid template option: `, template);\r\n            return NOOP;\r\n        }\r\n    }\r\n    const key = template;\r\n    const cached = compileCache[key];\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    if (template[0] === '#') {\r\n        const el = document.querySelector(template);\r\n        if ((process.env.NODE_ENV !== 'production') && !el) {\r\n            warn(`Template element not found or is empty: ${template}`);\r\n        }\r\n        // __UNSAFE__\r\n        // Reason: potential execution of JS expressions in in-DOM template.\r\n        // The user must make sure the in-DOM template is trusted. If it's rendered\r\n        // by the server, the template should not contain any user data.\r\n        template = el ? el.innerHTML : ``;\r\n    }\r\n    const { code } = compile(template, extend({\r\n        hoistStatic: true,\r\n        onError(err) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                const message = `Template compilation error: ${err.message}`;\r\n                const codeFrame = err.loc &&\r\n                    generateCodeFrame(template, err.loc.start.offset, err.loc.end.offset);\r\n                warn(codeFrame ? `${message}\\n${codeFrame}` : message);\r\n            }\r\n            else {\r\n                /* istanbul ignore next */\r\n                throw err;\r\n            }\r\n        }\r\n    }, options));\r\n    // The wildcard import results in a huge object with every export\r\n    // with keys that cannot be mangled, and can be quite heavy size-wise.\r\n    // In the global build we know `Vue` is available globally so we can avoid\r\n    // the wildcard object.\r\n    const render = ( new Function('Vue', code)(runtimeDom));\r\n    render._rc = true;\r\n    return (compileCache[key] = render);\r\n}\r\nregisterRuntimeCompiler(compileToFunction);\n\nexport { compileToFunction as compile };\n","const countries = [\n    { iso3: 'abw', name: 'Aruba', lat: 12.5, lon: -69.96666666 },\n    { iso3: 'afg', name: 'Afeganistão', lat: 33, lon: 65 },\n    { iso3: 'ago', name: 'Angola', lat: -12.5, lon: 18.5 },\n    { iso3: 'aia', name: 'Anguilla', lat: 18.25, lon: -63.16666666 },\n    { iso3: 'ala', name: 'Alândia', lat: 60.116667, lon: 19.9 },\n    { iso3: 'alb', name: 'Albânia', lat: 41, lon: 20 },\n    { iso3: 'are', name: 'Emirados Árabes Unidos', lat: 24, lon: 54 },\n    { iso3: 'arg', name: 'Argentina', lat: -34, lon: -64 },\n    { iso3: 'arm', name: 'Arménia', lat: 40, lon: 45 },\n    { iso3: 'and', name: 'Andorra', lat: 42.5, lon: 1.5 },\n    { iso3: 'asm', name: 'Samoa Americana', lat: -14.33333333, lon: -170 },\n    { iso3: 'atf', name: 'Terras Austrais e Antárticas Francesas', lat: -49.25, lon: 69.167 },\n    { iso3: 'atg', name: 'Antígua e Barbuda', lat: 17.05, lon: -61.8 },\n    { iso3: 'aus', name: 'Austrália', lat: -27, lon: 133 },\n    { iso3: 'aut', name: 'Áustria', lat: 47.33333333, lon: 13.33333333 },\n    { iso3: 'aze', name: 'Azerbeijão', lat: 40.5, lon: 47.5 },\n    { iso3: 'bdi', name: 'Burundi', lat: -3.5, lon: 30 },\n    { iso3: 'bel', name: 'Bélgica', lat: 50.83333333, lon: 4 },\n    { iso3: 'ben', name: 'Benin', lat: 9.5, lon: 2.25 },\n    { iso3: 'bfa', name: 'Burkina Faso', lat: 13, lon: -2 },\n    { iso3: 'bgd', name: 'Bangladesh', lat: 24, lon: 90 },\n    { iso3: 'bgr', name: 'Bulgária', lat: 43, lon: 25 },\n    { iso3: 'ata', name: 'Antártida', lat: -90, lon: 0 },\n    { iso3: 'bhs', name: 'Bahamas', lat: 24.25, lon: -76 },\n    { iso3: 'bih', name: 'Bósnia e Herzegovina', lat: 44, lon: 18 },\n    { iso3: 'blm', name: 'São Bartolomeu', lat: 18.5, lon: -63.41666666 },\n    { iso3: 'bhr', name: 'Bahrein', lat: 26, lon: 50.55 },\n    { iso3: 'blz', name: 'Belize', lat: 17.25, lon: -88.75 },\n    { iso3: 'bmu', name: 'Bermudas', lat: 32.33333333, lon: -64.75 },\n    { iso3: 'bol', name: 'Bolívia', lat: -17, lon: -65 },\n    { iso3: 'blr', name: 'Bielorússia', lat: 53, lon: 28 },\n    { iso3: 'brb', name: 'Barbados', lat: 13.16666666, lon: -59.53333333 },\n    { iso3: 'bra', name: 'Brasil', lat: -10, lon: -55 },\n    { iso3: 'btn', name: 'Butão', lat: 27.5, lon: 90.5 },\n    { iso3: 'bvt', name: 'Ilha Bouvet', lat: -54.43333333, lon: 3.4 },\n    { iso3: 'caf', name: 'República Centro-Africana', lat: 7, lon: 21 },\n    { iso3: 'can', name: 'Canadá', lat: 60, lon: -95 },\n    { iso3: 'bwa', name: 'Botswana', lat: -22, lon: 24 },\n    { iso3: 'chn', name: 'China', lat: 35, lon: 105 },\n    { iso3: 'civ', name: 'Costa do Marfim', lat: 8, lon: -5 },\n    { iso3: 'cmr', name: 'Camarões', lat: 6, lon: 12 },\n    { iso3: 'cod', name: 'República Democrática do Congo', lat: 0, lon: 25 },\n    { iso3: 'cog', name: 'Congo', lat: -1, lon: 15 },\n    { iso3: 'cok', name: 'Ilhas Cook', lat: -21.23333333, lon: -159.76666666 },\n    { iso3: 'col', name: 'Colômbia', lat: 4, lon: -72 },\n    { iso3: 'com', name: 'Comores', lat: -12.16666666, lon: 44.25 },\n    { iso3: 'cpv', name: 'Cabo Verde', lat: 16, lon: -24 },\n    { iso3: 'brn', name: 'Brunei', lat: 4.5, lon: 114.66666666 },\n    { iso3: 'cub', name: 'Cuba', lat: 21.5, lon: -80 },\n    { iso3: 'cuw', name: 'ilha da Curação', lat: 12.116667, lon: -68.933333 },\n    { iso3: 'cxr', name: 'Ilha do Natal', lat: -10.5, lon: 105.66666666 },\n    { iso3: 'cym', name: 'Ilhas Caimão', lat: 19.5, lon: -80.5 },\n    { iso3: 'cyp', name: 'Chipre', lat: 35, lon: 33 },\n    { iso3: 'cze', name: 'Chéquia', lat: 49.75, lon: 15.5 },\n    { iso3: 'che', name: 'Suíça', lat: 47, lon: 8 },\n    { iso3: 'deu', name: 'Alemanha', lat: 51, lon: 9 },\n    { iso3: 'dma', name: 'Dominica', lat: 15.41666666, lon: -61.33333333 },\n    { iso3: 'chl', name: 'Chile', lat: -30, lon: -71 },\n    { iso3: 'cri', name: 'Costa Rica', lat: 10, lon: -84 },\n    { iso3: 'cck', name: 'Ilhas Cocos (Keeling)', lat: -12.5, lon: 96.83333333 },\n    { iso3: 'dom', name: 'República Dominicana', lat: 19, lon: -70.66666666 },\n    { iso3: 'dji', name: 'Djibouti', lat: 11.5, lon: 43 },\n    { iso3: 'dza', name: 'Argélia', lat: 28, lon: 3 },\n    { iso3: 'dnk', name: 'Dinamarca', lat: 56, lon: 10 },\n    { iso3: 'ecu', name: 'Equador', lat: -2, lon: -77.5 },\n    { iso3: 'esh', name: 'Saara Ocidental', lat: 24.5, lon: -13 },\n    { iso3: 'eri', name: 'Eritreia', lat: 15, lon: 39 },\n    { iso3: 'est', name: 'Estónia', lat: 59, lon: 26 },\n    { iso3: 'egy', name: 'Egito', lat: 27, lon: 30 },\n    { iso3: 'fji', name: 'Fiji', lat: -18, lon: 175 },\n    { iso3: 'flk', name: 'Ilhas Malvinas', lat: -51.75, lon: -59 },\n    { iso3: 'eth', name: 'Etiópia', lat: 8, lon: 38 },\n    { iso3: 'fra', name: 'França', lat: 46, lon: 2 },\n    { iso3: 'fro', name: 'Ilhas Faroé', lat: 62, lon: -7 },\n    { iso3: 'gab', name: 'Gabão', lat: -1, lon: 11.75 },\n    { iso3: 'fin', name: 'Finlândia', lat: 64, lon: 26 },\n    { iso3: 'fsm', name: 'Micronésia', lat: 6.91666666, lon: 158.25 },\n    { iso3: 'ggy', name: 'Guernsey', lat: 49.46666666, lon: -2.58333333 },\n    { iso3: 'gha', name: 'Gana', lat: 8, lon: -2 },\n    { iso3: 'gin', name: 'Guiné', lat: 11, lon: -10 },\n    { iso3: 'geo', name: 'Geórgia', lat: 42, lon: 43.5 },\n    { iso3: 'glp', name: 'Guadalupe', lat: 16.25, lon: -61.583333 },\n    { iso3: 'gmb', name: 'Gâmbia', lat: 13.46666666, lon: -16.56666666 },\n    { iso3: 'gbr', name: 'Reino Unido', lat: 54, lon: -2 },\n    { iso3: 'gnb', name: 'Guiné-Bissau', lat: 12, lon: -15 },\n    { iso3: 'grd', name: 'Granada', lat: 12.11666666, lon: -61.66666666 },\n    { iso3: 'gib', name: 'Gibraltar', lat: 36.13333333, lon: -5.35 },\n    { iso3: 'gnq', name: 'Guiné Equatorial', lat: 2, lon: 10 },\n    { iso3: 'grl', name: 'Gronelândia', lat: 72, lon: -40 },\n    { iso3: 'gtm', name: 'Guatemala', lat: 15.5, lon: -90.25 },\n    { iso3: 'gum', name: 'Guam', lat: 13.46666666, lon: 144.78333333 },\n    { iso3: 'guy', name: 'Guiana', lat: 5, lon: -59 },\n    { iso3: 'hmd', name: 'Ilha Heard e Ilhas McDonald', lat: -53.1, lon: 72.51666666 },\n    { iso3: 'hkg', name: 'Hong Kong', lat: 22.267, lon: 114.188 },\n    { iso3: 'hnd', name: 'Honduras', lat: 15, lon: -86.5 },\n    { iso3: 'hrv', name: 'Croácia', lat: 45.16666666, lon: 15.5 },\n    { iso3: 'hun', name: 'Hungria', lat: 47, lon: 20 },\n    { iso3: 'idn', name: 'Indonésia', lat: -5, lon: 120 },\n    { iso3: 'imn', name: 'Ilha de Man', lat: 54.25, lon: -4.5 },\n    { iso3: 'ind', name: 'Índia', lat: 20, lon: 77 },\n    { iso3: 'iot', name: 'Território Britânico do Oceano Índico', lat: -6, lon: 71.5 },\n    { iso3: 'irl', name: 'Irlanda', lat: 53, lon: -8 },\n    { iso3: 'irn', name: 'Irão', lat: 32, lon: 53 },\n    { iso3: 'esp', name: 'Espanha', lat: 40, lon: -4 },\n    { iso3: 'isl', name: 'Islândia', lat: 65, lon: -18 },\n    { iso3: 'isr', name: 'Israel', lat: 31.47, lon: 35.13 },\n    { iso3: 'ita', name: 'Itália', lat: 42.83333333, lon: 12.83333333 },\n    { iso3: 'irq', name: 'Iraque', lat: 33, lon: 44 },\n    { iso3: 'jey', name: 'Jersey', lat: 49.25, lon: -2.16666666 },\n    { iso3: 'jor', name: 'Jordânia', lat: 31, lon: 36 },\n    { iso3: 'jam', name: 'Jamaica', lat: 18.25, lon: -77.5 },\n    { iso3: 'kaz', name: 'Cazaquistão', lat: 48, lon: 68 },\n    { iso3: 'ken', name: 'Quénia', lat: 1, lon: 38 },\n    { iso3: 'jpn', name: 'Japão', lat: 36, lon: 138 },\n    { iso3: 'kgz', name: 'Quirguistão', lat: 41, lon: 75 },\n    { iso3: 'kir', name: 'Kiribati', lat: 1.41666666, lon: 173 },\n    { iso3: 'kna', name: 'São Cristóvão e Nevis', lat: 17.33333333, lon: -62.75 },\n    { iso3: 'kor', name: 'Coreia do Sul', lat: 37, lon: 127.5 },\n    { iso3: 'unk', name: 'Kosovo', lat: 42.666667, lon: 21.166667 },\n    { iso3: 'kwt', name: 'Kuwait', lat: 29.5, lon: 45.75 },\n    { iso3: 'lao', name: 'Laos', lat: 18, lon: 105 },\n    { iso3: 'lbn', name: 'Líbano', lat: 33.83333333, lon: 35.83333333 },\n    { iso3: 'lbr', name: 'Libéria', lat: 6.5, lon: -9.5 },\n    { iso3: 'lby', name: 'Líbia', lat: 25, lon: 17 },\n    { iso3: 'khm', name: 'Camboja', lat: 13, lon: 105 },\n    { iso3: 'lca', name: 'Santa Lúcia', lat: 13.88333333, lon: -60.96666666 },\n    { iso3: 'lka', name: 'Sri Lanka', lat: 7, lon: 81 },\n    { iso3: 'lie', name: 'Liechtenstein', lat: 47.26666666, lon: 9.53333333 },\n    { iso3: 'lso', name: 'Lesoto', lat: -29.5, lon: 28.5 },\n    { iso3: 'lux', name: 'Luxemburgo', lat: 49.75, lon: 6.16666666 },\n    { iso3: 'lva', name: 'Letónia', lat: 57, lon: 25 },\n    { iso3: 'mac', name: 'Macau', lat: 22.16666666, lon: 113.55 },\n    { iso3: 'maf', name: 'São Martinho', lat: 18.08333333, lon: -63.95 },\n    { iso3: 'mar', name: 'Marrocos', lat: 32, lon: -5 },\n    { iso3: 'ltu', name: 'Lituânia', lat: 56, lon: 24 },\n    { iso3: 'mco', name: 'Mónaco', lat: 43.73333333, lon: 7.4 },\n    { iso3: 'mdg', name: 'Madagáscar', lat: -20, lon: 47 },\n    { iso3: 'mdv', name: 'Maldivas', lat: 3.25, lon: 73 },\n    { iso3: 'mex', name: 'México', lat: 23, lon: -102 },\n    { iso3: 'mhl', name: 'Ilhas Marshall', lat: 9, lon: 168 },\n    { iso3: 'mkd', name: 'Macedónia', lat: 41.83333333, lon: 22 },\n    { iso3: 'mli', name: 'Mali', lat: 17, lon: -4 },\n    { iso3: 'mlt', name: 'Malta', lat: 35.83333333, lon: 14.58333333 },\n    { iso3: 'mmr', name: 'Myanmar', lat: 22, lon: 98 },\n    { iso3: 'mne', name: 'Montenegro', lat: 42.5, lon: 19.3 },\n    { iso3: 'mng', name: 'Mongólia', lat: 46, lon: 105 },\n    { iso3: 'mnp', name: 'Marianas Setentrionais', lat: 15.2, lon: 145.75 },\n    { iso3: 'moz', name: 'Moçambique', lat: -18.25, lon: 35 },\n    { iso3: 'mrt', name: 'Mauritânia', lat: 20, lon: -12 },\n    { iso3: 'msr', name: 'Montserrat', lat: 16.75, lon: -62.2 },\n    { iso3: 'mtq', name: 'Martinica', lat: 14.666667, lon: -61 },\n    { iso3: 'mus', name: 'Maurício', lat: -20.28333333, lon: 57.55 },\n    { iso3: 'mwi', name: 'Malawi', lat: -13.5, lon: 34 },\n    { iso3: 'mys', name: 'Malásia', lat: 2.5, lon: 112.5 },\n    { iso3: 'myt', name: 'Mayotte', lat: -12.83333333, lon: 45.16666666 },\n    { iso3: 'nam', name: 'Namíbia', lat: -22, lon: 17 },\n    { iso3: 'ncl', name: 'Nova Caledónia', lat: -21.5, lon: 165.5 },\n    { iso3: 'ner', name: 'Níger', lat: 16, lon: 8 },\n    { iso3: 'nfk', name: 'Ilha Norfolk', lat: -29.03333333, lon: 167.95 },\n    { iso3: 'nga', name: 'Nigéria', lat: 10, lon: 8 },\n    { iso3: 'nic', name: 'Nicarágua', lat: 13, lon: -85 },\n    { iso3: 'niu', name: 'Niue', lat: -19.03333333, lon: -169.86666666 },\n    { iso3: 'nld', name: 'Holanda', lat: 52.5, lon: 5.75 },\n    { iso3: 'nor', name: 'Noruega', lat: 62, lon: 10 },\n    { iso3: 'mda', name: 'Moldávia', lat: 47, lon: 29 },\n    { iso3: 'nru', name: 'Nauru', lat: -0.53333333, lon: 166.91666666 },\n    { iso3: 'nzl', name: 'Nova Zelândia', lat: -41, lon: 174 },\n    { iso3: 'omn', name: 'Omã', lat: 21, lon: 57 },\n    { iso3: 'pak', name: 'Paquistão', lat: 30, lon: 70 },\n    { iso3: 'pan', name: 'Panamá', lat: 9, lon: -80 },\n    { iso3: 'pcn', name: 'Ilhas Pitcairn', lat: -25.06666666, lon: -130.1 },\n    { iso3: 'per', name: 'Perú', lat: -10, lon: -76 },\n    { iso3: 'phl', name: 'Filipinas', lat: 13, lon: 122 },\n    { iso3: 'hti', name: 'Haiti', lat: 19, lon: -72.41666666 },\n    { iso3: 'png', name: 'Papua Nova Guiné', lat: -6, lon: 147 },\n    { iso3: 'pol', name: 'Polónia', lat: 52, lon: 20 },\n    { iso3: 'pri', name: 'Porto Rico', lat: 18.25, lon: -66.5 },\n    { iso3: 'prk', name: 'Coreia do Norte', lat: 40, lon: 127 },\n    { iso3: 'prt', name: 'Portugal', lat: 39.5, lon: -8 },\n    { iso3: 'pry', name: 'Paraguai', lat: -23, lon: -58 },\n    { iso3: 'pse', name: 'Palestina', lat: 31.9, lon: 35.2 },\n    { iso3: 'pyf', name: 'Polinésia Francesa', lat: -15, lon: -140 },\n    { iso3: 'plw', name: 'Palau', lat: 7.5, lon: 134.5 },\n    { iso3: 'grc', name: 'Grécia', lat: 39, lon: 22 },\n    { iso3: 'guf', name: 'Guiana Francesa', lat: 4, lon: -53 },\n    { iso3: 'qat', name: 'Catar', lat: 25.5, lon: 51.25 },\n    { iso3: 'reu', name: 'Reunião', lat: -21.15, lon: 55.5 },\n    { iso3: 'rwa', name: 'Ruanda', lat: -2, lon: 30 },\n    { iso3: 'sdn', name: 'Sudão', lat: 15, lon: 30 },\n    { iso3: 'rou', name: 'Roménia', lat: 46, lon: 25 },\n    { iso3: 'sau', name: 'Arábia Saudita', lat: 25, lon: 45 },\n    { iso3: 'rus', name: 'Rússia', lat: 60, lon: 100 },\n    { iso3: 'sjm', name: 'Ilhas Svalbard e Jan Mayen', lat: 78, lon: 20 },\n    { iso3: 'sgs', name: 'Ilhas Geórgia do Sul e Sandwich do Sul', lat: -54.5, lon: -37 },\n    { iso3: 'sgp', name: 'Singapura', lat: 1.36666666, lon: 103.8 },\n    { iso3: 'sen', name: 'Senegal', lat: 14, lon: -14 },\n    { iso3: 'slb', name: 'Ilhas Salomão', lat: -8, lon: 159 },\n    { iso3: 'sle', name: 'Serra Leoa', lat: 8.5, lon: -11.5 },\n    { iso3: 'smr', name: 'San Marino', lat: 43.76666666, lon: 12.41666666 },\n    { iso3: 'spm', name: 'Saint-Pierre e Miquelat', lat: 46.83333333, lon: -56.33333333 },\n    { iso3: 'slv', name: 'El Salvador', lat: 13.83333333, lon: -88.91666666 },\n    { iso3: 'srb', name: 'Sérvia', lat: 44, lon: 21 },\n    { iso3: 'sur', name: 'Suriname', lat: 4, lon: -56 },\n    { iso3: 'ssd', name: 'Sudão do Sul', lat: 7, lon: 30 },\n    { iso3: 'svk', name: 'Eslováquia', lat: 48.66666666, lon: 19.5 },\n    { iso3: 'svn', name: 'Eslovénia', lat: 46.11666666, lon: 14.81666666 },\n    { iso3: 'swe', name: 'Suécia', lat: 62, lon: 15 },\n    { iso3: 'swz', name: 'Suazilândia', lat: -26.5, lon: 31.5 },\n    { iso3: 'som', name: 'Somália', lat: 10, lon: 49 },\n    { iso3: 'stp', name: 'São Tomé e Príncipe', lat: 1, lon: 7 },\n    { iso3: 'syr', name: 'Síria', lat: 35, lon: 38 },\n    { iso3: 'sxm', name: 'São Martinho', lat: 18.033333, lon: -63.05 },\n    { iso3: 'syc', name: 'Seicheles', lat: -4.58333333, lon: 55.66666666 },\n    { iso3: 'tcd', name: 'Chade', lat: 15, lon: 19 },\n    { iso3: 'tca', name: 'Ilhas Turks e Caicos', lat: 21.75, lon: -71.58333333 },\n    { iso3: 'tgo', name: 'Togo', lat: 8, lon: 1.16666666 },\n    { iso3: 'tha', name: 'Tailândia', lat: 15, lon: 100 },\n    { iso3: 'tjk', name: 'Tajiquistão', lat: 39, lon: 71 },\n    { iso3: 'tkl', name: 'Tokelau', lat: -9, lon: -172 },\n    { iso3: 'tkm', name: 'Turquemenistão', lat: 40, lon: 60 },\n    { iso3: 'tls', name: 'Timor-Leste', lat: -8.83333333, lon: 125.91666666 },\n    { iso3: 'ton', name: 'Tonga', lat: -20, lon: -175 },\n    { iso3: 'tuv', name: 'Tuvalu', lat: -8, lon: 178 },\n    { iso3: 'tur', name: 'Turquia', lat: 39, lon: 35 },\n    { iso3: 'twn', name: 'Ilha Formosa', lat: 23.5, lon: 121 },\n    { iso3: 'tza', name: 'Tanzânia', lat: -6, lon: 35 },\n    { iso3: 'tto', name: 'Trinidade e Tobago', lat: 11, lon: -61 },\n    { iso3: 'tun', name: 'Tunísia', lat: 34, lon: 9 },\n    { iso3: 'umi', name: 'Ilhas Menores Distantes dos Estados Unidos', lat: undefined, lon: undefined },\n    { iso3: 'ury', name: 'Uruguai', lat: -33, lon: -56 },\n    { iso3: 'usa', name: 'Estados Unidos', lat: 38, lon: -97 },\n    { iso3: 'uzb', name: 'Uzbequistão', lat: 41, lon: 64 },\n    { iso3: 'ukr', name: 'Ucrânia', lat: 49, lon: 32 },\n    { iso3: 'vct', name: 'São Vincente e Granadinas', lat: 13.25, lon: -61.2 },\n    { iso3: 'ven', name: 'Venezuela', lat: 8, lon: -66 },\n    { iso3: 'vgb', name: 'Ilhas Virgens', lat: 18.431383, lon: -64.62305 },\n    { iso3: 'vir', name: 'Ilhas Virgens dos Estados Unidos', lat: 18.35, lon: -64.933333 },\n    { iso3: 'uga', name: 'Uganda', lat: 1, lon: 32 },\n    { iso3: 'vat', name: 'Cidade do Vaticano', lat: 41.9, lon: 12.45 },\n    { iso3: 'wlf', name: 'Wallis e Futuna', lat: -13.3, lon: -176.2 },\n    { iso3: 'wsm', name: 'Samoa', lat: -13.58333333, lon: -172.33333333 },\n    { iso3: 'yem', name: 'Iémen', lat: 15, lon: 48 },\n    { iso3: 'vut', name: 'Vanuatu', lat: -16, lon: 167 },\n    { iso3: 'zmb', name: 'Zâmbia', lat: -15, lon: 30 },\n    { iso3: 'zwe', name: 'Zimbabwe', lat: -20, lon: 30 },\n    { iso3: 'npl', name: 'Nepal', lat: 28, lon: 84 },\n    { iso3: 'vnm', name: 'Vietname', lat: 16.16666666, lon: 107.83333333 },\n    { iso3: 'zaf', name: 'África do Sul', lat: -29, lon: 24 }\n]\n\nexport default countries","\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n\r\n  // Remove event specific arrays for event types that no\r\n  // one is subscribed for to avoid memory leak.\r\n  if (callbacks.length === 0) {\r\n    delete this._callbacks['$' + event];\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  var args = new Array(arguments.length - 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  for (var i = 1; i < arguments.length; i++) {\r\n    args[i - 1] = arguments[i];\r\n  }\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n","module.exports = stringify\nstringify.default = stringify\nstringify.stable = deterministicStringify\nstringify.stableStringify = deterministicStringify\n\nvar arr = []\nvar replacerStack = []\n\n// Regular stringify\nfunction stringify (obj, replacer, spacer) {\n  decirc(obj, '', [], undefined)\n  var res\n  if (replacerStack.length === 0) {\n    res = JSON.stringify(obj, replacer, spacer)\n  } else {\n    res = JSON.stringify(obj, replaceGetterValues(replacer), spacer)\n  }\n  while (arr.length !== 0) {\n    var part = arr.pop()\n    if (part.length === 4) {\n      Object.defineProperty(part[0], part[1], part[3])\n    } else {\n      part[0][part[1]] = part[2]\n    }\n  }\n  return res\n}\nfunction decirc (val, k, stack, parent) {\n  var i\n  if (typeof val === 'object' && val !== null) {\n    for (i = 0; i < stack.length; i++) {\n      if (stack[i] === val) {\n        var propertyDescriptor = Object.getOwnPropertyDescriptor(parent, k)\n        if (propertyDescriptor.get !== undefined) {\n          if (propertyDescriptor.configurable) {\n            Object.defineProperty(parent, k, { value: '[Circular]' })\n            arr.push([parent, k, val, propertyDescriptor])\n          } else {\n            replacerStack.push([val, k])\n          }\n        } else {\n          parent[k] = '[Circular]'\n          arr.push([parent, k, val])\n        }\n        return\n      }\n    }\n    stack.push(val)\n    // Optimize for Arrays. Big arrays could kill the performance otherwise!\n    if (Array.isArray(val)) {\n      for (i = 0; i < val.length; i++) {\n        decirc(val[i], i, stack, val)\n      }\n    } else {\n      var keys = Object.keys(val)\n      for (i = 0; i < keys.length; i++) {\n        var key = keys[i]\n        decirc(val[key], key, stack, val)\n      }\n    }\n    stack.pop()\n  }\n}\n\n// Stable-stringify\nfunction compareFunction (a, b) {\n  if (a < b) {\n    return -1\n  }\n  if (a > b) {\n    return 1\n  }\n  return 0\n}\n\nfunction deterministicStringify (obj, replacer, spacer) {\n  var tmp = deterministicDecirc(obj, '', [], undefined) || obj\n  var res\n  if (replacerStack.length === 0) {\n    res = JSON.stringify(tmp, replacer, spacer)\n  } else {\n    res = JSON.stringify(tmp, replaceGetterValues(replacer), spacer)\n  }\n  while (arr.length !== 0) {\n    var part = arr.pop()\n    if (part.length === 4) {\n      Object.defineProperty(part[0], part[1], part[3])\n    } else {\n      part[0][part[1]] = part[2]\n    }\n  }\n  return res\n}\n\nfunction deterministicDecirc (val, k, stack, parent) {\n  var i\n  if (typeof val === 'object' && val !== null) {\n    for (i = 0; i < stack.length; i++) {\n      if (stack[i] === val) {\n        var propertyDescriptor = Object.getOwnPropertyDescriptor(parent, k)\n        if (propertyDescriptor.get !== undefined) {\n          if (propertyDescriptor.configurable) {\n            Object.defineProperty(parent, k, { value: '[Circular]' })\n            arr.push([parent, k, val, propertyDescriptor])\n          } else {\n            replacerStack.push([val, k])\n          }\n        } else {\n          parent[k] = '[Circular]'\n          arr.push([parent, k, val])\n        }\n        return\n      }\n    }\n    if (typeof val.toJSON === 'function') {\n      return\n    }\n    stack.push(val)\n    // Optimize for Arrays. Big arrays could kill the performance otherwise!\n    if (Array.isArray(val)) {\n      for (i = 0; i < val.length; i++) {\n        deterministicDecirc(val[i], i, stack, val)\n      }\n    } else {\n      // Create a temporary object in the required way\n      var tmp = {}\n      var keys = Object.keys(val).sort(compareFunction)\n      for (i = 0; i < keys.length; i++) {\n        var key = keys[i]\n        deterministicDecirc(val[key], key, stack, val)\n        tmp[key] = val[key]\n      }\n      if (parent !== undefined) {\n        arr.push([parent, k, val])\n        parent[k] = tmp\n      } else {\n        return tmp\n      }\n    }\n    stack.pop()\n  }\n}\n\n// wraps replacer function to handle values we couldn't replace\n// and mark them as [Circular]\nfunction replaceGetterValues (replacer) {\n  replacer = replacer !== undefined ? replacer : function (k, v) { return v }\n  return function (key, val) {\n    if (replacerStack.length > 0) {\n      for (var i = 0; i < replacerStack.length; i++) {\n        var part = replacerStack[i]\n        if (part[1] === key && part[0] === val) {\n          val = '[Circular]'\n          replacerStack.splice(i, 1)\n          break\n        }\n      }\n    }\n    return replacer.call(this, key, val)\n  }\n}\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    while (queue.length > 1) {\n        var item = queue.pop();\n        var obj = item.obj[item.prop];\n\n        if (isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    /* eslint no-param-reassign: 0 */\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (isArray(target)) {\n            target.push(source);\n        } else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                var targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str, decoder, charset) {\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n};\n\nvar encode = function encode(str, defaultEncoder, charset) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    } else if (typeof str !== 'string') {\n        string = String(str);\n    }\n\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D // -\n            || c === 0x2E // .\n            || c === 0x5F // _\n            || c === 0x7E // ~\n            || (c >= 0x30 && c <= 0x39) // 0-9\n            || (c >= 0x41 && c <= 0x5A) // a-z\n            || (c >= 0x61 && c <= 0x7A) // A-Z\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        out += hexTable[0xF0 | (c >> 18)]\n            + hexTable[0x80 | ((c >> 12) & 0x3F)]\n            + hexTable[0x80 | ((c >> 6) & 0x3F)]\n            + hexTable[0x80 | (c & 0x3F)];\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    compactQueue(queue);\n\n    return value;\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a, b) {\n    return [].concat(a, b);\n};\n\nvar maybeMap = function maybeMap(val, fn) {\n    if (isArray(val)) {\n        var mapped = [];\n        for (var i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    combine: combine,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    maybeMap: maybeMap,\n    merge: merge\n};\n","'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nvar util = require('./utils');\n\nvar Format = {\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n\nmodule.exports = util.assign(\n    {\n        'default': Format.RFC3986,\n        formatters: {\n            RFC1738: function (value) {\n                return replace.call(value, percentTwenties, '+');\n            },\n            RFC3986: function (value) {\n                return String(value);\n            }\n        }\n    },\n    Format\n);\n","'use strict';\n\nvar utils = require('./utils');\nvar formats = require('./formats');\nvar has = Object.prototype.hasOwnProperty;\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) {\n        return prefix + '[]';\n    },\n    comma: 'comma',\n    indices: function indices(prefix, key) {\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) {\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaultFormat = formats['default'];\nvar defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    delimiter: '&',\n    encode: true,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    format: defaultFormat,\n    formatter: formats.formatters[defaultFormat],\n    // deprecated\n    indices: false,\n    serializeDate: function serializeDate(date) {\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar isNonNullishPrimitive = function isNonNullishPrimitive(v) {\n    return typeof v === 'string'\n        || typeof v === 'number'\n        || typeof v === 'boolean'\n        || typeof v === 'symbol'\n        || typeof v === 'bigint';\n};\n\nvar stringify = function stringify(\n    object,\n    prefix,\n    generateArrayPrefix,\n    strictNullHandling,\n    skipNulls,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    formatter,\n    encodeValuesOnly,\n    charset\n) {\n    var obj = object;\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = utils.maybeMap(obj, function (value) {\n            if (value instanceof Date) {\n                return serializeDate(value);\n            }\n            return value;\n        }).join(',');\n    }\n\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset, 'key') : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, 'key');\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset, 'value'))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n        var value = obj[key];\n\n        if (skipNulls && value === null) {\n            continue;\n        }\n\n        var keyPrefix = isArray(obj)\n            ? typeof generateArrayPrefix === 'function' ? generateArrayPrefix(prefix, key) : prefix\n            : prefix + (allowDots ? '.' + key : '[' + key + ']');\n\n        pushToArray(values, stringify(\n            value,\n            keyPrefix,\n            generateArrayPrefix,\n            strictNullHandling,\n            skipNulls,\n            encoder,\n            filter,\n            sort,\n            allowDots,\n            serializeDate,\n            formatter,\n            encodeValuesOnly,\n            charset\n        ));\n    }\n\n    return values;\n};\n\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.encoder !== null && opts.encoder !== undefined && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    var format = formats['default'];\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formats.formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    var formatter = formats.formatters[format];\n\n    var filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = normalizeStringifyOptions(opts);\n\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (opts && opts.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = opts.arrayFormat;\n    } else if (opts && 'indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (options.sort) {\n        objKeys.sort(options.sort);\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        pushToArray(keys, stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            options.strictNullHandling,\n            options.skipNulls,\n            options.encode ? options.encoder : null,\n            options.filter,\n            options.sort,\n            options.allowDots,\n            options.serializeDate,\n            options.formatter,\n            options.encodeValuesOnly,\n            options.charset\n        ));\n    }\n\n    var joined = keys.join(options.delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        } else {\n            // encodeURIComponent('✓')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n","'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    arrayLimit: 20,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    comma: false,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    ignoreQueryPrefix: false,\n    interpretNumericEntities: false,\n    parameterLimit: 1000,\n    parseArrays: true,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n        return String.fromCharCode(parseInt(numberStr, 10));\n    });\n};\n\nvar parseArrayValue = function (val, options) {\n    if (val && typeof val === 'string' && options.comma && val.indexOf(',') > -1) {\n        return val.split(',');\n    }\n\n    return val;\n};\n\n// This is what browsers will submit when the ✓ character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1, or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the ✓ character, such as us-ascii.\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = {};\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n    var i;\n\n    var charset = options.charset;\n    if (options.charsetSentinel) {\n        for (i = 0; i < parts.length; ++i) {\n            if (parts[i].indexOf('utf8=') === 0) {\n                if (parts[i] === charsetSentinel) {\n                    charset = 'utf-8';\n                } else if (parts[i] === isoSentinel) {\n                    charset = 'iso-8859-1';\n                }\n                skipIndex = i;\n                i = parts.length; // The eslint settings do not allow break;\n            }\n        }\n    }\n\n    for (i = 0; i < parts.length; ++i) {\n        if (i === skipIndex) {\n            continue;\n        }\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder, charset, 'key');\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset, 'key');\n            val = utils.maybeMap(\n                parseArrayValue(part.slice(pos + 1), options),\n                function (encodedVal) {\n                    return options.decoder(encodedVal, defaults.decoder, charset, 'value');\n                }\n            );\n        }\n\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n            val = interpretNumericEntities(val);\n        }\n\n        if (part.indexOf('[]=') > -1) {\n            val = isArray(val) ? [val] : val;\n        }\n\n        if (has.call(obj, key)) {\n            obj[key] = utils.combine(obj[key], val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options, valuesParsed) {\n    var leaf = valuesParsed ? val : parseArrayValue(val, options);\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]' && options.parseArrays) {\n            obj = [].concat(leaf);\n        } else {\n            obj = options.plainObjects ? Object.create(null) : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var index = parseInt(cleanRoot, 10);\n            if (!options.parseArrays && cleanRoot === '') {\n                obj = { 0: leaf };\n            } else if (\n                !isNaN(index)\n                && root !== cleanRoot\n                && String(index) === cleanRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else {\n                obj[cleanRoot] = leaf;\n            }\n        }\n\n        leaf = obj; // eslint-disable-line no-param-reassign\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = options.depth > 0 && brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options, valuesParsed);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n\n    return {\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\n        // eslint-disable-next-line no-implicit-coercion, no-extra-parens\n        depth: (typeof opts.depth === 'number' || opts.depth === false) ? +opts.depth : defaults.depth,\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\n        parseArrays: opts.parseArrays !== false,\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (str, opts) {\n    var options = normalizeParseOptions(opts);\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options, typeof str === 'string');\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    return utils.compact(obj);\n};\n","'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n","/**\n * Check if `obj` is an object.\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\n\nmodule.exports = isObject;\n","/**\n * Module of mixed-in functions shared between node and client code\n */\nconst isObject = require('./is-object');\n\n/**\n * Expose `RequestBase`.\n */\n\nmodule.exports = RequestBase;\n\n/**\n * Initialize a new `RequestBase`.\n *\n * @api public\n */\n\nfunction RequestBase(object) {\n  if (object) return mixin(object);\n}\n\n/**\n * Mixin the prototype properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(object) {\n  for (const key in RequestBase.prototype) {\n    if (Object.prototype.hasOwnProperty.call(RequestBase.prototype, key))\n      object[key] = RequestBase.prototype[key];\n  }\n\n  return object;\n}\n\n/**\n * Clear previous timeout.\n *\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.clearTimeout = function () {\n  clearTimeout(this._timer);\n  clearTimeout(this._responseTimeoutTimer);\n  clearTimeout(this._uploadTimeoutTimer);\n  delete this._timer;\n  delete this._responseTimeoutTimer;\n  delete this._uploadTimeoutTimer;\n  return this;\n};\n\n/**\n * Override default response body parser\n *\n * This function will be called to convert incoming data into request.body\n *\n * @param {Function}\n * @api public\n */\n\nRequestBase.prototype.parse = function (fn) {\n  this._parser = fn;\n  return this;\n};\n\n/**\n * Set format of binary response body.\n * In browser valid formats are 'blob' and 'arraybuffer',\n * which return Blob and ArrayBuffer, respectively.\n *\n * In Node all values result in Buffer.\n *\n * Examples:\n *\n *      req.get('/')\n *        .responseType('blob')\n *        .end(callback);\n *\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.responseType = function (value) {\n  this._responseType = value;\n  return this;\n};\n\n/**\n * Override default request body serializer\n *\n * This function will be called to convert data set via .send or .attach into payload to send\n *\n * @param {Function}\n * @api public\n */\n\nRequestBase.prototype.serialize = function (fn) {\n  this._serializer = fn;\n  return this;\n};\n\n/**\n * Set timeouts.\n *\n * - response timeout is time between sending request and receiving the first byte of the response. Includes DNS and connection time.\n * - deadline is the time from start of the request to receiving response body in full. If the deadline is too short large files may not load at all on slow connections.\n * - upload is the time  since last bit of data was sent or received. This timeout works only if deadline timeout is off\n *\n * Value of 0 or false means no timeout.\n *\n * @param {Number|Object} ms or {response, deadline}\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.timeout = function (options) {\n  if (!options || typeof options !== 'object') {\n    this._timeout = options;\n    this._responseTimeout = 0;\n    this._uploadTimeout = 0;\n    return this;\n  }\n\n  for (const option in options) {\n    if (Object.prototype.hasOwnProperty.call(options, option)) {\n      switch (option) {\n        case 'deadline':\n          this._timeout = options.deadline;\n          break;\n        case 'response':\n          this._responseTimeout = options.response;\n          break;\n        case 'upload':\n          this._uploadTimeout = options.upload;\n          break;\n        default:\n          console.warn('Unknown timeout option', option);\n      }\n    }\n  }\n\n  return this;\n};\n\n/**\n * Set number of retry attempts on error.\n *\n * Failed requests will be retried 'count' times if timeout or err.code >= 500.\n *\n * @param {Number} count\n * @param {Function} [fn]\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.retry = function (count, fn) {\n  // Default to 1 if no count passed or true\n  if (arguments.length === 0 || count === true) count = 1;\n  if (count <= 0) count = 0;\n  this._maxRetries = count;\n  this._retries = 0;\n  this._retryCallback = fn;\n  return this;\n};\n\n//\n// NOTE: we do not include ESOCKETTIMEDOUT because that is from `request` package\n//       <https://github.com/sindresorhus/got/pull/537>\n//\n// NOTE: we do not include EADDRINFO because it was removed from libuv in 2014\n//       <https://github.com/libuv/libuv/commit/02e1ebd40b807be5af46343ea873331b2ee4e9c1>\n//       <https://github.com/request/request/search?q=ESOCKETTIMEDOUT&unscoped_q=ESOCKETTIMEDOUT>\n//\n//\n// TODO: expose these as configurable defaults\n//\nconst ERROR_CODES = new Set([\n  'ETIMEDOUT',\n  'ECONNRESET',\n  'EADDRINUSE',\n  'ECONNREFUSED',\n  'EPIPE',\n  'ENOTFOUND',\n  'ENETUNREACH',\n  'EAI_AGAIN'\n]);\n\nconst STATUS_CODES = new Set([\n  408,\n  413,\n  429,\n  500,\n  502,\n  503,\n  504,\n  521,\n  522,\n  524\n]);\n\n// TODO: we would need to make this easily configurable before adding it in (e.g. some might want to add POST)\n// const METHODS = new Set(['GET', 'PUT', 'HEAD', 'DELETE', 'OPTIONS', 'TRACE']);\n\n/**\n * Determine if a request should be retried.\n * (Inspired by https://github.com/sindresorhus/got#retry)\n *\n * @param {Error} err an error\n * @param {Response} [res] response\n * @returns {Boolean} if segment should be retried\n */\nRequestBase.prototype._shouldRetry = function (err, res) {\n  if (!this._maxRetries || this._retries++ >= this._maxRetries) {\n    return false;\n  }\n\n  if (this._retryCallback) {\n    try {\n      const override = this._retryCallback(err, res);\n      if (override === true) return true;\n      if (override === false) return false;\n      // undefined falls back to defaults\n    } catch (err_) {\n      console.error(err_);\n    }\n  }\n\n  // TODO: we would need to make this easily configurable before adding it in (e.g. some might want to add POST)\n  /*\n  if (\n    this.req &&\n    this.req.method &&\n    !METHODS.has(this.req.method.toUpperCase())\n  )\n    return false;\n  */\n  if (res && res.status && STATUS_CODES.has(res.status)) return true;\n  if (err) {\n    if (err.code && ERROR_CODES.has(err.code)) return true;\n    // Superagent timeout\n    if (err.timeout && err.code === 'ECONNABORTED') return true;\n    if (err.crossDomain) return true;\n  }\n\n  return false;\n};\n\n/**\n * Retry request\n *\n * @return {Request} for chaining\n * @api private\n */\n\nRequestBase.prototype._retry = function () {\n  this.clearTimeout();\n\n  // node\n  if (this.req) {\n    this.req = null;\n    this.req = this.request();\n  }\n\n  this._aborted = false;\n  this.timedout = false;\n  this.timedoutError = null;\n\n  return this._end();\n};\n\n/**\n * Promise support\n *\n * @param {Function} resolve\n * @param {Function} [reject]\n * @return {Request}\n */\n\nRequestBase.prototype.then = function (resolve, reject) {\n  if (!this._fullfilledPromise) {\n    const self = this;\n    if (this._endCalled) {\n      console.warn(\n        'Warning: superagent request was sent twice, because both .end() and .then() were called. Never call .end() if you use promises'\n      );\n    }\n\n    this._fullfilledPromise = new Promise((resolve, reject) => {\n      self.on('abort', () => {\n        if (this._maxRetries && this._maxRetries > this._retries) {\n          return;\n        }\n\n        if (this.timedout && this.timedoutError) {\n          reject(this.timedoutError);\n          return;\n        }\n\n        const err = new Error('Aborted');\n        err.code = 'ABORTED';\n        err.status = this.status;\n        err.method = this.method;\n        err.url = this.url;\n        reject(err);\n      });\n      self.end((err, res) => {\n        if (err) reject(err);\n        else resolve(res);\n      });\n    });\n  }\n\n  return this._fullfilledPromise.then(resolve, reject);\n};\n\nRequestBase.prototype.catch = function (cb) {\n  return this.then(undefined, cb);\n};\n\n/**\n * Allow for extension\n */\n\nRequestBase.prototype.use = function (fn) {\n  fn(this);\n  return this;\n};\n\nRequestBase.prototype.ok = function (cb) {\n  if (typeof cb !== 'function') throw new Error('Callback required');\n  this._okCallback = cb;\n  return this;\n};\n\nRequestBase.prototype._isResponseOK = function (res) {\n  if (!res) {\n    return false;\n  }\n\n  if (this._okCallback) {\n    return this._okCallback(res);\n  }\n\n  return res.status >= 200 && res.status < 300;\n};\n\n/**\n * Get request header `field`.\n * Case-insensitive.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nRequestBase.prototype.get = function (field) {\n  return this._header[field.toLowerCase()];\n};\n\n/**\n * Get case-insensitive header `field` value.\n * This is a deprecated internal API. Use `.get(field)` instead.\n *\n * (getHeader is no longer used internally by the superagent code base)\n *\n * @param {String} field\n * @return {String}\n * @api private\n * @deprecated\n */\n\nRequestBase.prototype.getHeader = RequestBase.prototype.get;\n\n/**\n * Set header `field` to `val`, or multiple fields with one object.\n * Case-insensitive.\n *\n * Examples:\n *\n *      req.get('/')\n *        .set('Accept', 'application/json')\n *        .set('X-API-Key', 'foobar')\n *        .end(callback);\n *\n *      req.get('/')\n *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })\n *        .end(callback);\n *\n * @param {String|Object} field\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.set = function (field, value) {\n  if (isObject(field)) {\n    for (const key in field) {\n      if (Object.prototype.hasOwnProperty.call(field, key))\n        this.set(key, field[key]);\n    }\n\n    return this;\n  }\n\n  this._header[field.toLowerCase()] = value;\n  this.header[field] = value;\n  return this;\n};\n\n/**\n * Remove header `field`.\n * Case-insensitive.\n *\n * Example:\n *\n *      req.get('/')\n *        .unset('User-Agent')\n *        .end(callback);\n *\n * @param {String} field field name\n */\nRequestBase.prototype.unset = function (field) {\n  delete this._header[field.toLowerCase()];\n  delete this.header[field];\n  return this;\n};\n\n/**\n * Write the field `name` and `val`, or multiple fields with one object\n * for \"multipart/form-data\" request bodies.\n *\n * ``` js\n * request.post('/upload')\n *   .field('foo', 'bar')\n *   .end(callback);\n *\n * request.post('/upload')\n *   .field({ foo: 'bar', baz: 'qux' })\n *   .end(callback);\n * ```\n *\n * @param {String|Object} name name of field\n * @param {String|Blob|File|Buffer|fs.ReadStream} val value of field\n * @return {Request} for chaining\n * @api public\n */\nRequestBase.prototype.field = function (name, value) {\n  // name should be either a string or an object.\n  if (name === null || undefined === name) {\n    throw new Error('.field(name, val) name can not be empty');\n  }\n\n  if (this._data) {\n    throw new Error(\n      \".field() can't be used if .send() is used. Please use only .send() or only .field() & .attach()\"\n    );\n  }\n\n  if (isObject(name)) {\n    for (const key in name) {\n      if (Object.prototype.hasOwnProperty.call(name, key))\n        this.field(key, name[key]);\n    }\n\n    return this;\n  }\n\n  if (Array.isArray(value)) {\n    for (const i in value) {\n      if (Object.prototype.hasOwnProperty.call(value, i))\n        this.field(name, value[i]);\n    }\n\n    return this;\n  }\n\n  // val should be defined now\n  if (value === null || undefined === value) {\n    throw new Error('.field(name, val) val can not be empty');\n  }\n\n  if (typeof value === 'boolean') {\n    value = String(value);\n  }\n\n  this._getFormData().append(name, value);\n  return this;\n};\n\n/**\n * Abort the request, and clear potential timeout.\n *\n * @return {Request} request\n * @api public\n */\nRequestBase.prototype.abort = function () {\n  if (this._aborted) {\n    return this;\n  }\n\n  this._aborted = true;\n  if (this.xhr) this.xhr.abort(); // browser\n  if (this.req) this.req.abort(); // node\n  this.clearTimeout();\n  this.emit('abort');\n  return this;\n};\n\nRequestBase.prototype._auth = function (user, pass, options, base64Encoder) {\n  switch (options.type) {\n    case 'basic':\n      this.set('Authorization', `Basic ${base64Encoder(`${user}:${pass}`)}`);\n      break;\n\n    case 'auto':\n      this.username = user;\n      this.password = pass;\n      break;\n\n    case 'bearer': // usage would be .auth(accessToken, { type: 'bearer' })\n      this.set('Authorization', `Bearer ${user}`);\n      break;\n    default:\n      break;\n  }\n\n  return this;\n};\n\n/**\n * Enable transmission of cookies with x-domain requests.\n *\n * Note that for this to work the origin must not be\n * using \"Access-Control-Allow-Origin\" with a wildcard,\n * and also must set \"Access-Control-Allow-Credentials\"\n * to \"true\".\n *\n * @api public\n */\n\nRequestBase.prototype.withCredentials = function (on) {\n  // This is browser-only functionality. Node side is no-op.\n  if (on === undefined) on = true;\n  this._withCredentials = on;\n  return this;\n};\n\n/**\n * Set the max redirects to `n`. Does nothing in browser XHR implementation.\n *\n * @param {Number} n\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.redirects = function (n) {\n  this._maxRedirects = n;\n  return this;\n};\n\n/**\n * Maximum size of buffered response body, in bytes. Counts uncompressed size.\n * Default 200MB.\n *\n * @param {Number} n number of bytes\n * @return {Request} for chaining\n */\nRequestBase.prototype.maxResponseSize = function (n) {\n  if (typeof n !== 'number') {\n    throw new TypeError('Invalid argument');\n  }\n\n  this._maxResponseSize = n;\n  return this;\n};\n\n/**\n * Convert to a plain javascript object (not JSON string) of scalar properties.\n * Note as this method is designed to return a useful non-this value,\n * it cannot be chained.\n *\n * @return {Object} describing method, url, and data of this request\n * @api public\n */\n\nRequestBase.prototype.toJSON = function () {\n  return {\n    method: this.method,\n    url: this.url,\n    data: this._data,\n    headers: this._header\n  };\n};\n\n/**\n * Send `data` as the request body, defaulting the `.type()` to \"json\" when\n * an object is given.\n *\n * Examples:\n *\n *       // manual json\n *       request.post('/user')\n *         .type('json')\n *         .send('{\"name\":\"tj\"}')\n *         .end(callback)\n *\n *       // auto json\n *       request.post('/user')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // manual x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send('name=tj')\n *         .end(callback)\n *\n *       // auto x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // defaults to x-www-form-urlencoded\n *      request.post('/user')\n *        .send('name=tobi')\n *        .send('species=ferret')\n *        .end(callback)\n *\n * @param {String|Object} data\n * @return {Request} for chaining\n * @api public\n */\n\n// eslint-disable-next-line complexity\nRequestBase.prototype.send = function (data) {\n  const isObject_ = isObject(data);\n  let type = this._header['content-type'];\n\n  if (this._formData) {\n    throw new Error(\n      \".send() can't be used if .attach() or .field() is used. Please use only .send() or only .field() & .attach()\"\n    );\n  }\n\n  if (isObject_ && !this._data) {\n    if (Array.isArray(data)) {\n      this._data = [];\n    } else if (!this._isHost(data)) {\n      this._data = {};\n    }\n  } else if (data && this._data && this._isHost(this._data)) {\n    throw new Error(\"Can't merge these send calls\");\n  }\n\n  // merge\n  if (isObject_ && isObject(this._data)) {\n    for (const key in data) {\n      if (Object.prototype.hasOwnProperty.call(data, key))\n        this._data[key] = data[key];\n    }\n  } else if (typeof data === 'string') {\n    // default to x-www-form-urlencoded\n    if (!type) this.type('form');\n    type = this._header['content-type'];\n    if (type) type = type.toLowerCase().trim();\n    if (type === 'application/x-www-form-urlencoded') {\n      this._data = this._data ? `${this._data}&${data}` : data;\n    } else {\n      this._data = (this._data || '') + data;\n    }\n  } else {\n    this._data = data;\n  }\n\n  if (!isObject_ || this._isHost(data)) {\n    return this;\n  }\n\n  // default to json\n  if (!type) this.type('json');\n  return this;\n};\n\n/**\n * Sort `querystring` by the sort function\n *\n *\n * Examples:\n *\n *       // default order\n *       request.get('/user')\n *         .query('name=Nick')\n *         .query('search=Manny')\n *         .sortQuery()\n *         .end(callback)\n *\n *       // customized sort function\n *       request.get('/user')\n *         .query('name=Nick')\n *         .query('search=Manny')\n *         .sortQuery(function(a, b){\n *           return a.length - b.length;\n *         })\n *         .end(callback)\n *\n *\n * @param {Function} sort\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.sortQuery = function (sort) {\n  // _sort default to true but otherwise can be a function or boolean\n  this._sort = typeof sort === 'undefined' ? true : sort;\n  return this;\n};\n\n/**\n * Compose querystring to append to req.url\n *\n * @api private\n */\nRequestBase.prototype._finalizeQueryString = function () {\n  const query = this._query.join('&');\n  if (query) {\n    this.url += (this.url.includes('?') ? '&' : '?') + query;\n  }\n\n  this._query.length = 0; // Makes the call idempotent\n\n  if (this._sort) {\n    const index = this.url.indexOf('?');\n    if (index >= 0) {\n      const queryArray = this.url.slice(index + 1).split('&');\n      if (typeof this._sort === 'function') {\n        queryArray.sort(this._sort);\n      } else {\n        queryArray.sort();\n      }\n\n      this.url = this.url.slice(0, index) + '?' + queryArray.join('&');\n    }\n  }\n};\n\n// For backwards compat only\nRequestBase.prototype._appendQueryString = () => {\n  console.warn('Unsupported');\n};\n\n/**\n * Invoke callback with timeout error.\n *\n * @api private\n */\n\nRequestBase.prototype._timeoutError = function (reason, timeout, errno) {\n  if (this._aborted) {\n    return;\n  }\n\n  const err = new Error(`${reason + timeout}ms exceeded`);\n  err.timeout = timeout;\n  err.code = 'ECONNABORTED';\n  err.errno = errno;\n  this.timedout = true;\n  this.timedoutError = err;\n  this.abort();\n  this.callback(err);\n};\n\nRequestBase.prototype._setTimeouts = function () {\n  const self = this;\n\n  // deadline\n  if (this._timeout && !this._timer) {\n    this._timer = setTimeout(() => {\n      self._timeoutError('Timeout of ', self._timeout, 'ETIME');\n    }, this._timeout);\n  }\n\n  // response timeout\n  if (this._responseTimeout && !this._responseTimeoutTimer) {\n    this._responseTimeoutTimer = setTimeout(() => {\n      self._timeoutError(\n        'Response timeout of ',\n        self._responseTimeout,\n        'ETIMEDOUT'\n      );\n    }, this._responseTimeout);\n  }\n};\n","/**\n * Return the mime type for the given `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nexports.type = (str) => str.split(/ *; */).shift();\n\n/**\n * Return header field parameters.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nexports.params = (val) => {\n  const obj = {};\n  for (const str of val.split(/ *; */)) {\n    const parts = str.split(/ *= */);\n    const key = parts.shift();\n    const val = parts.shift();\n\n    if (key && val) obj[key] = val;\n  }\n\n  return obj;\n};\n\n/**\n * Parse Link header fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nexports.parseLinks = (val) => {\n  const obj = {};\n  for (const str of val.split(/ *, */)) {\n    const parts = str.split(/ *; */);\n    const url = parts[0].slice(1, -1);\n    const rel = parts[1].split(/ *= */)[1].slice(1, -1);\n    obj[rel] = url;\n  }\n\n  return obj;\n};\n\n/**\n * Strip content related fields from `header`.\n *\n * @param {Object} header\n * @return {Object} header\n * @api private\n */\n\nexports.cleanHeader = (header, changesOrigin) => {\n  delete header['content-type'];\n  delete header['content-length'];\n  delete header['transfer-encoding'];\n  delete header.host;\n  // secuirty\n  if (changesOrigin) {\n    delete header.authorization;\n    delete header.cookie;\n  }\n\n  return header;\n};\n","/**\n * Module dependencies.\n */\n\nconst utils = require('./utils');\n\n/**\n * Expose `ResponseBase`.\n */\n\nmodule.exports = ResponseBase;\n\n/**\n * Initialize a new `ResponseBase`.\n *\n * @api public\n */\n\nfunction ResponseBase(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the prototype properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (const key in ResponseBase.prototype) {\n    if (Object.prototype.hasOwnProperty.call(ResponseBase.prototype, key))\n      obj[key] = ResponseBase.prototype[key];\n  }\n\n  return obj;\n}\n\n/**\n * Get case-insensitive `field` value.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nResponseBase.prototype.get = function (field) {\n  return this.header[field.toLowerCase()];\n};\n\n/**\n * Set header related properties:\n *\n *   - `.type` the content type without params\n *\n * A response of \"Content-Type: text/plain; charset=utf-8\"\n * will provide you with a `.type` of \"text/plain\".\n *\n * @param {Object} header\n * @api private\n */\n\nResponseBase.prototype._setHeaderProperties = function (header) {\n  // TODO: moar!\n  // TODO: make this a util\n\n  // content-type\n  const ct = header['content-type'] || '';\n  this.type = utils.type(ct);\n\n  // params\n  const params = utils.params(ct);\n  for (const key in params) {\n    if (Object.prototype.hasOwnProperty.call(params, key))\n      this[key] = params[key];\n  }\n\n  this.links = {};\n\n  // links\n  try {\n    if (header.link) {\n      this.links = utils.parseLinks(header.link);\n    }\n  } catch {\n    // ignore\n  }\n};\n\n/**\n * Set flags such as `.ok` based on `status`.\n *\n * For example a 2xx response will give you a `.ok` of __true__\n * whereas 5xx will be __false__ and `.error` will be __true__. The\n * `.clientError` and `.serverError` are also available to be more\n * specific, and `.statusType` is the class of error ranging from 1..5\n * sometimes useful for mapping respond colors etc.\n *\n * \"sugar\" properties are also defined for common cases. Currently providing:\n *\n *   - .noContent\n *   - .badRequest\n *   - .unauthorized\n *   - .notAcceptable\n *   - .notFound\n *\n * @param {Number} status\n * @api private\n */\n\nResponseBase.prototype._setStatusProperties = function (status) {\n  const type = (status / 100) | 0;\n\n  // status / class\n  this.statusCode = status;\n  this.status = this.statusCode;\n  this.statusType = type;\n\n  // basics\n  this.info = type === 1;\n  this.ok = type === 2;\n  this.redirect = type === 3;\n  this.clientError = type === 4;\n  this.serverError = type === 5;\n  this.error = type === 4 || type === 5 ? this.toError() : false;\n\n  // sugar\n  this.created = status === 201;\n  this.accepted = status === 202;\n  this.noContent = status === 204;\n  this.badRequest = status === 400;\n  this.unauthorized = status === 401;\n  this.notAcceptable = status === 406;\n  this.forbidden = status === 403;\n  this.notFound = status === 404;\n  this.unprocessableEntity = status === 422;\n};\n","function Agent() {\n  this._defaults = [];\n}\n\n[\n  'use',\n  'on',\n  'once',\n  'set',\n  'query',\n  'type',\n  'accept',\n  'auth',\n  'withCredentials',\n  'sortQuery',\n  'retry',\n  'ok',\n  'redirects',\n  'timeout',\n  'buffer',\n  'serialize',\n  'parse',\n  'ca',\n  'key',\n  'pfx',\n  'cert',\n  'disableTLSCerts'\n].forEach((fn) => {\n  // Default setting for all requests from this agent\n  Agent.prototype[fn] = function (...args) {\n    this._defaults.push({ fn, args });\n    return this;\n  };\n});\n\nAgent.prototype._setDefaults = function (req) {\n  this._defaults.forEach((def) => {\n    req[def.fn](...def.args);\n  });\n};\n\nmodule.exports = Agent;\n","/**\n * Root reference for iframes.\n */\n\nlet root;\nif (typeof window !== 'undefined') {\n  // Browser window\n  root = window;\n} else if (typeof self === 'undefined') {\n  // Other environments\n  console.warn(\n    'Using browser-only version of superagent in non-browser environment'\n  );\n  root = this;\n} else {\n  // Web Worker\n  root = self;\n}\n\nconst Emitter = require('component-emitter');\nconst safeStringify = require('fast-safe-stringify');\nconst qs = require('qs');\nconst RequestBase = require('./request-base');\nconst isObject = require('./is-object');\nconst ResponseBase = require('./response-base');\nconst Agent = require('./agent-base');\n\n/**\n * Noop.\n */\n\nfunction noop() {}\n\n/**\n * Expose `request`.\n */\n\nmodule.exports = function (method, url) {\n  // callback\n  if (typeof url === 'function') {\n    return new exports.Request('GET', method).end(url);\n  }\n\n  // url first\n  if (arguments.length === 1) {\n    return new exports.Request('GET', method);\n  }\n\n  return new exports.Request(method, url);\n};\n\nexports = module.exports;\n\nconst request = exports;\n\nexports.Request = Request;\n\n/**\n * Determine XHR.\n */\n\nrequest.getXHR = () => {\n  if (\n    root.XMLHttpRequest &&\n    (!root.location ||\n      root.location.protocol !== 'file:' ||\n      !root.ActiveXObject)\n  ) {\n    return new XMLHttpRequest();\n  }\n\n  try {\n    return new ActiveXObject('Microsoft.XMLHTTP');\n  } catch {}\n\n  try {\n    return new ActiveXObject('Msxml2.XMLHTTP.6.0');\n  } catch {}\n\n  try {\n    return new ActiveXObject('Msxml2.XMLHTTP.3.0');\n  } catch {}\n\n  try {\n    return new ActiveXObject('Msxml2.XMLHTTP');\n  } catch {}\n\n  throw new Error('Browser-only version of superagent could not find XHR');\n};\n\n/**\n * Removes leading and trailing whitespace, added to support IE.\n *\n * @param {String} s\n * @return {String}\n * @api private\n */\n\nconst trim = ''.trim ? (s) => s.trim() : (s) => s.replace(/(^\\s*|\\s*$)/g, '');\n\n/**\n * Serialize the given `obj`.\n *\n * @param {Object} obj\n * @return {String}\n * @api private\n */\n\nfunction serialize(obj) {\n  if (!isObject(obj)) return obj;\n  const pairs = [];\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key))\n      pushEncodedKeyValuePair(pairs, key, obj[key]);\n  }\n\n  return pairs.join('&');\n}\n\n/**\n * Helps 'serialize' with serializing arrays.\n * Mutates the pairs array.\n *\n * @param {Array} pairs\n * @param {String} key\n * @param {Mixed} val\n */\n\nfunction pushEncodedKeyValuePair(pairs, key, val) {\n  if (val === undefined) return;\n  if (val === null) {\n    pairs.push(encodeURI(key));\n    return;\n  }\n\n  if (Array.isArray(val)) {\n    val.forEach((v) => {\n      pushEncodedKeyValuePair(pairs, key, v);\n    });\n  } else if (isObject(val)) {\n    for (const subkey in val) {\n      if (Object.prototype.hasOwnProperty.call(val, subkey))\n        pushEncodedKeyValuePair(pairs, `${key}[${subkey}]`, val[subkey]);\n    }\n  } else {\n    pairs.push(encodeURI(key) + '=' + encodeURIComponent(val));\n  }\n}\n\n/**\n * Expose serialization method.\n */\n\nrequest.serializeObject = serialize;\n\n/**\n * Parse the given x-www-form-urlencoded `str`.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction parseString(str) {\n  const obj = {};\n  const pairs = str.split('&');\n  let pair;\n  let pos;\n\n  for (let i = 0, len = pairs.length; i < len; ++i) {\n    pair = pairs[i];\n    pos = pair.indexOf('=');\n    if (pos === -1) {\n      obj[decodeURIComponent(pair)] = '';\n    } else {\n      obj[decodeURIComponent(pair.slice(0, pos))] = decodeURIComponent(\n        pair.slice(pos + 1)\n      );\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Expose parser.\n */\n\nrequest.parseString = parseString;\n\n/**\n * Default MIME type map.\n *\n *     superagent.types.xml = 'application/xml';\n *\n */\n\nrequest.types = {\n  html: 'text/html',\n  json: 'application/json',\n  xml: 'text/xml',\n  urlencoded: 'application/x-www-form-urlencoded',\n  form: 'application/x-www-form-urlencoded',\n  'form-data': 'application/x-www-form-urlencoded'\n};\n\n/**\n * Default serialization map.\n *\n *     superagent.serialize['application/xml'] = function(obj){\n *       return 'generated xml here';\n *     };\n *\n */\n\nrequest.serialize = {\n  'application/x-www-form-urlencoded': qs.stringify,\n  'application/json': safeStringify\n};\n\n/**\n * Default parsers.\n *\n *     superagent.parse['application/xml'] = function(str){\n *       return { object parsed from str };\n *     };\n *\n */\n\nrequest.parse = {\n  'application/x-www-form-urlencoded': parseString,\n  'application/json': JSON.parse\n};\n\n/**\n * Parse the given header `str` into\n * an object containing the mapped fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction parseHeader(str) {\n  const lines = str.split(/\\r?\\n/);\n  const fields = {};\n  let index;\n  let line;\n  let field;\n  let val;\n\n  for (let i = 0, len = lines.length; i < len; ++i) {\n    line = lines[i];\n    index = line.indexOf(':');\n    if (index === -1) {\n      // could be empty line, just skip it\n      continue;\n    }\n\n    field = line.slice(0, index).toLowerCase();\n    val = trim(line.slice(index + 1));\n    fields[field] = val;\n  }\n\n  return fields;\n}\n\n/**\n * Check if `mime` is json or has +json structured syntax suffix.\n *\n * @param {String} mime\n * @return {Boolean}\n * @api private\n */\n\nfunction isJSON(mime) {\n  // should match /json or +json\n  // but not /json-seq\n  return /[/+]json($|[^-\\w])/i.test(mime);\n}\n\n/**\n * Initialize a new `Response` with the given `xhr`.\n *\n *  - set flags (.ok, .error, etc)\n *  - parse header\n *\n * Examples:\n *\n *  Aliasing `superagent` as `request` is nice:\n *\n *      request = superagent;\n *\n *  We can use the promise-like API, or pass callbacks:\n *\n *      request.get('/').end(function(res){});\n *      request.get('/', function(res){});\n *\n *  Sending data can be chained:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' })\n *        .end(function(res){});\n *\n *  Or passed to `.send()`:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' }, function(res){});\n *\n *  Or passed to `.post()`:\n *\n *      request\n *        .post('/user', { name: 'tj' })\n *        .end(function(res){});\n *\n * Or further reduced to a single call for simple cases:\n *\n *      request\n *        .post('/user', { name: 'tj' }, function(res){});\n *\n * @param {XMLHTTPRequest} xhr\n * @param {Object} options\n * @api private\n */\n\nfunction Response(req) {\n  this.req = req;\n  this.xhr = this.req.xhr;\n  // responseText is accessible only if responseType is '' or 'text' and on older browsers\n  this.text =\n    (this.req.method !== 'HEAD' &&\n      (this.xhr.responseType === '' || this.xhr.responseType === 'text')) ||\n    typeof this.xhr.responseType === 'undefined'\n      ? this.xhr.responseText\n      : null;\n  this.statusText = this.req.xhr.statusText;\n  let { status } = this.xhr;\n  // handle IE9 bug: http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n  if (status === 1223) {\n    status = 204;\n  }\n\n  this._setStatusProperties(status);\n  this.headers = parseHeader(this.xhr.getAllResponseHeaders());\n  this.header = this.headers;\n  // getAllResponseHeaders sometimes falsely returns \"\" for CORS requests, but\n  // getResponseHeader still works. so we get content-type even if getting\n  // other headers fails.\n  this.header['content-type'] = this.xhr.getResponseHeader('content-type');\n  this._setHeaderProperties(this.header);\n\n  if (this.text === null && req._responseType) {\n    this.body = this.xhr.response;\n  } else {\n    this.body =\n      this.req.method === 'HEAD'\n        ? null\n        : this._parseBody(this.text ? this.text : this.xhr.response);\n  }\n}\n\n// eslint-disable-next-line new-cap\nResponseBase(Response.prototype);\n\n/**\n * Parse the given body `str`.\n *\n * Used for auto-parsing of bodies. Parsers\n * are defined on the `superagent.parse` object.\n *\n * @param {String} str\n * @return {Mixed}\n * @api private\n */\n\nResponse.prototype._parseBody = function (str) {\n  let parse = request.parse[this.type];\n  if (this.req._parser) {\n    return this.req._parser(this, str);\n  }\n\n  if (!parse && isJSON(this.type)) {\n    parse = request.parse['application/json'];\n  }\n\n  return parse && str && (str.length > 0 || str instanceof Object)\n    ? parse(str)\n    : null;\n};\n\n/**\n * Return an `Error` representative of this response.\n *\n * @return {Error}\n * @api public\n */\n\nResponse.prototype.toError = function () {\n  const { req } = this;\n  const { method } = req;\n  const { url } = req;\n\n  const msg = `cannot ${method} ${url} (${this.status})`;\n  const err = new Error(msg);\n  err.status = this.status;\n  err.method = method;\n  err.url = url;\n\n  return err;\n};\n\n/**\n * Expose `Response`.\n */\n\nrequest.Response = Response;\n\n/**\n * Initialize a new `Request` with the given `method` and `url`.\n *\n * @param {String} method\n * @param {String} url\n * @api public\n */\n\nfunction Request(method, url) {\n  const self = this;\n  this._query = this._query || [];\n  this.method = method;\n  this.url = url;\n  this.header = {}; // preserves header name case\n  this._header = {}; // coerces header names to lowercase\n  this.on('end', () => {\n    let err = null;\n    let res = null;\n\n    try {\n      res = new Response(self);\n    } catch (err_) {\n      err = new Error('Parser is unable to parse the response');\n      err.parse = true;\n      err.original = err_;\n      // issue #675: return the raw response if the response parsing fails\n      if (self.xhr) {\n        // ie9 doesn't have 'response' property\n        err.rawResponse =\n          typeof self.xhr.responseType === 'undefined'\n            ? self.xhr.responseText\n            : self.xhr.response;\n        // issue #876: return the http status code if the response parsing fails\n        err.status = self.xhr.status ? self.xhr.status : null;\n        err.statusCode = err.status; // backwards-compat only\n      } else {\n        err.rawResponse = null;\n        err.status = null;\n      }\n\n      return self.callback(err);\n    }\n\n    self.emit('response', res);\n\n    let new_err;\n    try {\n      if (!self._isResponseOK(res)) {\n        new_err = new Error(\n          res.statusText || res.text || 'Unsuccessful HTTP response'\n        );\n      }\n    } catch (err_) {\n      new_err = err_; // ok() callback can throw\n    }\n\n    // #1000 don't catch errors from the callback to avoid double calling it\n    if (new_err) {\n      new_err.original = err;\n      new_err.response = res;\n      new_err.status = res.status;\n      self.callback(new_err, res);\n    } else {\n      self.callback(null, res);\n    }\n  });\n}\n\n/**\n * Mixin `Emitter` and `RequestBase`.\n */\n\n// eslint-disable-next-line new-cap\nEmitter(Request.prototype);\n// eslint-disable-next-line new-cap\nRequestBase(Request.prototype);\n\n/**\n * Set Content-Type to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.xml = 'application/xml';\n *\n *      request.post('/')\n *        .type('xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n *      request.post('/')\n *        .type('application/xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n * @param {String} type\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.type = function (type) {\n  this.set('Content-Type', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Accept to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.json = 'application/json';\n *\n *      request.get('/agent')\n *        .accept('json')\n *        .end(callback);\n *\n *      request.get('/agent')\n *        .accept('application/json')\n *        .end(callback);\n *\n * @param {String} accept\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.accept = function (type) {\n  this.set('Accept', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Authorization field value with `user` and `pass`.\n *\n * @param {String} user\n * @param {String} [pass] optional in case of using 'bearer' as type\n * @param {Object} options with 'type' property 'auto', 'basic' or 'bearer' (default 'basic')\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.auth = function (user, pass, options) {\n  if (arguments.length === 1) pass = '';\n  if (typeof pass === 'object' && pass !== null) {\n    // pass is optional and can be replaced with options\n    options = pass;\n    pass = '';\n  }\n\n  if (!options) {\n    options = {\n      type: typeof btoa === 'function' ? 'basic' : 'auto'\n    };\n  }\n\n  const encoder = (string) => {\n    if (typeof btoa === 'function') {\n      return btoa(string);\n    }\n\n    throw new Error('Cannot use basic auth, btoa is not a function');\n  };\n\n  return this._auth(user, pass, options, encoder);\n};\n\n/**\n * Add query-string `val`.\n *\n * Examples:\n *\n *   request.get('/shoes')\n *     .query('size=10')\n *     .query({ color: 'blue' })\n *\n * @param {Object|String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.query = function (val) {\n  if (typeof val !== 'string') val = serialize(val);\n  if (val) this._query.push(val);\n  return this;\n};\n\n/**\n * Queue the given `file` as an attachment to the specified `field`,\n * with optional `options` (or filename).\n *\n * ``` js\n * request.post('/upload')\n *   .attach('content', new Blob(['<a id=\"a\"><b id=\"b\">hey!</b></a>'], { type: \"text/html\"}))\n *   .end(callback);\n * ```\n *\n * @param {String} field\n * @param {Blob|File} file\n * @param {String|Object} options\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.attach = function (field, file, options) {\n  if (file) {\n    if (this._data) {\n      throw new Error(\"superagent can't mix .send() and .attach()\");\n    }\n\n    this._getFormData().append(field, file, options || file.name);\n  }\n\n  return this;\n};\n\nRequest.prototype._getFormData = function () {\n  if (!this._formData) {\n    this._formData = new root.FormData();\n  }\n\n  return this._formData;\n};\n\n/**\n * Invoke the callback with `err` and `res`\n * and handle arity check.\n *\n * @param {Error} err\n * @param {Response} res\n * @api private\n */\n\nRequest.prototype.callback = function (err, res) {\n  if (this._shouldRetry(err, res)) {\n    return this._retry();\n  }\n\n  const fn = this._callback;\n  this.clearTimeout();\n\n  if (err) {\n    if (this._maxRetries) err.retries = this._retries - 1;\n    this.emit('error', err);\n  }\n\n  fn(err, res);\n};\n\n/**\n * Invoke callback with x-domain error.\n *\n * @api private\n */\n\nRequest.prototype.crossDomainError = function () {\n  const err = new Error(\n    'Request has been terminated\\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.'\n  );\n  err.crossDomain = true;\n\n  err.status = this.status;\n  err.method = this.method;\n  err.url = this.url;\n\n  this.callback(err);\n};\n\n// This only warns, because the request is still likely to work\nRequest.prototype.agent = function () {\n  console.warn('This is not supported in browser version of superagent');\n  return this;\n};\n\nRequest.prototype.ca = Request.prototype.agent;\nRequest.prototype.buffer = Request.prototype.ca;\n\n// This throws, because it can't send/receive data as expected\nRequest.prototype.write = () => {\n  throw new Error(\n    'Streaming is not supported in browser version of superagent'\n  );\n};\n\nRequest.prototype.pipe = Request.prototype.write;\n\n/**\n * Check if `obj` is a host object,\n * we don't want to serialize these :)\n *\n * @param {Object} obj host object\n * @return {Boolean} is a host object\n * @api private\n */\nRequest.prototype._isHost = function (obj) {\n  // Native objects stringify to [object File], [object Blob], [object FormData], etc.\n  return (\n    obj &&\n    typeof obj === 'object' &&\n    !Array.isArray(obj) &&\n    Object.prototype.toString.call(obj) !== '[object Object]'\n  );\n};\n\n/**\n * Initiate request, invoking callback `fn(res)`\n * with an instanceof `Response`.\n *\n * @param {Function} fn\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.end = function (fn) {\n  if (this._endCalled) {\n    console.warn(\n      'Warning: .end() was called twice. This is not supported in superagent'\n    );\n  }\n\n  this._endCalled = true;\n\n  // store callback\n  this._callback = fn || noop;\n\n  // querystring\n  this._finalizeQueryString();\n\n  this._end();\n};\n\nRequest.prototype._setUploadTimeout = function () {\n  const self = this;\n\n  // upload timeout it's wokrs only if deadline timeout is off\n  if (this._uploadTimeout && !this._uploadTimeoutTimer) {\n    this._uploadTimeoutTimer = setTimeout(() => {\n      self._timeoutError(\n        'Upload timeout of ',\n        self._uploadTimeout,\n        'ETIMEDOUT'\n      );\n    }, this._uploadTimeout);\n  }\n};\n\n// eslint-disable-next-line complexity\nRequest.prototype._end = function () {\n  if (this._aborted)\n    return this.callback(\n      new Error('The request has been aborted even before .end() was called')\n    );\n\n  const self = this;\n  this.xhr = request.getXHR();\n  const { xhr } = this;\n  let data = this._formData || this._data;\n\n  this._setTimeouts();\n\n  // state change\n  xhr.onreadystatechange = () => {\n    const { readyState } = xhr;\n    if (readyState >= 2 && self._responseTimeoutTimer) {\n      clearTimeout(self._responseTimeoutTimer);\n    }\n\n    if (readyState !== 4) {\n      return;\n    }\n\n    // In IE9, reads to any property (e.g. status) off of an aborted XHR will\n    // result in the error \"Could not complete the operation due to error c00c023f\"\n    let status;\n    try {\n      status = xhr.status;\n    } catch {\n      status = 0;\n    }\n\n    if (!status) {\n      if (self.timedout || self._aborted) return;\n      return self.crossDomainError();\n    }\n\n    self.emit('end');\n  };\n\n  // progress\n  const handleProgress = (direction, e) => {\n    if (e.total > 0) {\n      e.percent = (e.loaded / e.total) * 100;\n\n      if (e.percent === 100) {\n        clearTimeout(self._uploadTimeoutTimer);\n      }\n    }\n\n    e.direction = direction;\n    self.emit('progress', e);\n  };\n\n  if (this.hasListeners('progress')) {\n    try {\n      xhr.addEventListener('progress', handleProgress.bind(null, 'download'));\n      if (xhr.upload) {\n        xhr.upload.addEventListener(\n          'progress',\n          handleProgress.bind(null, 'upload')\n        );\n      }\n    } catch {\n      // Accessing xhr.upload fails in IE from a web worker, so just pretend it doesn't exist.\n      // Reported here:\n      // https://connect.microsoft.com/IE/feedback/details/837245/xmlhttprequest-upload-throws-invalid-argument-when-used-from-web-worker-context\n    }\n  }\n\n  if (xhr.upload) {\n    this._setUploadTimeout();\n  }\n\n  // initiate request\n  try {\n    if (this.username && this.password) {\n      xhr.open(this.method, this.url, true, this.username, this.password);\n    } else {\n      xhr.open(this.method, this.url, true);\n    }\n  } catch (err) {\n    // see #1149\n    return this.callback(err);\n  }\n\n  // CORS\n  if (this._withCredentials) xhr.withCredentials = true;\n\n  // body\n  if (\n    !this._formData &&\n    this.method !== 'GET' &&\n    this.method !== 'HEAD' &&\n    typeof data !== 'string' &&\n    !this._isHost(data)\n  ) {\n    // serialize stuff\n    const contentType = this._header['content-type'];\n    let serialize =\n      this._serializer ||\n      request.serialize[contentType ? contentType.split(';')[0] : ''];\n    if (!serialize && isJSON(contentType)) {\n      serialize = request.serialize['application/json'];\n    }\n\n    if (serialize) data = serialize(data);\n  }\n\n  // set header fields\n  for (const field in this.header) {\n    if (this.header[field] === null) continue;\n\n    if (Object.prototype.hasOwnProperty.call(this.header, field))\n      xhr.setRequestHeader(field, this.header[field]);\n  }\n\n  if (this._responseType) {\n    xhr.responseType = this._responseType;\n  }\n\n  // send stuff\n  this.emit('request', this);\n\n  // IE11 xhr.send(undefined) sends 'undefined' string as POST payload (instead of nothing)\n  // We need null here if data is undefined\n  xhr.send(typeof data === 'undefined' ? null : data);\n};\n\nrequest.agent = () => new Agent();\n\n['GET', 'POST', 'OPTIONS', 'PATCH', 'PUT', 'DELETE'].forEach((method) => {\n  Agent.prototype[method.toLowerCase()] = function (url, fn) {\n    const req = new request.Request(method, url);\n    this._setDefaults(req);\n    if (fn) {\n      req.end(fn);\n    }\n\n    return req;\n  };\n});\n\nAgent.prototype.del = Agent.prototype.delete;\n\n/**\n * GET `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.get = (url, data, fn) => {\n  const req = request('GET', url);\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) req.query(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * HEAD `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.head = (url, data, fn) => {\n  const req = request('HEAD', url);\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) req.query(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * OPTIONS query to `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.options = (url, data, fn) => {\n  const req = request('OPTIONS', url);\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * DELETE `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nfunction del(url, data, fn) {\n  const req = request('DELETE', url);\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n}\n\nrequest.del = del;\nrequest.delete = del;\n\n/**\n * PATCH `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.patch = (url, data, fn) => {\n  const req = request('PATCH', url);\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * POST `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.post = (url, data, fn) => {\n  const req = request('POST', url);\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * PUT `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.put = (url, data, fn) => {\n  const req = request('PUT', url);\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n","import countries from './countries'\nimport superagent from 'superagent'\n\nconst URL = 'https://api.reliefweb.int/v1/disasters?appname=omundoagora&profile=full&offset=0&limit=10&preset=latest'\n\n/* function getAffectedCountries() {\n  let affectedCountries = []\n  return superagent.get(URL).then(result => {\n    result.data.data.forEach(disaster => {\n      affectedCountries.push(countries.find(country => country.iso3 == disaster.fields.country[0].iso3))\n    })\n    return affectedCountries\n  })\n} */\n\nfunction getAffectedCountries() {\n  let affectedCountries = []\n  return superagent.get(URL).then(result => {\n    result.body.data.forEach(disaster => {\n      affectedCountries.push(countries.find(country => country.iso3 == disaster.fields.country[0].iso3))\n    })\n    return affectedCountries\n  })\n}\n\nexport default getAffectedCountries","import { createApp } from 'vue/dist/vue.esm-bundler.js' \nimport getAffectedCountries from './api.js'\n\nconst rootComponent = {\n  data() {\n    return {\n      affected: []\n    }\n  },\n   beforeCreate() {\n      getAffectedCountries().then(affectedCountries => {\n        this.affected = affectedCountries\n      })\n    },\n    mounted() {\n     \n    }\n}\n\nconst app = createApp(rootComponent)\napp.mount('#app')"]}